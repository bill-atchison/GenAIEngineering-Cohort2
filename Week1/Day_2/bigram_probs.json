{
  "clarion language": {
    "programming": 0.5873015873015873,
    "client": 0.031746031746031744,
    "tools": 0.047619047619047616,
    "provides": 0.031746031746031744,
    "you": 0.031746031746031744,
    "ok": 0.015873015873015872,
    "fully": 0.015873015873015872,
    "is": 0.015873015873015872,
    "has": 0.031746031746031744,
    "contains": 0.015873015873015872,
    "syntax": 0.015873015873015872,
    "automatically": 0.015873015873015872,
    "terms": 0.015873015873015872,
    "supports": 0.031746031746031744,
    "file": 0.015873015873015872,
    "s": 0.015873015873015872,
    "statements": 0.015873015873015872,
    "property": 0.015873015873015872,
    "one": 0.015873015873015872,
    "create": 0.015873015873015872
  },
  "language programming": {
    "guide": 1.0
  },
  "programming guide": {
    "2": 0.02702702702702703,
    "4": 0.02702702702702703,
    "6": 0.02702702702702703,
    "8": 0.02702702702702703,
    "10": 0.02702702702702703,
    "12": 0.02702702702702703,
    "14": 0.02702702702702703,
    "16": 0.02702702702702703,
    "18": 0.02702702702702703,
    "20": 0.02702702702702703,
    "22": 0.02702702702702703,
    "24": 0.02702702702702703,
    "26": 0.02702702702702703,
    "28": 0.02702702702702703,
    "30": 0.02702702702702703,
    "32": 0.02702702702702703,
    "34": 0.02702702702702703,
    "36": 0.02702702702702703,
    "38": 0.02702702702702703,
    "40": 0.02702702702702703,
    "42": 0.02702702702702703,
    "44": 0.02702702702702703,
    "46": 0.02702702702702703,
    "48": 0.02702702702702703,
    "50": 0.02702702702702703,
    "52": 0.02702702702702703,
    "54": 0.02702702702702703,
    "56": 0.02702702702702703,
    "58": 0.02702702702702703,
    "60": 0.02702702702702703,
    "62": 0.02702702702702703,
    "64": 0.02702702702702703,
    "66": 0.02702702702702703,
    "68": 0.02702702702702703,
    "70": 0.02702702702702703,
    "72": 0.02702702702702703,
    "74": 0.02702702702702703
  },
  "guide 2": {
    "copyright": 1.0
  },
  "2 copyright": {
    "softvelocity": 1.0
  },
  "copyright softvelocity": {
    "inc": 1.0
  },
  "softvelocity inc": {
    "all": 1.0
  },
  "inc all": {
    "rights": 1.0
  },
  "all rights": {
    "reserved": 0.5,
    "are": 0.5
  },
  "rights reserved": {
    "this": 1.0
  },
  "reserved this": {
    "publication": 1.0
  },
  "this publication": {
    "is": 0.5,
    "supports": 0.5
  },
  "publication is": {
    "protected": 1.0
  },
  "is protected": {
    "by": 1.0
  },
  "protected by": {
    "copyright": 1.0
  },
  "by copyright": {
    "and": 1.0
  },
  "copyright and": {
    "all": 1.0
  },
  "and all": {
    "rights": 0.3333333333333333,
    "the": 0.3333333333333333,
    "disk": 0.3333333333333333
  },
  "rights are": {
    "reserved": 1.0
  },
  "are reserved": {
    "by": 1.0
  },
  "reserved by": {
    "softvelocity": 1.0
  },
  "by softvelocity": {
    "incorporated": 1.0
  },
  "softvelocity incorporated": {
    "it": 0.2,
    "this": 0.2,
    "provides": 0.2,
    "clarion": 0.2,
    "all": 0.2
  },
  "incorporated it": {
    "may": 1.0
  },
  "it may": {
    "not": 0.25,
    "contain": 0.125,
    "be": 0.625
  },
  "may not": {
    "in": 0.125,
    "be": 0.25,
    "contain": 0.125,
    "need": 0.5
  },
  "not in": {
    "whole": 0.5,
    "any": 0.5
  },
  "in whole": {
    "or": 1.0
  },
  "whole or": {
    "part": 1.0
  },
  "or part": {
    "be": 1.0
  },
  "part be": {
    "copied": 1.0
  },
  "be copied": {
    "photocopied": 1.0
  },
  "copied photocopied": {
    "reproduced": 1.0
  },
  "photocopied reproduced": {
    "translated": 1.0
  },
  "reproduced translated": {
    "or": 1.0
  },
  "translated or": {
    "reduced": 1.0
  },
  "or reduced": {
    "to": 1.0
  },
  "reduced to": {
    "any": 1.0
  },
  "to any": {
    "electronic": 0.2,
    "structured": 0.2,
    "code": 0.4,
    "meaningful": 0.2
  },
  "any electronic": {
    "medium": 1.0
  },
  "electronic medium": {
    "or": 1.0
  },
  "medium or": {
    "machine": 1.0
  },
  "or machine": {
    "readable": 1.0
  },
  "machine readable": {
    "form": 1.0
  },
  "readable form": {
    "without": 1.0
  },
  "form without": {
    "prior": 1.0
  },
  "without prior": {
    "consent": 1.0
  },
  "prior consent": {
    "in": 1.0
  },
  "consent in": {
    "writing": 1.0
  },
  "in writing": {
    "from": 1.0
  },
  "writing from": {
    "softvelocity": 1.0
  },
  "from softvelocity": {
    "incorporated": 1.0
  },
  "incorporated this": {
    "publication": 1.0
  },
  "publication supports": {
    "clarion": 1.0
  },
  "supports clarion": {
    "it": 1.0
  },
  "clarion it": {
    "is": 1.0
  },
  "it is": {
    "possible": 0.05,
    "called": 0.05,
    "lar": 0.025,
    "allocated": 0.025,
    "that": 0.025,
    "referring": 0.025,
    "declared": 0.025,
    "and": 0.025,
    "attached": 0.025,
    "derived": 0.075,
    "for": 0.025,
    "written": 0.025,
    "given": 0.025,
    "actually": 0.05,
    "important": 0.025,
    "placed": 0.05,
    "defined": 0.025,
    "always": 0.025,
    "used": 0.025,
    "replaced": 0.025,
    "gone": 0.025,
    "compared": 0.025,
    "being": 0.05,
    "in": 0.025,
    "explicitly": 0.025,
    "retrieved": 0.025,
    "the": 0.025,
    "left": 0.025,
    "a": 0.025,
    "complete": 0.025,
    "successful": 0.025,
    "detected": 0.025,
    "much": 0.025
  },
  "is possible": {
    "that": 0.5,
    "for": 0.5
  },
  "possible that": {
    "it": 1.0
  },
  "that it": {
    "may": 0.14285714285714285,
    "become": 0.14285714285714285,
    "takes": 0.14285714285714285,
    "won": 0.14285714285714285,
    "can": 0.14285714285714285,
    "accurately": 0.14285714285714285,
    "is": 0.14285714285714285
  },
  "may contain": {
    "technical": 0.16666666666666666,
    "routines": 0.16666666666666666,
    "a": 0.16666666666666666,
    "module": 0.16666666666666666,
    "are": 0.16666666666666666,
    "da": 0.16666666666666666
  },
  "contain technical": {
    "or": 1.0
  },
  "technical or": {
    "typographical": 1.0
  },
  "or typographical": {
    "errors": 1.0
  },
  "typographical errors": {
    "softvelocity": 1.0
  },
  "errors softvelocity": {
    "incorporated": 1.0
  },
  "incorporated provides": {
    "thi": 1.0
  },
  "provides thi": {
    "s": 1.0
  },
  "thi s": {
    "publication": 1.0
  },
  "s publication": {
    "as": 1.0
  },
  "publication as": {
    "is": 1.0
  },
  "as is": {
    "without": 1.0
  },
  "is without": {
    "warranty": 1.0
  },
  "without warranty": {
    "of": 1.0
  },
  "warranty of": {
    "any": 1.0
  },
  "of any": {
    "kind": 0.14285714285714285,
    "local": 0.14285714285714285,
    "object": 0.14285714285714285,
    "reference": 0.14285714285714285,
    "pool": 0.14285714285714285,
    "class": 0.14285714285714285,
    "database": 0.14285714285714285
  },
  "any kind": {
    "either": 0.5,
    "of": 0.5
  },
  "kind either": {
    "expressed": 1.0
  },
  "either expressed": {
    "or": 1.0
  },
  "expressed or": {
    "implied": 1.0
  },
  "or implied": {
    "www": 1.0
  },
  "implied www": {
    "softvelocity": 1.0
  },
  "www softvelocity": {
    "com": 1.0
  },
  "softvelocity com": {
    "trademark": 1.0
  },
  "com trademark": {
    "acknowledgements": 1.0
  },
  "trademark acknowledgements": {
    "softvelocity": 1.0
  },
  "acknowledgements softvelocity": {
    "is": 1.0
  },
  "softvelocity is": {
    "a": 1.0
  },
  "is a": {
    "trademark": 0.047619047619047616,
    "topic": 0.023809523809523808,
    "general": 0.023809523809523808,
    "member": 0.023809523809523808,
    "concept": 0.023809523809523808,
    "bad": 0.023809523809523808,
    "better": 0.023809523809523808,
    "container": 0.047619047619047616,
    "specific": 0.047619047619047616,
    "class": 0.023809523809523808,
    "really": 0.023809523809523808,
    "virtual": 0.023809523809523808,
    "method": 0.047619047619047616,
    "single": 0.023809523809523808,
    "separate": 0.023809523809523808,
    "matter": 0.023809523809523808,
    "procedure": 0.023809523809523808,
    "friend": 0.023809523809523808,
    "mechanism": 0.023809523809523808,
    "dummy": 0.023809523809523808,
    "very": 0.023809523809523808,
    "situation": 0.023809523809523808,
    "unique": 0.023809523809523808,
    "discussion": 0.047619047619047616,
    "distinct": 0.023809523809523808,
    "conflict": 0.023809523809523808,
    "copy": 0.023809523809523808,
    "bit": 0.023809523809523808,
    "mission": 0.023809523809523808,
    "dynamic": 0.023809523809523808,
    "programming": 0.023809523809523808,
    "generic": 0.023809523809523808,
    "property": 0.047619047619047616,
    "key": 0.023809523809523808,
    "data": 0.023809523809523808,
    "pre": 0.023809523809523808
  },
  "a trademark": {
    "of": 1.0
  },
  "trademark of": {
    "softvelocity": 1.0
  },
  "of softvelocity": {
    "incorporated": 1.0
  },
  "incorporated clarion": {
    "is": 1.0
  },
  "clarion is": {
    "a": 0.5,
    "optimized": 0.5
  },
  "incorporated all": {
    "other": 1.0
  },
  "all other": {
    "products": 0.5,
    "instances": 0.5
  },
  "other products": {
    "and": 1.0
  },
  "products and": {
    "company": 0.5,
    "one": 0.5
  },
  "and company": {
    "names": 1.0
  },
  "company names": {
    "are": 1.0
  },
  "names are": {
    "trademarks": 1.0
  },
  "are trademarks": {
    "of": 1.0
  },
  "trademarks of": {
    "t": 1.0
  },
  "of t": {
    "heir": 1.0
  },
  "t heir": {
    "respective": 1.0
  },
  "heir respective": {
    "owners": 1.0
  },
  "respective owners": {
    "contents": 1.0
  },
  "owners contents": {
    "1": 1.0
  },
  "contents 1": {
    "program": 1.0
  },
  "1 program": {
    "structure": 1.0
  },
  "program structure": {
    "5": 0.2,
    "1": 0.2,
    "structured": 0.2,
    "member": 0.2,
    "program": 0.2
  },
  "structure 5": {
    "structured": 1.0
  },
  "5 structured": {
    "programming": 1.0
  },
  "structured programming": {
    "5": 0.3333333333333333,
    "the": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "programming 5": {
    "proced": 1.0
  },
  "5 proced": {
    "ures": 1.0
  },
  "proced ures": {
    "5": 1.0
  },
  "ures 5": {
    "local": 1.0
  },
  "5 local": {
    "stack": 1.0
  },
  "local stack": {
    "based": 1.0
  },
  "stack based": {
    "data": 0.6666666666666666,
    "variables": 0.3333333333333333
  },
  "based data": {
    "declarations": 1.0
  },
  "data declarations": {
    "5": 0.14285714285714285,
    "every": 0.14285714285714285,
    "a": 0.14285714285714285,
    "using": 0.14285714285714285,
    "and": 0.2857142857142857,
    "savcrc": 0.14285714285714285
  },
  "declarations 5": {
    "contents": 1.0
  },
  "5 contents": {
    "3": 1.0
  },
  "contents 3": {
    "program": 1.0
  },
  "3 program": {
    "map": 1.0
  },
  "program map": {
    "5": 0.1111111111111111,
    "just": 0.1111111111111111,
    "in": 0.1111111111111111,
    "contains": 0.1111111111111111,
    "but": 0.1111111111111111,
    "a": 0.1111111111111111,
    "must": 0.1111111111111111,
    "or": 0.1111111111111111,
    "declares": 0.1111111111111111
  },
  "map 5": {
    "module": 0.5,
    "member": 0.5
  },
  "5 module": {
    "6": 1.0
  },
  "module 6": {
    "member": 0.5,
    "multiple": 0.5
  },
  "6 member": {
    "6": 0.5,
    "maps": 0.5
  },
  "member 6": {
    "member": 0.5,
    "module": 0.5
  },
  "member maps": {
    "7": 0.16666666666666666,
    "8": 0.16666666666666666,
    "a": 0.16666666666666666,
    "just": 0.16666666666666666,
    "instead": 0.16666666666666666,
    "only": 0.16666666666666666
  },
  "maps 7": {
    "modules": 1.0
  },
  "7 modules": {
    "within": 1.0
  },
  "modules within": {
    "member": 1.0
  },
  "within member": {
    "maps": 1.0
  },
  "maps 8": {
    "procedure": 1.0
  },
  "8 procedure": {
    "maps": 1.0
  },
  "procedure maps": {
    "9": 0.5,
    "you": 0.5
  },
  "maps 9": {
    "summary": 1.0
  },
  "9 summary": {
    "10": 1.0
  },
  "summary 10": {
    "2": 1.0
  },
  "10 2": {
    "clarion": 1.0
  },
  "2 clarion": {
    "objects": 1.0
  },
  "clarion objects": {
    "overview": 1.0
  },
  "objects overview": {
    "11": 1.0
  },
  "overview 11": {
    "opening": 1.0
  },
  "11 opening": {
    "shots": 0.5,
    "files": 0.5
  },
  "opening shots": {
    "11": 0.5,
    "i": 0.5
  },
  "shots 11": {
    "procedural": 1.0
  },
  "11 procedural": {
    "code": 1.0
  },
  "procedural code": {
    "re": 0.5,
    "procedural": 0.25,
    "you": 0.25
  },
  "code re": {
    "visited": 0.5,
    "use": 0.5
  },
  "re visited": {
    "11": 0.5,
    "we": 0.5
  },
  "visited 11": {
    "class": 1.0
  },
  "11 class": {
    "declaration": 1.0
  },
  "class declaration": {
    "12": 0.1,
    "clarion": 0.1,
    "declares": 0.1,
    "starts": 0.1,
    "above": 0.1,
    "with": 0.1,
    "w": 0.1,
    "can": 0.1,
    "like": 0.1,
    "within": 0.1
  },
  "declaration 12": {
    "encapsulat": 1.0
  },
  "12 encapsulat": {
    "ion": 1.0
  },
  "encapsulat ion": {
    "12": 1.0
  },
  "ion 12": {
    "instantiation": 1.0
  },
  "12 instantiation": {
    "13": 1.0
  },
  "instantiation 13": {
    "field": 1.0
  },
  "13 field": {
    "qualification": 1.0
  },
  "field qualification": {
    "syntax": 1.0
  },
  "qualification syntax": {
    "14": 0.5,
    "clarion": 0.25,
    "the": 0.25
  },
  "syntax 14": {
    "constructors": 0.5,
    "file": 0.5
  },
  "14 constructors": {
    "and": 1.0
  },
  "constructors and": {
    "destructors": 1.0
  },
  "and destructors": {
    "14": 0.043478260869565216,
    "19": 0.043478260869565216,
    "29": 0.043478260869565216,
    "there": 0.043478260869565216,
    "when": 0.043478260869565216,
    "in": 0.08695652173913043,
    "an": 0.043478260869565216,
    "and": 0.08695652173913043,
    "the": 0.043478260869565216,
    "well": 0.043478260869565216,
    "what": 0.043478260869565216,
    "work": 0.043478260869565216,
    "are": 0.08695652173913043,
    "have": 0.043478260869565216,
    "is": 0.043478260869565216,
    "but": 0.043478260869565216,
    "virtual": 0.043478260869565216,
    "constructors": 0.043478260869565216,
    "doesn": 0.043478260869565216,
    "anyway": 0.043478260869565216
  },
  "destructors 14": {
    "more": 0.5,
    "dispose": 0.5
  },
  "14 more": {
    "about": 1.0
  },
  "more about": {
    "encapsulation": 0.75,
    "automatic": 0.25
  },
  "about encapsulation": {
    "15": 0.25,
    "to": 0.25,
    "and": 0.25,
    "in": 0.25
  },
  "encapsulation 15": {
    "inheritance": 1.0
  },
  "15 inheritance": {
    "16": 1.0
  },
  "inheritance 16": {
    "as": 0.5,
    "25": 0.5
  },
  "16 as": {
    "easy": 1.0
  },
  "as easy": {
    "as": 1.0
  },
  "easy as": {
    "apple": 1.0
  },
  "as apple": {
    "pie": 0.6666666666666666,
    "and": 0.3333333333333333
  },
  "apple pie": {
    "16": 0.2,
    "one": 0.2,
    "the": 0.2,
    "needs": 0.2,
    "so": 0.2
  },
  "pie 16": {
    "multiple": 1.0
  },
  "16 multiple": {
    "inheritance": 1.0
  },
  "multiple inheritance": {
    "17": 0.14285714285714285,
    "vs": 0.14285714285714285,
    "you": 0.07142857142857142,
    "in": 0.07142857142857142,
    "there": 0.07142857142857142,
    "would": 0.07142857142857142,
    "without": 0.14285714285714285,
    "which": 0.07142857142857142,
    "wherein": 0.07142857142857142,
    "simply": 0.07142857142857142,
    "virtual": 0.07142857142857142
  },
  "inheritance 17": {
    "composition": 0.5,
    "multi": 0.5
  },
  "17 composition": {
    "17": 1.0
  },
  "composition 17": {
    "more": 0.5,
    "35": 0.5
  },
  "17 more": {
    "ab": 1.0
  },
  "more ab": {
    "out": 1.0
  },
  "ab out": {
    "encapsulation": 1.0
  },
  "out encapsulation": {
    "18": 1.0
  },
  "encapsulation 18": {
    "and": 1.0
  },
  "18 and": {
    "more": 0.5,
    "even": 0.5
  },
  "and more": {
    "on": 1.0
  },
  "more on": {
    "constructors": 0.6666666666666666,
    "this": 0.3333333333333333
  },
  "on constructors": {
    "and": 1.0
  },
  "destructors 19": {
    "parent": 1.0
  },
  "19 parent": {
    "19": 1.0
  },
  "parent 19": {
    "polymorphism": 1.0
  },
  "19 polymorphism": {
    "20": 1.0
  },
  "polymorphism 20": {
    "virtual": 0.5,
    "26": 0.5
  },
  "20 virtual": {
    "methods": 1.0
  },
  "virtual methods": {
    "20": 0.0625,
    "polymorphism": 0.0625,
    "now": 0.03125,
    "are": 0.125,
    "must": 0.03125,
    "so": 0.03125,
    "down": 0.03125,
    "allow": 0.0625,
    "makefilling": 0.0625,
    "can": 0.0625,
    "in": 0.09375,
    "this": 0.0625,
    "late": 0.03125,
    "if": 0.03125,
    "as": 0.03125,
    "the": 0.03125,
    "it": 0.03125,
    "that": 0.03125,
    "on": 0.03125,
    "for": 0.03125,
    "need": 0.03125
  },
  "methods 20": {
    "more": 0.5,
    "36": 0.5
  },
  "20 more": {
    "apple": 1.0
  },
  "more apple": {
    "p": 0.5,
    "pie": 0.5
  },
  "apple p": {
    "ie": 1.0
  },
  "p ie": {
    "21": 1.0
  },
  "ie 21": {
    "late": 1.0
  },
  "21 late": {
    "binding": 1.0
  },
  "late binding": {
    "22": 0.18181818181818182,
    "early": 0.09090909090909091,
    "at": 0.09090909090909091,
    "means": 0.09090909090909091,
    "for": 0.09090909090909091,
    "process": 0.09090909090909091,
    "and": 0.09090909090909091,
    "instead": 0.09090909090909091,
    "the": 0.09090909090909091,
    "26": 0.09090909090909091
  },
  "binding 22": {
    "local": 1.0
  },
  "22 local": {
    "derived": 1.0
  },
  "local derived": {
    "methods": 0.9166666666666666,
    "method": 0.08333333333333333
  },
  "derived methods": {
    "23": 0.2727272727272727,
    "37": 0.09090909090909091,
    "local": 0.09090909090909091,
    "are": 0.09090909090909091,
    "inherit": 0.09090909090909091,
    "that": 0.09090909090909091,
    "is": 0.09090909090909091,
    "and": 0.09090909090909091,
    "methods": 0.09090909090909091
  },
  "methods 23": {
    "summary": 0.3333333333333333,
    "easing": 0.3333333333333333,
    "37": 0.3333333333333333
  },
  "23 summary": {
    "23": 1.0
  },
  "summary 23": {
    "3": 1.0
  },
  "23 3": {
    "object": 1.0
  },
  "3 object": {
    "oriented": 1.0
  },
  "object oriented": {
    "programming": 0.7272727272727273,
    "extens": 0.045454545454545456,
    "parlance": 0.045454545454545456,
    "languages": 0.18181818181818182
  },
  "oriented programming": {
    "oop": 0.1875,
    "in": 0.125,
    "so": 0.125,
    "3": 0.0625,
    "is": 0.0625,
    "class": 0.0625,
    "using": 0.0625,
    "derived": 0.0625,
    "this": 0.0625,
    "multiple": 0.0625,
    "local": 0.0625,
    "11": 0.0625
  },
  "programming oop": {
    "25": 0.3333333333333333,
    "object": 0.3333333333333333,
    "techniques": 0.3333333333333333
  },
  "oop 25": {
    "object": 1.0
  },
  "25 object": {
    "overview": 0.5,
    "oriented": 0.5
  },
  "object overview": {
    "what": 0.5,
    "wha": 0.5
  },
  "overview what": {
    "are": 1.0
  },
  "what are": {
    "objects": 1.0
  },
  "are objects": {
    "25": 0.5,
    "an": 0.5
  },
  "objects 25": {
    "why": 0.3333333333333333,
    "what": 0.3333333333333333,
    "oltp": 0.3333333333333333
  },
  "25 why": {
    "objects": 1.0
  },
  "why objects": {
    "25": 0.5,
    "object": 0.5
  },
  "25 what": {
    "makes": 1.0
  },
  "what makes": {
    "an": 1.0
  },
  "makes an": {
    "object": 1.0
  },
  "an object": {
    "25": 0.02564102564102564,
    "there": 0.07692307692307693,
    "of": 0.1282051282051282,
    "declared": 0.07692307692307693,
    "and": 0.05128205128205128,
    "are": 0.05128205128205128,
    "named": 0.02564102564102564,
    "instead": 0.02564102564102564,
    "to": 0.02564102564102564,
    "s": 0.07692307692307693,
    "is": 0.1794871794871795,
    "class": 0.02564102564102564,
    "declare": 0.02564102564102564,
    "in": 0.05128205128205128,
    "dynamically": 0.02564102564102564,
    "at": 0.02564102564102564,
    "code": 0.02564102564102564,
    "mclassref": 0.02564102564102564,
    "reference": 0.02564102564102564,
    "object2": 0.02564102564102564
  },
  "object 25": {
    "clarion": 1.0
  },
  "25 clarion": {
    "s": 1.0
  },
  "clarion s": {
    "oop": 0.3,
    "procedural": 0.1,
    "field": 0.1,
    "inheritance": 0.1,
    "reportwriter": 0.1,
    "file": 0.3
  },
  "s oop": {
    "extensions": 0.6666666666666666,
    "syntax": 0.3333333333333333
  },
  "oop extensions": {
    "26": 0.5,
    "the": 0.5
  },
  "extensions 26": {
    "the": 1.0
  },
  "26 the": {
    "class": 1.0
  },
  "the class": {
    "structure": 0.23333333333333334,
    "declaration": 0.05,
    "declares": 0.016666666666666666,
    "3": 0.016666666666666666,
    "from": 0.06666666666666667,
    "without": 0.016666666666666666,
    "which": 0.016666666666666666,
    "in": 0.08333333333333333,
    "within": 0.016666666666666666,
    "above": 0.016666666666666666,
    "then": 0.05,
    "normal": 0.016666666666666666,
    "of": 0.016666666666666666,
    "are": 0.016666666666666666,
    "and": 0.05,
    "statement": 0.016666666666666666,
    "to": 0.05,
    "label": 0.016666666666666666,
    "the": 0.016666666666666666,
    "so": 0.016666666666666666,
    "there": 0.016666666666666666,
    "also": 0.016666666666666666,
    "as": 0.03333333333333333,
    "when": 0.016666666666666666,
    "you": 0.016666666666666666,
    "methods": 0.05,
    "cannot": 0.016666666666666666,
    "reference": 0.016666666666666666,
    "protected": 0.016666666666666666
  },
  "class structure": {
    "encapsulation": 0.07142857142857142,
    "itself": 0.03571428571428571,
    "allows": 0.03571428571428571,
    "is": 0.10714285714285714,
    "contains": 0.03571428571428571,
    "encapsulates": 0.03571428571428571,
    "declares": 0.07142857142857142,
    "then": 0.03571428571428571,
    "and": 0.07142857142857142,
    "within": 0.03571428571428571,
    "the": 0.03571428571428571,
    "this": 0.14285714285714285,
    "someclass": 0.03571428571428571,
    "by": 0.03571428571428571,
    "queuename": 0.03571428571428571,
    "containing": 0.03571428571428571,
    "makes": 0.03571428571428571,
    "inherits": 0.03571428571428571,
    "derived": 0.03571428571428571,
    "creates": 0.03571428571428571
  },
  "structure encapsulation": {
    "26": 0.5,
    "the": 0.5
  },
  "encapsulation 26": {
    "class": 1.0
  },
  "26 class": {
    "properties": 0.5,
    "methods": 0.5
  },
  "class properties": {
    "27": 0.5,
    "were": 0.25,
    "the": 0.25
  },
  "properties 27": {
    "class": 0.5,
    "client": 0.5
  },
  "27 class": {
    "methods": 0.5,
    "properties": 0.5
  },
  "class methods": {
    "27": 0.125,
    "because": 0.0625,
    "to": 0.1875,
    "21": 0.0625,
    "then": 0.0625,
    "this": 0.0625,
    "the": 0.1875,
    "can": 0.0625,
    "virtual": 0.0625,
    "prepending": 0.0625,
    "parent": 0.0625
  },
  "methods 27": {
    "creating": 0.5,
    "class": 0.5
  },
  "27 creating": {
    "objects": 1.0
  },
  "creating objects": {
    "27": 0.6666666666666666,
    "an": 0.3333333333333333
  },
  "objects 27": {
    "using": 0.5,
    "data": 0.5
  },
  "27 using": {
    "refere": 1.0
  },
  "using refere": {
    "nces": 1.0
  },
  "refere nces": {
    "as": 1.0
  },
  "nces as": {
    "properties": 1.0
  },
  "as properties": {
    "28": 0.5,
    "since": 0.5
  },
  "properties 28": {
    "constructors": 1.0
  },
  "28 constructors": {
    "and": 1.0
  },
  "destructors 29": {
    "public": 0.5,
    "destructors": 0.5
  },
  "29 public": {
    "vs": 1.0
  },
  "public vs": {
    "private": 1.0
  },
  "vs private": {
    "vs": 1.0
  },
  "private vs": {
    "protected": 1.0
  },
  "vs protected": {
    "29": 0.5,
    "all": 0.5
  },
  "protected 29": {
    "derived": 1.0
  },
  "29 derived": {
    "classes": 1.0
  },
  "derived classes": {
    "inheritance": 0.1111111111111111,
    "a": 0.1111111111111111,
    "then": 0.05555555555555555,
    "but": 0.1111111111111111,
    "so": 0.05555555555555555,
    "s": 0.05555555555555555,
    "in": 0.05555555555555555,
    "to": 0.05555555555555555,
    "also": 0.05555555555555555,
    "the": 0.05555555555555555,
    "it": 0.05555555555555555,
    "despite": 0.05555555555555555,
    "that": 0.05555555555555555,
    "someclass": 0.05555555555555555,
    "objects": 0.05555555555555555
  },
  "classes inheritance": {
    "31": 0.5,
    "clarion": 0.5
  },
  "inheritance 31": {
    "overriding": 0.5,
    "inheritance": 0.5
  },
  "31 overriding": {
    "inherited": 1.0
  },
  "overriding inherited": {
    "methods": 1.0
  },
  "inherited methods": {
    "32": 0.16666666666666666,
    "that": 0.16666666666666666,
    "there": 0.16666666666666666,
    "37": 0.16666666666666666,
    "by": 0.16666666666666666,
    "and": 0.16666666666666666
  },
  "methods 32": {
    "multiple": 1.0
  },
  "32 multiple": {
    "inheritance": 1.0
  },
  "inheritance vs": {
    "composition": 1.0
  },
  "vs composition": {
    "35": 0.5,
    "single": 0.5
  },
  "composition 35": {
    "virtual": 1.0
  },
  "35 virtual": {
    "methods": 1.0
  },
  "methods polymorphism": {
    "36": 0.5,
    "inheritance": 0.5
  },
  "polymorphism 36": {
    "local": 1.0
  },
  "36 local": {
    "derived": 1.0
  },
  "methods 37": {
    "summary": 0.5,
    "object": 0.5
  },
  "37 summary": {
    "38": 1.0
  },
  "summary 38": {
    "clarion": 1.0
  },
  "38 clarion": {
    "language": 1.0
  },
  "guide 4": {
    "4": 1.0
  },
  "4 4": {
    "database": 1.0
  },
  "4 database": {
    "design": 1.0
  },
  "database design": {
    "39": 0.23809523809523808,
    "and": 0.047619047619047616,
    "4": 0.047619047619047616,
    "database": 0.047619047619047616,
    "there": 0.047619047619047616,
    "as": 0.047619047619047616,
    "one": 0.09523809523809523,
    "a": 0.09523809523809523,
    "splits": 0.047619047619047616,
    "order": 0.047619047619047616,
    "in": 0.047619047619047616,
    "parts": 0.047619047619047616,
    "cascade": 0.047619047619047616,
    "summary": 0.047619047619047616,
    "referential": 0.047619047619047616
  },
  "design 39": {
    "database": 0.2,
    "relational": 0.2,
    "file": 0.2,
    "deadly": 0.2,
    "release": 0.2
  },
  "39 database": {
    "design": 1.0
  },
  "39 relational": {
    "database": 1.0
  },
  "relational database": {
    "design": 0.6153846153846154,
    "because": 0.07692307692307693,
    "involves": 0.07692307692307693,
    "the": 0.07692307692307693,
    "one": 0.07692307692307693,
    "operat": 0.07692307692307693
  },
  "39 file": {
    "relationships": 1.0
  },
  "file relationships": {
    "40": 0.3333333333333333,
    "in": 0.16666666666666666,
    "there": 0.16666666666666666,
    "are": 0.3333333333333333
  },
  "relationships 40": {
    "translatin": 0.5,
    "fileerror": 0.5
  },
  "40 translatin": {
    "g": 1.0
  },
  "translatin g": {
    "the": 1.0
  },
  "g the": {
    "theory": 1.0
  },
  "the theory": {
    "to": 0.6666666666666666,
    "let": 0.3333333333333333
  },
  "theory to": {
    "clarion": 1.0
  },
  "to clarion": {
    "42": 0.25,
    "we": 0.25,
    "language": 0.25,
    "in": 0.25
  },
  "clarion 42": {
    "referential": 1.0
  },
  "42 referential": {
    "integrity": 1.0
  },
  "referential integrity": {
    "43": 0.15384615384615385,
    "handling": 0.15384615384615385,
    "this": 0.07692307692307693,
    "means": 0.23076923076923078,
    "in": 0.07692307692307693,
    "requ": 0.07692307692307693,
    "are": 0.07692307692307693,
    "ri": 0.07692307692307693,
    "constraint": 0.07692307692307693
  },
  "integrity 43": {
    "nullify": 0.5,
    "66": 0.5
  },
  "43 nullify": {
    "the": 1.0
  },
  "nullify the": {
    "foreign": 0.75,
    "child": 0.25
  },
  "the foreign": {
    "key": 0.85,
    "keys": 0.15
  },
  "foreign key": {
    "46": 0.044444444444444446,
    "a": 0.022222222222222223,
    "is": 0.044444444444444446,
    "contains": 0.044444444444444446,
    "records": 0.044444444444444446,
    "recor": 0.022222222222222223,
    "shipto": 0.044444444444444446,
    "product": 0.044444444444444446,
    "to": 0.044444444444444446,
    "this": 0.022222222222222223,
    "order": 0.022222222222222223,
    "quantity": 0.06666666666666667,
    "the": 0.022222222222222223,
    "if": 0.022222222222222223,
    "field": 0.022222222222222223,
    "record": 0.022222222222222223,
    "date": 0.022222222222222223,
    "address": 0.022222222222222223,
    "prodno": 0.044444444444444446,
    "in": 0.06666666666666667,
    "instead": 0.022222222222222223,
    "can": 0.022222222222222223,
    "values": 0.06666666666666667,
    "nullify": 0.022222222222222223,
    "means": 0.022222222222222223,
    "fields": 0.022222222222222223,
    "or": 0.022222222222222223,
    "assign": 0.022222222222222223,
    "clarion": 0.022222222222222223,
    "majors_in": 0.022222222222222223,
    "39": 0.022222222222222223
  },
  "key 46": {
    "summary": 0.5,
    "object": 0.5
  },
  "46 summary": {
    "47": 1.0
  },
  "summary 47": {
    "5": 1.0
  },
  "47 5": {
    "data": 1.0
  },
  "5 data": {
    "file": 0.6666666666666666,
    "validation": 0.3333333333333333
  },
  "data file": {
    "processing": 0.4375,
    "is": 0.0625,
    "in": 0.0625,
    "as": 0.0625,
    "sample": 0.0625,
    "can": 0.0625,
    "from": 0.0625,
    "declaration": 0.125,
    "again": 0.0625
  },
  "file processing": {
    "49": 0.25,
    "5": 0.125,
    "data": 0.125,
    "custom": 0.125,
    "a": 0.125,
    "the": 0.125,
    "summary": 0.125
  },
  "processing 49": {
    "data": 0.5,
    "file": 0.5
  },
  "49 data": {
    "file": 1.0
  },
  "49 file": {
    "access": 0.5,
    "relationships": 0.5
  },
  "file access": {
    "methods": 0.23076923076923078,
    "50": 0.15384615384615385,
    "52": 0.15384615384615385,
    "generally": 0.07692307692307693,
    "is": 0.07692307692307693,
    "statements": 0.07692307692307693,
    "there": 0.15384615384615385,
    "set": 0.07692307692307693
  },
  "access methods": {
    "49": 0.5,
    "generally": 0.25,
    "are": 0.25
  },
  "methods 49": {
    "key": 0.5,
    "file": 0.5
  },
  "49 key": {
    "and": 1.0
  },
  "key and": {
    "index": 0.46153846153846156,
    "foreign": 0.3076923076923077,
    "two": 0.07692307692307693,
    "the": 0.07692307692307693,
    "or": 0.07692307692307693
  },
  "and index": {
    "49": 0.125,
    "the": 0.125,
    "declarations": 0.25,
    "lies": 0.125,
    "are": 0.125,
    "record": 0.25
  },
  "index 49": {
    "sequential": 0.3333333333333333,
    "base": 0.3333333333333333,
    "inheritance": 0.3333333333333333
  },
  "49 sequential": {
    "file": 1.0
  },
  "sequential file": {
    "access": 0.8,
    "processing": 0.2
  },
  "access 50": {
    "random": 0.5,
    "unlock": 0.5
  },
  "50 random": {
    "file": 1.0
  },
  "random file": {
    "access": 1.0
  },
  "access 52": {
    "summary": 0.5,
    "reference": 0.5
  },
  "52 summary": {
    "53": 1.0
  },
  "summary 53": {
    "6": 1.0
  },
  "53 6": {
    "multi": 1.0
  },
  "6 multi": {
    "user": 1.0
  },
  "multi user": {
    "considerations": 0.4166666666666667,
    "environments": 0.16666666666666666,
    "shared": 0.08333333333333333,
    "access": 0.16666666666666666,
    "situations": 0.08333333333333333,
    "programming": 0.08333333333333333
  },
  "user considerations": {
    "55": 0.6,
    "multi": 0.2,
    "the": 0.2
  },
  "considerations 55": {
    "multi": 0.3333333333333333,
    "opening": 0.3333333333333333,
    "network": 0.3333333333333333
  },
  "55 multi": {
    "user": 1.0
  },
  "55 opening": {
    "files": 1.0
  },
  "opening files": {
    "55": 0.6666666666666666,
    "before": 0.3333333333333333
  },
  "files 55": {
    "concurrency": 0.5,
    "order": 0.5
  },
  "55 concurrency": {
    "checking": 1.0
  },
  "concurrency checking": {
    "56": 0.11764705882352941,
    "the": 0.058823529411764705,
    "prevents": 0.058823529411764705,
    "means": 0.058823529411764705,
    "when": 0.11764705882352941,
    "method": 0.11764705882352941,
    "and": 0.11764705882352941,
    "you": 0.058823529411764705,
    "does": 0.058823529411764705,
    "calculations": 0.058823529411764705,
    "previously": 0.058823529411764705,
    "is": 0.058823529411764705,
    "to": 0.058823529411764705
  },
  "checking 56": {
    "hold": 0.5,
    "constructors": 0.5
  },
  "56 hold": {
    "and": 1.0
  },
  "hold and": {
    "release": 0.5,
    "lock": 0.5
  },
  "and release": {
    "60": 0.3333333333333333,
    "a": 0.3333333333333333,
    "it": 0.3333333333333333
  },
  "release 60": {
    "lock": 0.5,
    "replace": 0.5
  },
  "60 lock": {
    "and": 1.0
  },
  "lock and": {
    "unlock": 0.5,
    "its": 0.25,
    "hold": 0.25
  },
  "and unlock": {
    "62": 0.5,
    "the": 0.5
  },
  "unlock 62": {
    "deadly": 0.5,
    "variables": 0.5
  },
  "62 deadly": {
    "embrace": 1.0
  },
  "deadly embrace": {
    "63": 0.2857142857142857,
    "there": 0.14285714285714285,
    "the": 0.14285714285714285,
    "in": 0.14285714285714285,
    "record": 0.14285714285714285,
    "is": 0.14285714285714285
  },
  "embrace 63": {
    "summary": 0.5,
    "derived": 0.5
  },
  "63 summary": {
    "64": 1.0
  },
  "summary 64": {
    "7": 1.0
  },
  "64 7": {
    "developing": 1.0
  },
  "7 developing": {
    "client": 1.0
  },
  "developing client": {
    "server": 1.0
  },
  "client server": {
    "applications": 0.46153846153846156,
    "65": 0.05128205128205128,
    "defined": 0.05128205128205128,
    "database": 0.10256410256410256,
    "support": 0.05128205128205128,
    "client": 0.02564102564102564,
    "computing": 0.15384615384615385,
    "programs": 0.02564102564102564,
    "application": 0.07692307692307693
  },
  "server applications": {
    "65": 0.05263157894736842,
    "6": 0.05263157894736842,
    "assume": 0.05263157894736842,
    "sav": 0.05263157894736842,
    "this": 0.05263157894736842,
    "deadly": 0.05263157894736842,
    "7": 0.05263157894736842,
    "introduction": 0.05263157894736842,
    "or": 0.05263157894736842,
    "created": 0.05263157894736842,
    "typically": 0.05263157894736842,
    "are": 0.05263157894736842,
    "the": 0.10526315789473684,
    "is": 0.05263157894736842,
    "by": 0.05263157894736842,
    "in": 0.05263157894736842,
    "so": 0.05263157894736842,
    "for": 0.05263157894736842
  },
  "applications 65": {
    "introduction": 0.5,
    "sql": 0.5
  },
  "65 introduction": {
    "to": 1.0
  },
  "introduction to": {
    "client": 1.0
  },
  "to client": {
    "server": 1.0
  },
  "server 65": {
    "client": 0.5,
    "composition": 0.5
  },
  "65 client": {
    "server": 1.0
  },
  "server defined": {
    "65": 0.5,
    "what": 0.5
  },
  "defined 65": {
    "types": 1.0
  },
  "65 types": {
    "of": 1.0
  },
  "types of": {
    "client": 0.4,
    "apple": 0.2,
    "complex": 0.2,
    "relationships": 0.2
  },
  "of client": {
    "server": 1.0
  },
  "server database": {
    "applications": 0.75,
    "applicati": 0.25
  },
  "database applications": {
    "65": 0.125,
    "one": 0.125,
    "by": 0.125,
    "programming": 0.125,
    "this": 0.125,
    "that": 0.125,
    "on": 0.125,
    "fall": 0.125
  },
  "65 sql": {
    "database": 1.0
  },
  "sql database": {
    "engines": 0.6666666666666666,
    "communicates": 0.3333333333333333
  },
  "database engines": {
    "65": 0.25,
    "most": 0.25,
    "are": 0.25,
    "used": 0.25
  },
  "engines 65": {
    "clarion": 1.0
  },
  "65 clarion": {
    "and": 1.0
  },
  "clarion and": {
    "sql": 1.0
  },
  "and sql": {
    "66": 0.6666666666666666,
    "clarion": 0.3333333333333333
  },
  "sql 66": {
    "database": 0.3333333333333333,
    "class": 0.3333333333333333,
    "69": 0.3333333333333333
  },
  "66 database": {
    "design": 1.0
  },
  "design and": {
    "network": 1.0
  },
  "and network": {
    "traffic": 0.6666666666666666,
    "servers": 0.3333333333333333
  },
  "network traffic": {
    "66": 0.18181818181818182,
    "the": 0.09090909090909091,
    "can": 0.09090909090909091,
    "is": 0.18181818181818182,
    "back": 0.09090909090909091,
    "for": 0.09090909090909091,
    "generated": 0.09090909090909091,
    "from": 0.09090909090909091,
    "that": 0.09090909090909091
  },
  "traffic 66": {
    "referential": 0.5,
    "null": 0.5
  },
  "66 referential": {
    "integrity": 1.0
  },
  "integrity handling": {
    "66": 0.5,
    "maintaining": 0.5
  },
  "handling 66": {
    "data": 1.0
  },
  "66 data": {
    "validation": 1.0
  },
  "data validation": {
    "67": 0.18181818181818182,
    "data": 0.09090909090909091,
    "means": 0.09090909090909091,
    "rules": 0.45454545454545453,
    "is": 0.09090909090909091,
    "constraints": 0.09090909090909091
  },
  "validation 67": {
    "clarion": 0.5,
    "database": 0.5
  },
  "67 clarion": {
    "language": 1.0
  },
  "language client": {
    "server": 1.0
  },
  "server support": {
    "67": 0.5,
    "the": 0.5
  },
  "support 67": {
    "the": 1.0
  },
  "67 the": {
    "view": 0.5,
    "buffer": 0.5
  },
  "the view": {
    "structure": 0.6666666666666666,
    "to": 0.3333333333333333
  },
  "view structure": {
    "67": 0.09090909090909091,
    "that": 0.18181818181818182,
    "the": 0.09090909090909091,
    "is": 0.09090909090909091,
    "will": 0.2727272727272727,
    "defaults": 0.09090909090909091,
    "declarations": 0.09090909090909091,
    "using": 0.09090909090909091
  },
  "structure 67": {
    "the": 1.0
  },
  "the buffer": {
    "statement": 1.0
  },
  "buffer statement": {
    "68": 0.2,
    "the": 0.4,
    "can": 0.2,
    "tells": 0.2
  },
  "statement 68": {
    "embedded": 1.0
  },
  "68 embedded": {
    "sql": 1.0
  },
  "embedded sql": {
    "in": 0.6666666666666666,
    "69": 0.3333333333333333
  },
  "sql in": {
    "clarion": 0.5,
    "clause": 0.5
  },
  "in clarion": {
    "69": 0.041666666666666664,
    "s": 0.125,
    "this": 0.041666666666666664,
    "terms": 0.041666666666666664,
    "all": 0.041666666666666664,
    "since": 0.125,
    "but": 0.041666666666666664,
    "the": 0.125,
    "if": 0.041666666666666664,
    "for": 0.041666666666666664,
    "as": 0.041666666666666664,
    "ar": 0.041666666666666664,
    "by": 0.08333333333333333,
    "however": 0.041666666666666664,
    "unlike": 0.041666666666666664,
    "just": 0.041666666666666664,
    "clarion": 0.041666666666666664
  },
  "clarion 69": {
    "null": 1.0
  },
  "69 null": {
    "data": 1.0
  },
  "null data": {
    "handling": 0.8,
    "the": 0.2
  },
  "data handling": {
    "70": 0.5,
    "one": 0.25,
    "through": 0.25
  },
  "handling 70": {
    "error": 0.5,
    "nullify": 0.5
  },
  "70 error": {
    "handling": 1.0
  },
  "error handling": {
    "71": 1.0
  },
  "handling 71": {
    "index": 0.5,
    "field": 0.5
  },
  "71 index": {
    "73": 1.0
  },
  "index 73": {
    "5": 0.5,
    "index": 0.5
  },
  "73 5": {
    "program": 1.0
  },
  "5 program": {
    "structure": 1.0
  },
  "structure 1": {
    "program": 1.0
  },
  "structure structured": {
    "programming": 1.0
  },
  "programming the": {
    "proper": 0.5,
    "view": 0.5
  },
  "the proper": {
    "structure": 1.0
  },
  "proper structure": {
    "of": 0.25,
    "for": 0.25,
    "therefore": 0.25,
    "procedures": 0.25
  },
  "structure of": {
    "a": 0.2857142857142857,
    "the": 0.5714285714285714,
    "object": 0.14285714285714285
  },
  "of a": {
    "computer": 0.017543859649122806,
    "highly": 0.017543859649122806,
    "class": 0.14035087719298245,
    "procedure": 0.017543859649122806,
    "dynamic": 0.03508771929824561,
    "member": 0.08771929824561403,
    "single": 0.03508771929824561,
    "particular": 0.017543859649122806,
    "specific": 0.03508771929824561,
    "previously": 0.03508771929824561,
    "global": 0.017543859649122806,
    "base": 0.017543859649122806,
    "file": 0.08771929824561403,
    "constructor": 0.017543859649122806,
    "friend": 0.017543859649122806,
    "b": 0.12280701754385964,
    "c": 0.017543859649122806,
    "clarion": 0.017543859649122806,
    "part": 0.017543859649122806,
    "parent": 0.017543859649122806,
    "primary": 0.017543859649122806,
    "multiple": 0.017543859649122806,
    "16": 0.017543859649122806,
    "separate": 0.017543859649122806,
    "simple": 0.017543859649122806,
    "stream": 0.017543859649122806,
    "view": 0.017543859649122806,
    "database": 0.017543859649122806,
    "table": 0.017543859649122806,
    "ny": 0.017543859649122806,
    "null": 0.017543859649122806,
    "field": 0.017543859649122806
  },
  "a computer": {
    "program": 1.0
  },
  "computer program": {
    "is": 1.0
  },
  "program is": {
    "a": 1.0
  },
  "a topic": {
    "that": 1.0
  },
  "topic that": {
    "can": 1.0
  },
  "that can": {
    "be": 0.6666666666666666,
    "operate": 0.3333333333333333
  },
  "can be": {
    "the": 0.07142857142857142,
    "prototyped": 0.07142857142857142,
    "referenced": 0.14285714285714285,
    "protected": 0.07142857142857142,
    "built": 0.07142857142857142,
    "called": 0.07142857142857142,
    "processed": 0.07142857142857142,
    "minimized": 0.07142857142857142,
    "kept": 0.07142857142857142,
    "specified": 0.07142857142857142,
    "combined": 0.07142857142857142,
    "quite": 0.07142857142857142,
    "used": 0.07142857142857142
  },
  "be the": {
    "beginning": 0.25,
    "same": 0.25,
    "child": 0.25,
    "field": 0.25
  },
  "the beginning": {
    "of": 1.0
  },
  "beginning of": {
    "a": 0.4444444444444444,
    "the": 0.5555555555555556
  },
  "a highly": {
    "charged": 1.0
  },
  "highly charged": {
    "debate": 0.5,
    "grouping": 0.5
  },
  "charged debate": {
    "many": 1.0
  },
  "debate many": {
    "programmers": 1.0
  },
  "many programmers": {
    "have": 1.0
  },
  "programmers have": {
    "definite": 0.5,
    "grown": 0.5
  },
  "have definite": {
    "strongly": 1.0
  },
  "definite strongly": {
    "held": 1.0
  },
  "strongly held": {
    "ideas": 1.0
  },
  "held ideas": {
    "about": 1.0
  },
  "ideas about": {
    "what": 1.0
  },
  "about what": {
    "constitutes": 0.3333333333333333,
    "you": 0.3333333333333333,
    "happens": 0.3333333333333333
  },
  "what constitutes": {
    "proper": 1.0
  },
  "constitutes proper": {
    "structure": 1.0
  },
  "structure for": {
    "a": 1.0
  },
  "for a": {
    "progra": 0.06666666666666667,
    "local": 0.06666666666666667,
    "complete": 0.13333333333333333,
    "procedure": 0.13333333333333333,
    "long": 0.06666666666666667,
    "car": 0.06666666666666667,
    "s": 0.06666666666666667,
    "full": 0.06666666666666667,
    "derived": 0.06666666666666667,
    "foreign": 0.06666666666666667,
    "large": 0.06666666666666667,
    "significant": 0.06666666666666667,
    "view": 0.06666666666666667
  },
  "a progra": {
    "m": 1.0
  },
  "progra m": {
    "and": 1.0
  },
  "m and": {
    "those": 1.0
  },
  "and those": {
    "ideas": 1.0
  },
  "those ideas": {
    "do": 1.0
  },
  "ideas do": {
    "not": 1.0
  },
  "do not": {
    "always": 0.14285714285714285,
    "have": 0.2857142857142857,
    "i": 0.14285714285714285,
    "necessarily": 0.14285714285714285,
    "allow": 0.14285714285714285,
    "you": 0.14285714285714285
  },
  "not always": {
    "conform": 0.3333333333333333,
    "needed": 0.3333333333333333,
    "true": 0.3333333333333333
  },
  "always conform": {
    "to": 1.0
  },
  "conform to": {
    "another": 1.0
  },
  "to another": {
    "programmer": 0.2,
    "procedure": 0.2,
    "common": 0.2,
    "as": 0.2,
    "object": 0.2
  },
  "another programmer": {
    "s": 1.0
  },
  "programmer s": {
    "thoughts": 1.0
  },
  "s thoughts": {
    "concerning": 1.0
  },
  "thoughts concerning": {
    "proper": 1.0
  },
  "concerning proper": {
    "structure": 1.0
  },
  "structure therefore": {
    "this": 1.0
  },
  "therefore this": {
    "essay": 1.0
  },
  "this essay": {
    "is": 1.0
  },
  "essay is": {
    "a": 1.0
  },
  "a general": {
    "discussion": 1.0
  },
  "general discussion": {
    "of": 1.0
  },
  "discussion of": {
    "the": 0.6,
    "this": 0.4
  },
  "of the": {
    "clarion": 0.04580152671755725,
    "main": 0.007633587786259542,
    "procedure": 0.061068702290076333,
    "program": 0.030534351145038167,
    "member": 0.007633587786259542,
    "second": 0.015267175572519083,
    "map": 0.007633587786259542,
    "entire": 0.015267175572519083,
    "application": 0.007633587786259542,
    "th": 0.007633587786259542,
    "class": 0.1450381679389313,
    "type": 0.007633587786259542,
    "same": 0.04580152671755725,
    "global": 0.015267175572519083,
    "answer": 0.007633587786259542,
    "object": 0.007633587786259542,
    "fred": 0.007633587786259542,
    "referenced": 0.007633587786259542,
    "objec": 0.007633587786259542,
    "virtual": 0.022900763358778626,
    "prototype": 0.007633587786259542,
    "biggest": 0.007633587786259542,
    "template": 0.007633587786259542,
    "variables": 0.007633587786259542,
    "other": 0.015267175572519083,
    "tree": 0.007633587786259542,
    "hierarchy": 0.007633587786259542,
    "more": 0.007633587786259542,
    "method": 0.007633587786259542,
    "current": 0.015267175572519083,
    "data": 0.015267175572519083,
    "protected": 0.007633587786259542,
    "base": 0.007633587786259542,
    "two": 0.007633587786259542,
    "differing": 0.007633587786259542,
    "classes": 0.007633587786259542,
    "principles": 0.007633587786259542,
    "relational": 0.015267175572519083,
    "most": 0.007633587786259542,
    "multiple": 0.007633587786259542,
    "foreign": 0.007633587786259542,
    "primary": 0.022900763358778626,
    "file": 0.0916030534351145,
    "prima": 0.007633587786259542,
    "time": 0.007633587786259542,
    "sample": 0.007633587786259542,
    "set": 0.015267175572519083,
    "get": 0.007633587786259542,
    "first": 0.007633587786259542,
    "possib": 0.007633587786259542,
    "record": 0.022900763358778626,
    "index": 0.007633587786259542,
    "files": 0.007633587786259542,
    "computing": 0.007633587786259542,
    "company": 0.007633587786259542,
    "database": 0.03816793893129771,
    "affected": 0.007633587786259542,
    "columns": 0.007633587786259542,
    "outer": 0.007633587786259542,
    "result": 0.007633587786259542,
    "capabilities": 0.007633587786259542,
    "filt": 0.007633587786259542,
    "expression": 0.015267175572519083
  },
  "the clarion": {
    "language": 0.45454545454545453,
    "documentation": 0.022727272727272728,
    "class": 0.045454545454545456,
    "keyword": 0.022727272727272728,
    "open": 0.022727272727272728,
    "implementation": 0.022727272727272728,
    "key": 0.045454545454545456,
    "file": 0.045454545454545456,
    "sql": 0.022727272727272728,
    "programmer": 0.045454545454545456,
    "dictionary": 0.022727272727272728,
    "data": 0.045454545454545456,
    "l": 0.022727272727272728,
    "buffer": 0.022727272727272728,
    "next": 0.022727272727272728,
    "create": 0.045454545454545456,
    "syntax": 0.022727272727272728,
    "null": 0.022727272727272728,
    "errorcode": 0.022727272727272728
  },
  "language tools": {
    "which": 0.3333333333333333,
    "that": 0.3333333333333333,
    "provided": 0.3333333333333333
  },
  "tools which": {
    "provide": 1.0
  },
  "which provide": {
    "the": 1.0
  },
  "provide the": {
    "ability": 0.5,
    "explicit": 0.5
  },
  "the ability": {
    "to": 0.8333333333333334,
    "of": 0.16666666666666666
  },
  "ability to": {
    "construct": 0.2,
    "break": 0.2,
    "treat": 0.2,
    "place": 0.2,
    "contain": 0.2
  },
  "to construct": {
    "programs": 1.0
  },
  "construct programs": {
    "in": 1.0
  },
  "programs in": {
    "your": 1.0
  },
  "in your": {
    "own": 0.07142857142857142,
    "programs": 0.07142857142857142,
    "program": 0.14285714285714285,
    "class": 0.14285714285714285,
    "derived": 0.14285714285714285,
    "constructor": 0.07142857142857142,
    "compiler": 0.07142857142857142,
    "database": 0.07142857142857142,
    "client": 0.07142857142857142,
    "file": 0.07142857142857142,
    "back": 0.07142857142857142
  },
  "your own": {
    "concept": 0.16666666666666666,
    "sql": 0.8333333333333334
  },
  "own concept": {
    "of": 1.0
  },
  "concept of": {
    "proper": 0.25,
    "a": 0.5,
    "null": 0.25
  },
  "of proper": {
    "structure": 1.0
  },
  "structure procedures": {
    "the": 1.0
  },
  "procedures the": {
    "key": 0.3333333333333333,
    "definitions": 0.3333333333333333,
    "fileerrorcode": 0.3333333333333333
  },
  "the key": {
    "to": 0.16666666666666666,
    "word": 0.08333333333333333,
    "that": 0.08333333333333333,
    "field": 0.4166666666666667,
    "or": 0.08333333333333333,
    "is": 0.08333333333333333,
    "on": 0.08333333333333333
  },
  "key to": {
    "any": 0.25,
    "overriding": 0.25,
    "relate": 0.5
  },
  "any structured": {
    "programming": 1.0
  },
  "programming is": {
    "the": 0.3333333333333333,
    "extensive": 0.3333333333333333,
    "rapidly": 0.3333333333333333
  },
  "is the": {
    "ability": 0.0625,
    "mechanism": 0.0625,
    "point": 0.041666666666666664,
    "eventual": 0.020833333333333332,
    "class": 0.020833333333333332,
    "basic": 0.020833333333333332,
    "structure": 0.020833333333333332,
    "use": 0.020833333333333332,
    "same": 0.0625,
    "part": 0.020833333333333332,
    "code": 0.020833333333333332,
    "call": 0.020833333333333332,
    "actual": 0.020833333333333332,
    "dutch": 0.020833333333333332,
    "kind": 0.020833333333333332,
    "key": 0.020833333333333332,
    "methods": 0.020833333333333332,
    "definition": 0.020833333333333332,
    "relational": 0.020833333333333332,
    "purpose": 0.020833333333333332,
    "most": 0.041666666666666664,
    "primary": 0.020833333333333332,
    "dynamic": 0.020833333333333332,
    "ruling": 0.020833333333333332,
    "last": 0.020833333333333332,
    "relative": 0.041666666666666664,
    "default": 0.020833333333333332,
    "possibility": 0.0625,
    "sav": 0.020833333333333332,
    "hold": 0.020833333333333332,
    "nuisance": 0.020833333333333332,
    "subject": 0.020833333333333332,
    "adoption": 0.020833333333333332,
    "tool": 0.020833333333333332,
    "design": 0.020833333333333332,
    "minimum": 0.020833333333333332,
    "concept": 0.020833333333333332
  },
  "to break": {
    "your": 1.0
  },
  "break your": {
    "program": 1.0
  },
  "your program": {
    "code": 0.3333333333333333,
    "may": 0.1111111111111111,
    "s": 0.1111111111111111,
    "to": 0.2222222222222222,
    "so": 0.1111111111111111,
    "can": 0.1111111111111111
  },
  "program code": {
    "into": 0.25,
    "and": 0.25,
    "to": 0.25,
    "s": 0.25
  },
  "code into": {
    "separate": 0.5,
    "the": 0.5
  },
  "into separate": {
    "tasks": 0.2,
    "source": 0.4,
    "related": 0.2,
    "files": 0.2
  },
  "separate tasks": {
    "to": 0.5,
    "into": 0.5
  },
  "tasks to": {
    "call": 1.0
  },
  "to call": {
    "when": 0.06666666666666667,
    "it": 0.06666666666666667,
    "a": 0.13333333333333333,
    "up": 0.2,
    "is": 0.06666666666666667,
    "the": 0.06666666666666667,
    "methods": 0.06666666666666667,
    "dow": 0.06666666666666667,
    "derived": 0.06666666666666667,
    "by": 0.06666666666666667,
    "down": 0.06666666666666667,
    "any": 0.06666666666666667
  },
  "call when": {
    "needed": 1.0
  },
  "when needed": {
    "the": 1.0
  },
  "needed the": {
    "clarion": 1.0
  },
  "language provides": {
    "a": 1.0
  },
  "provides a": {
    "statement": 0.25,
    "viable": 0.25,
    "way": 0.25,
    "mechanism": 0.25
  },
  "a statement": {
    "which": 1.0
  },
  "statement which": {
    "allows": 0.16666666666666666,
    "tells": 0.16666666666666666,
    "marks": 0.5,
    "performs": 0.16666666666666666
  },
  "which allows": {
    "this": 0.3333333333333333,
    "the": 0.3333333333333333,
    "yo": 0.3333333333333333
  },
  "allows this": {
    "type": 1.0
  },
  "this type": {
    "of": 1.0
  },
  "type of": {
    "task": 0.03571428571428571,
    "object": 0.25,
    "d": 0.03571428571428571,
    "apple": 0.03571428571428571,
    "pie": 0.03571428571428571,
    "thing": 0.03571428571428571,
    "polymorphism": 0.07142857142857142,
    "queue": 0.17857142857142858,
    "file": 0.03571428571428571,
    "fuzzy": 0.03571428571428571,
    "access": 0.10714285714285714,
    "concurrency": 0.07142857142857142,
    "batch": 0.03571428571428571,
    "client": 0.03571428571428571
  },
  "of task": {
    "separation": 1.0
  },
  "task separation": {
    "procedure": 1.0
  },
  "separation procedure": {
    "a": 1.0
  },
  "procedure a": {
    "procedure": 0.25,
    "program": 0.25,
    "prototype": 0.5
  },
  "a procedure": {
    "can": 0.027777777777777776,
    "which": 0.08333333333333333,
    "prototyped": 0.027777777777777776,
    "you": 0.027777777777777776,
    "s": 0.16666666666666666,
    "without": 0.027777777777777776,
    "are": 0.08333333333333333,
    "is": 0.08333333333333333,
    "a": 0.027777777777777776,
    "tells": 0.027777777777777776,
    "whose": 0.027777777777777776,
    "end": 0.05555555555555555,
    "to": 0.05555555555555555,
    "has": 0.05555555555555555,
    "may": 0.05555555555555555,
    "the": 0.027777777777777776,
    "that": 0.08333333333333333,
    "share": 0.027777777777777776,
    "only": 0.027777777777777776
  },
  "procedure can": {
    "be": 0.5,
    "look": 0.5
  },
  "be prototyped": {
    "to": 0.3333333333333333,
    "in": 0.6666666666666666
  },
  "prototyped to": {
    "return": 1.0
  },
  "to return": {
    "a": 0.6,
    "to": 0.2,
    "or": 0.2
  },
  "return a": {
    "value": 0.625,
    "v": 0.125,
    "set": 0.125,
    "result": 0.125
  },
  "a value": {
    "and": 0.2222222222222222,
    "may": 0.2222222222222222,
    "15": 0.1111111111111111,
    "that": 0.1111111111111111,
    "less": 0.1111111111111111,
    "greater": 0.1111111111111111,
    "of": 0.1111111111111111
  },
  "value and": {
    "therefore": 0.2,
    "contain": 0.2,
    "the": 0.2,
    "returns": 0.2,
    "makes": 0.2
  },
  "and therefore": {
    "may": 1.0
  },
  "therefore may": {
    "be": 1.0
  },
  "may be": {
    "called": 0.15,
    "safely": 0.05,
    "accessed": 0.1,
    "used": 0.25,
    "placed": 0.05,
    "in": 0.1,
    "defined": 0.05,
    "related": 0.1,
    "some": 0.05,
    "either": 0.05,
    "resolved": 0.05
  },
  "be called": {
    "as": 0.14285714285714285,
    "explicitly": 0.2857142857142857,
    "only": 0.2857142857142857,
    "this": 0.14285714285714285,
    "from": 0.14285714285714285
  },
  "called as": {
    "part": 1.0
  },
  "as part": {
    "of": 1.0
  },
  "part of": {
    "an": 0.3333333333333333,
    "this": 0.16666666666666666,
    "the": 0.3333333333333333,
    "primary": 0.16666666666666666
  },
  "of an": {
    "expression": 0.18181818181818182,
    "application": 0.09090909090909091,
    "object": 0.5454545454545454,
    "index": 0.09090909090909091,
    "error": 0.09090909090909091
  },
  "an expression": {
    "or": 1.0
  },
  "expression or": {
    "parameter": 1.0
  },
  "or parameter": {
    "list": 1.0
  },
  "parameter list": {
    "a": 0.5,
    "and": 0.25,
    "then": 0.25
  },
  "list a": {
    "procedure": 1.0
  },
  "procedure which": {
    "does": 0.14285714285714285,
    "resides": 0.2857142857142857,
    "is": 0.42857142857142855,
    "actually": 0.14285714285714285
  },
  "which does": {
    "not": 1.0
  },
  "does not": {
    "return": 0.043478260869565216,
    "need": 0.08695652173913043,
    "know": 0.043478260869565216,
    "have": 0.08695652173913043,
    "automatically": 0.08695652173913043,
    "override": 0.043478260869565216,
    "contain": 0.043478260869565216,
    "require": 0.043478260869565216,
    "necessarily": 0.043478260869565216,
    "read": 0.043478260869565216,
    "find": 0.043478260869565216,
    "change": 0.043478260869565216,
    "affect": 0.043478260869565216,
    "copy": 0.043478260869565216,
    "allocate": 0.043478260869565216,
    "mean": 0.043478260869565216,
    "allow": 0.043478260869565216,
    "in": 0.043478260869565216,
    "demonstrate": 0.043478260869565216,
    "equal": 0.043478260869565216
  },
  "not return": {
    "a": 1.0
  },
  "value may": {
    "only": 0.5,
    "also": 0.5
  },
  "may only": {
    "be": 1.0
  },
  "only be": {
    "called": 0.5,
    "used": 0.5
  },
  "called explicitly": {
    "as": 1.0
  },
  "explicitly as": {
    "a": 1.0
  },
  "as a": {
    "separate": 0.07692307692307693,
    "parameter": 0.11538461538461539,
    "variable": 0.038461538461538464,
    "member": 0.038461538461538464,
    "routine": 0.038461538461538464,
    "method": 0.038461538461538464,
    "source": 0.038461538461538464,
    "parent": 0.038461538461538464,
    "property": 0.07692307692307693,
    "result": 0.038461538461538464,
    "matter": 0.038461538461538464,
    "single": 0.07692307692307693,
    "starting": 0.038461538461538464,
    "foreign": 0.07692307692307693,
    "join": 0.038461538461538464,
    "clarion": 0.038461538461538464,
    "broker": 0.038461538461538464,
    "practical": 0.038461538461538464,
    "field": 0.038461538461538464,
    "primary": 0.038461538461538464
  },
  "a separate": {
    "program": 0.2,
    "source": 0.4,
    "file": 0.1,
    "class": 0.1,
    "shipto": 0.1,
    "essay": 0.1
  },
  "separate program": {
    "statement": 1.0
  },
  "program statement": {
    "it": 0.5,
    "when": 0.5
  },
  "statement it": {
    "may": 1.0
  },
  "not be": {
    "used": 0.2857142857142857,
    "duplicate": 0.14285714285714285,
    "confused": 0.14285714285714285,
    "able": 0.14285714285714285,
    "left": 0.14285714285714285,
    "a": 0.14285714285714285
  },
  "be used": {
    "as": 0.07692307692307693,
    "within": 0.07692307692307693,
    "only": 0.15384615384615385,
    "they": 0.07692307692307693,
    "in": 0.15384615384615385,
    "for": 0.15384615384615385,
    "interchangeably": 0.07692307692307693,
    "to": 0.07692307692307693,
    "unless": 0.07692307692307693,
    "by": 0.07692307692307693
  },
  "used as": {
    "part": 1.0
  },
  "procedure prototyped": {
    "to": 1.0
  },
  "may also": {
    "be": 0.42857142857142855,
    "contain": 0.42857142857142855,
    "explicitly": 0.14285714285714285
  },
  "also be": {
    "called": 0.3333333333333333,
    "explicitly": 0.3333333333333333,
    "application": 0.3333333333333333
  },
  "statement when": {
    "the": 1.0
  },
  "when the": {
    "returned": 0.02857142857142857,
    "procedure": 0.14285714285714285,
    "program": 0.08571428571428572,
    "object": 0.2,
    "call": 0.02857142857142857,
    "container": 0.02857142857142857,
    "object1": 0.02857142857142857,
    "object2": 0.02857142857142857,
    "user": 0.17142857142857143,
    "file": 0.08571428571428572,
    "time": 0.02857142857142857,
    "system": 0.02857142857142857,
    "parent": 0.05714285714285714,
    "end": 0.02857142857142857,
    "current": 0.02857142857142857
  },
  "the returned": {
    "value": 0.5,
    "data": 0.5
  },
  "returned value": {
    "is": 1.0
  },
  "value is": {
    "unimportant": 0.5,
    "valid": 0.5
  },
  "is unimportant": {
    "to": 1.0
  },
  "unimportant to": {
    "the": 1.0
  },
  "to the": {
    "context": 0.007633587786259542,
    "procedure": 0.05343511450381679,
    "place": 0.015267175572519083,
    "program": 0.022900763358778626,
    "member": 0.015267175572519083,
    "myprog2": 0.007633587786259542,
    "prototype": 0.015267175572519083,
    "declaring": 0.007633587786259542,
    "source": 0.007633587786259542,
    "release": 0.007633587786259542,
    "rest": 0.007633587786259542,
    "operating": 0.022900763358778626,
    "duration": 0.007633587786259542,
    "procedures": 0.022900763358778626,
    "oxford": 0.007633587786259542,
    "label": 0.007633587786259542,
    "property": 0.007633587786259542,
    "properties": 0.030534351145038167,
    "question": 0.007633587786259542,
    "constructor": 0.007633587786259542,
    "other": 0.007633587786259542,
    "new": 0.007633587786259542,
    "derived": 0.015267175572519083,
    "second": 0.007633587786259542,
    "method": 0.015267175572519083,
    "origin": 0.007633587786259542,
    "really": 0.007633587786259542,
    "base": 0.007633587786259542,
    "virtual": 0.007633587786259542,
    "last": 0.007633587786259542,
    "three": 0.007633587786259542,
    "most": 0.007633587786259542,
    "individual": 0.007633587786259542,
    "class": 0.015267175572519083,
    "specific": 0.007633587786259542,
    "data": 0.007633587786259542,
    "following": 0.007633587786259542,
    "name": 0.007633587786259542,
    "reference": 0.007633587786259542,
    "queue": 0.007633587786259542,
    "private": 0.007633587786259542,
    "object": 0.007633587786259542,
    "methods": 0.007633587786259542,
    "current": 0.007633587786259542,
    "primary": 0.015267175572519083,
    "related": 0.007633587786259542,
    "foreign": 0.022900763358778626,
    "files": 0.015267175572519083,
    "order": 0.015267175572519083,
    "customer": 0.007633587786259542,
    "number": 0.007633587786259542,
    "first": 0.007633587786259542,
    "database": 0.030534351145038167,
    "shipto": 0.007633587786259542,
    "child": 0.007633587786259542,
    "pr": 0.007633587786259542,
    "top": 0.007633587786259542,
    "index": 0.015267175572519083,
    "value": 0.007633587786259542,
    "physical": 0.007633587786259542,
    "user": 0.015267175572519083,
    "file": 0.03816793893129771,
    "same": 0.015267175572519083,
    "record": 0.022900763358778626,
    "screen": 0.007633587786259542,
    "problem": 0.007633587786259542,
    "fir": 0.007633587786259542,
    "crc": 0.007633587786259542,
    "use": 0.007633587786259542,
    "records": 0.007633587786259542,
    "minute": 0.007633587786259542,
    "requirements": 0.007633587786259542,
    "back": 0.05343511450381679,
    "generated": 0.015267175572519083,
    "enterprise": 0.007633587786259542,
    "client": 0.04580152671755725,
    "join": 0.007633587786259542,
    "information": 0.007633587786259542,
    "dat": 0.007633587786259542,
    "filter": 0.007633587786259542,
    "appropria": 0.007633587786259542
  },
  "the context": {
    "in": 1.0
  },
  "context in": {
    "which": 1.0
  },
  "in which": {
    "it": 0.35294117647058826,
    "the": 0.23529411764705882,
    "they": 0.35294117647058826,
    "other": 0.058823529411764705
  },
  "which it": {
    "is": 0.4666666666666667,
    "resides": 0.13333333333333333,
    "was": 0.2,
    "does": 0.06666666666666667,
    "belongs": 0.06666666666666667,
    "inherits": 0.06666666666666667
  },
  "is called": {
    "doing": 0.14285714285714285,
    "the": 0.2857142857142857,
    "single": 0.14285714285714285,
    "for": 0.14285714285714285,
    "using": 0.14285714285714285,
    "since": 0.14285714285714285
  },
  "called doing": {
    "this": 1.0
  },
  "doing this": {
    "will": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "this will": {
    "generate": 0.75,
    "be": 0.25
  },
  "will generate": {
    "warnings": 0.25,
    "a": 0.25,
    "an": 0.5
  },
  "generate warnings": {
    "f": 1.0
  },
  "warnings f": {
    "rom": 1.0
  },
  "f rom": {
    "the": 1.0
  },
  "rom the": {
    "compiler": 1.0
  },
  "the compiler": {
    "which": 0.1111111111111111,
    "the": 0.1111111111111111,
    "that": 0.1111111111111111,
    "needs": 0.1111111111111111,
    "must": 0.3333333333333333,
    "can": 0.1111111111111111,
    "would": 0.1111111111111111
  },
  "compiler which": {
    "may": 1.0
  },
  "which may": {
    "be": 1.0
  },
  "be safely": {
    "ignored": 1.0
  },
  "safely ignored": {
    "unless": 1.0
  },
  "ignored unless": {
    "the": 1.0
  },
  "unless the": {
    "procedure": 0.25,
    "replace": 0.25,
    "application": 0.25,
    "inner": 0.25
  },
  "the procedure": {
    "s": 0.2765957446808511,
    "and": 0.06382978723404255,
    "in": 0.0851063829787234,
    "executes": 0.0425531914893617,
    "is": 0.0851063829787234,
    "again": 0.02127659574468085,
    "prototype": 0.06382978723404255,
    "these": 0.02127659574468085,
    "within": 0.0851063829787234,
    "to": 0.02127659574468085,
    "execution": 0.02127659574468085,
    "this": 0.02127659574468085,
    "itself": 0.06382978723404255,
    "which": 0.0425531914893617,
    "statement": 0.02127659574468085,
    "objects": 0.02127659574468085,
    "it": 0.02127659574468085,
    "that": 0.02127659574468085
  },
  "procedure s": {
    "prototype": 0.023255813953488372,
    "data": 0.09302325581395349,
    "possible": 0.023255813953488372,
    "which": 0.13953488372093023,
    "are": 0.046511627906976744,
    "must": 0.023255813953488372,
    "prototyped": 0.046511627906976744,
    "into": 0.023255813953488372,
    "proc1": 0.023255813953488372,
    "within": 0.023255813953488372,
    "actually": 0.023255813953488372,
    "declared": 0.023255813953488372,
    "to": 0.023255813953488372,
    "in": 0.06976744186046512,
    "map": 0.023255813953488372,
    "a": 0.023255813953488372,
    "that": 0.046511627906976744,
    "only": 0.023255813953488372,
    "explicitly": 0.023255813953488372,
    "local": 0.13953488372093023,
    "executable": 0.046511627906976744,
    "routines": 0.023255813953488372,
    "scope": 0.023255813953488372,
    "logic": 0.023255813953488372
  },
  "s prototype": {
    "has": 0.25,
    "then": 0.5,
    "declares": 0.25
  },
  "prototype has": {
    "the": 1.0
  },
  "has the": {
    "proc": 0.2,
    "virtual": 0.2,
    "advantage": 0.2,
    "drawback": 0.2,
    "tools": 0.2
  },
  "the proc": {
    "attribute": 1.0
  },
  "proc attribute": {
    "within": 1.0
  },
  "attribute within": {
    "a": 1.0
  },
  "within a": {
    "procedure": 0.23076923076923078,
    "map": 0.15384615384615385,
    "method": 0.23076923076923078,
    "file": 0.23076923076923078,
    "sequence": 0.07692307692307693,
    "cert": 0.07692307692307693
  },
  "procedure you": {
    "may": 1.0
  },
  "you may": {
    "put": 0.14285714285714285,
    "have": 0.14285714285714285,
    "separate": 0.14285714285714285,
    "also": 0.14285714285714285,
    "bui": 0.14285714285714285,
    "choose": 0.2857142857142857
  },
  "may put": {
    "repetitive": 1.0
  },
  "put repetitive": {
    "executable": 1.0
  },
  "repetitive executable": {
    "code": 1.0
  },
  "executable code": {
    "statements": 0.06666666666666667,
    "section": 0.1,
    "some": 0.26666666666666666,
    "proc2": 0.03333333333333333,
    "do": 0.03333333333333333,
    "sections": 0.1,
    "over": 0.03333333333333333,
    "the": 0.03333333333333333,
    "and": 0.06666666666666667,
    "inside": 0.03333333333333333,
    "that": 0.06666666666666667,
    "using": 0.06666666666666667,
    "might": 0.06666666666666667,
    "would": 0.03333333333333333
  },
  "code statements": {
    "into": 0.5,
    "then": 0.5
  },
  "statements into": {
    "routines": 0.3333333333333333,
    "a": 0.3333333333333333,
    "whatever": 0.3333333333333333
  },
  "into routines": {
    "this": 1.0
  },
  "routines this": {
    "is": 1.0
  },
  "this is": {
    "useful": 0.09375,
    "the": 0.21875,
    "pretty": 0.03125,
    "called": 0.0625,
    "all": 0.03125,
    "a": 0.0625,
    "an": 0.125,
    "simple": 0.03125,
    "just": 0.03125,
    "that": 0.03125,
    "not": 0.03125,
    "similar": 0.03125,
    "to": 0.09375,
    "generic": 0.03125,
    "table": 0.03125,
    "completely": 0.03125,
    "true": 0.03125
  },
  "is useful": {
    "for": 0.5,
    "in": 0.5
  },
  "useful for": {
    "optimizing": 0.5,
    "procedure": 0.5
  },
  "for optimizing": {
    "the": 1.0
  },
  "optimizing the": {
    "size": 1.0
  },
  "the size": {
    "of": 1.0
  },
  "size of": {
    "your": 0.5,
    "the": 0.5
  },
  "of your": {
    "program": 0.2857142857142857,
    "derived": 0.2857142857142857,
    "construct": 0.14285714285714285,
    "constructors": 0.14285714285714285,
    "individual": 0.14285714285714285
  },
  "code and": {
    "movi": 0.16666666666666666,
    "an": 0.16666666666666666,
    "automatically": 0.3333333333333333,
    "maintain": 0.16666666666666666,
    "now": 0.16666666666666666
  },
  "and movi": {
    "ng": 1.0
  },
  "movi ng": {
    "explicit": 1.0
  },
  "ng explicit": {
    "functionality": 1.0
  },
  "explicit functionality": {
    "out": 0.5,
    "required": 0.5
  },
  "functionality out": {
    "of": 1.0
  },
  "out of": {
    "the": 0.15384615384615385,
    "method": 0.07692307692307693,
    "scope": 0.3076923076923077,
    "item": 0.07692307692307693,
    "process": 0.38461538461538464
  },
  "the main": {
    "procedure": 0.5,
    "difference": 0.5
  },
  "main procedure": {
    "logic": 1.0
  },
  "procedure logic": {
    "making": 1.0
  },
  "logic making": {
    "the": 1.0
  },
  "making the": {
    "overall": 0.5,
    "same": 0.5
  },
  "the overall": {
    "logic": 1.0
  },
  "overall logic": {
    "flow": 1.0
  },
  "logic flow": {
    "easier": 1.0
  },
  "flow easier": {
    "to": 1.0
  },
  "easier to": {
    "follow": 1.0
  },
  "to follow": {
    "however": 0.5,
    "logically": 0.5
  },
  "follow however": {
    "routines": 1.0
  },
  "however routines": {
    "are": 1.0
  },
  "routines are": {
    "only": 0.3333333333333333,
    "visible": 0.3333333333333333,
    "all": 0.3333333333333333
  },
  "are only": {
    "local": 0.14285714285714285,
    "visible": 0.42857142857142855,
    "available": 0.14285714285714285,
    "instantiated": 0.14285714285714285,
    "needed": 0.14285714285714285
  },
  "only local": {
    "to": 1.0
  },
  "local to": {
    "the": 0.375,
    "that": 0.25,
    "a": 0.25,
    "myproc": 0.125
  },
  "procedure and": {
    "may": 0.1111111111111111,
    "ends": 0.1111111111111111,
    "how": 0.1111111111111111,
    "ending": 0.1111111111111111,
    "any": 0.2222222222222222,
    "exi": 0.1111111111111111,
    "a": 0.1111111111111111,
    "its": 0.1111111111111111
  },
  "and may": {
    "only": 0.3333333333333333,
    "also": 0.3333333333333333,
    "be": 0.3333333333333333
  },
  "used within": {
    "the": 1.0
  },
  "within the": {
    "procedure": 0.16666666666666666,
    "member": 0.03333333333333333,
    "myprog2": 0.03333333333333333,
    "same": 0.1,
    "methods": 0.13333333333333333,
    "method": 0.03333333333333333,
    "class": 0.13333333333333333,
    "animal": 0.03333333333333333,
    "source": 0.06666666666666667,
    "derived": 0.06666666666666667,
    "database": 0.03333333333333333,
    "file": 0.03333333333333333,
    "sequence": 0.03333333333333333,
    "loop": 0.03333333333333333,
    "data": 0.03333333333333333,
    "index": 0.03333333333333333
  },
  "procedure in": {
    "which": 0.42857142857142855,
    "the": 0.42857142857142855,
    "physical": 0.14285714285714285
  },
  "it resides": {
    "therefore": 0.5,
    "this": 0.5
  },
  "resides therefore": {
    "the": 1.0
  },
  "therefore the": {
    "use": 0.125,
    "program": 0.125,
    "class": 0.125,
    "lifetime": 0.125,
    "customer": 0.125,
    "record": 0.125,
    "save": 0.125,
    "actual": 0.125
  },
  "the use": {
    "of": 1.0
  },
  "use of": {
    "routines": 0.06666666666666667,
    "self": 0.06666666666666667,
    "new": 0.06666666666666667,
    "constructors": 0.06666666666666667,
    "the": 0.2,
    "hold": 0.2,
    "lock": 0.06666666666666667,
    "a": 0.06666666666666667,
    "groupware": 0.06666666666666667,
    "buffer": 0.06666666666666667,
    "prop": 0.06666666666666667
  },
  "of routines": {
    "is": 1.0
  },
  "routines is": {
    "no": 1.0
  },
  "is no": {
    "t": 0.07142857142857142,
    "way": 0.07142857142857142,
    "need": 0.14285714285714285,
    "database": 0.07142857142857142,
    "guarantee": 0.07142857142857142,
    "other": 0.07142857142857142,
    "exact": 0.14285714285714285,
    "fuzzy": 0.07142857142857142,
    "generic": 0.07142857142857142,
    "longer": 0.07142857142857142,
    "direct": 0.14285714285714285
  },
  "no t": {
    "part": 1.0
  },
  "t part": {
    "of": 1.0
  },
  "of this": {
    "discussion": 0.2,
    "data": 0.1,
    "type": 0.1,
    "topic": 0.1,
    "technique": 0.1,
    "fuzzy": 0.1,
    "is": 0.3
  },
  "this discussion": {
    "local": 0.3333333333333333,
    "wherever": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "discussion local": {
    "stack": 1.0
  },
  "declarations every": {
    "procedure": 1.0
  },
  "every procedure": {
    "has": 1.0
  },
  "procedure has": {
    "a": 1.0
  },
  "has a": {
    "data": 0.38461538461538464,
    "method": 0.07692307692307693,
    "parameter": 0.07692307692307693,
    "construct": 0.07692307692307693,
    "one": 0.07692307692307693,
    "multiple": 0.07692307692307693,
    "unique": 0.07692307692307693,
    "hold": 0.07692307692307693,
    "true": 0.07692307692307693
  },
  "a data": {
    "declaration": 0.2857142857142857,
    "section": 0.2857142857142857,
    "item": 0.14285714285714285,
    "file": 0.21428571428571427,
    "structure": 0.07142857142857142
  },
  "data declaration": {
    "section": 0.8666666666666667,
    "se": 0.03333333333333333,
    "s": 0.03333333333333333,
    "of": 0.03333333333333333,
    "5": 0.03333333333333333
  },
  "declaration section": {
    "and": 0.038461538461538464,
    "follows": 0.038461538461538464,
    "are": 0.07692307692307693,
    "between": 0.038461538461538464,
    "this": 0.038461538461538464,
    "code": 0.23076923076923078,
    "of": 0.038461538461538464,
    "may": 0.11538461538461539,
    "map": 0.23076923076923078,
    "therefore": 0.07692307692307693,
    "following": 0.038461538461538464,
    "declares": 0.038461538461538464
  },
  "section and": {
    "an": 0.3333333333333333,
    "a": 0.3333333333333333,
    "we": 0.3333333333333333
  },
  "and an": {
    "executable": 0.5,
    "instance": 0.5
  },
  "an executable": {
    "code": 1.0
  },
  "code section": {
    "the": 0.25,
    "follows": 0.25,
    "following": 0.25,
    "and": 0.25
  },
  "section the": {
    "data": 1.0
  },
  "the data": {
    "declaration": 0.08571428571428572,
    "and": 0.05714285714285714,
    "type": 0.08571428571428572,
    "members": 0.08571428571428572,
    "types": 0.02857142857142857,
    "or": 0.02857142857142857,
    "into": 0.05714285714285714,
    "within": 0.02857142857142857,
    "file": 0.14285714285714285,
    "does": 0.02857142857142857,
    "access": 0.02857142857142857,
    "values": 0.02857142857142857,
    "is": 0.02857142857142857,
    "with": 0.02857142857142857,
    "therefo": 0.02857142857142857,
    "validation": 0.02857142857142857,
    "i": 0.02857142857142857,
    "the": 0.02857142857142857,
    "from": 0.02857142857142857,
    "to": 0.02857142857142857,
    "back": 0.05714285714285714,
    "if": 0.02857142857142857
  },
  "section follows": {
    "the": 1.0
  },
  "follows the": {
    "keyword": 1.0
  },
  "the keyword": {
    "procedure": 0.3333333333333333,
    "cod": 0.16666666666666666,
    "code": 0.3333333333333333,
    "member": 0.16666666666666666
  },
  "keyword procedure": {
    "and": 1.0
  },
  "and ends": {
    "with": 0.5,
    "at": 0.5
  },
  "ends with": {
    "the": 1.0
  },
  "with the": {
    "keyword": 0.03225806451612903,
    "clarion": 0.03225806451612903,
    "new": 0.03225806451612903,
    "dispose": 0.03225806451612903,
    "private": 0.0967741935483871,
    "oxford": 0.03225806451612903,
    "most": 0.03225806451612903,
    "same": 0.06451612903225806,
    "highly": 0.03225806451612903,
    "class": 0.03225806451612903,
    "name": 0.03225806451612903,
    "type": 0.03225806451612903,
    "declaring": 0.03225806451612903,
    "order": 0.03225806451612903,
    "parent": 0.03225806451612903,
    "file": 0.03225806451612903,
    "generic": 0.03225806451612903,
    "emergence": 0.03225806451612903,
    "saved": 0.03225806451612903,
    "stati": 0.03225806451612903,
    "static": 0.03225806451612903,
    "hold": 0.03225806451612903,
    "lock": 0.03225806451612903,
    "deadly": 0.03225806451612903,
    "subject": 0.03225806451612903,
    "back": 0.03225806451612903,
    "target": 0.03225806451612903,
    "database": 0.03225806451612903
  },
  "keyword cod": {
    "e": 1.0
  },
  "cod e": {
    "the": 0.5,
    "directly": 0.5
  },
  "e the": {
    "executable": 1.0
  },
  "the executable": {
    "code": 0.625,
    "with": 0.125,
    "this": 0.125,
    "source": 0.125
  },
  "keyword code": {
    "any": 0.5,
    "all": 0.5
  },
  "code any": {
    "variables": 1.0
  },
  "any variables": {
    "or": 1.0
  },
  "variables or": {
    "data": 1.0
  },
  "or data": {
    "structures": 0.5,
    "structure": 0.5
  },
  "data structures": {
    "declared": 0.5,
    "which": 0.25,
    "window": 0.25
  },
  "structures declared": {
    "in": 1.0
  },
  "declared in": {
    "a": 0.4074074074074074,
    "the": 0.4444444444444444,
    "t": 0.037037037037037035,
    "your": 0.037037037037037035,
    "any": 0.037037037037037035,
    "this": 0.037037037037037035
  },
  "in a": {
    "procedure": 0.16326530612244897,
    "clarion": 0.04081632653061224,
    "map": 0.02040816326530612,
    "source": 0.02040816326530612,
    "module": 0.04081632653061224,
    "separate": 0.02040816326530612,
    "capsule": 0.02040816326530612,
    "data": 0.061224489795918366,
    "derived": 0.10204081632653061,
    "class": 0.061224489795918366,
    "manner": 0.02040816326530612,
    "group": 0.02040816326530612,
    "single": 0.061224489795918366,
    "global": 0.02040816326530612,
    "base": 0.02040816326530612,
    "relational": 0.02040816326530612,
    "product": 0.02040816326530612,
    "descending": 0.04081632653061224,
    "string": 0.02040816326530612,
    "different": 0.02040816326530612,
    "hold": 0.04081632653061224,
    "list": 0.02040816326530612,
    "file": 0.061224489795918366,
    "standard": 0.02040816326530612,
    "table": 0.02040816326530612,
    "field": 0.02040816326530612
  },
  "s data": {
    "declaration": 0.6153846153846154,
    "section": 0.3076923076923077,
    "entry": 0.07692307692307693
  },
  "section are": {
    "local": 0.25,
    "global": 0.25,
    "also": 0.25,
    "instantiated": 0.25
  },
  "are local": {
    "to": 1.0
  },
  "to that": {
    "procedure": 0.1,
    "member": 0.1,
    "is": 0.1,
    "one": 0.1,
    "index": 0.1,
    "specific": 0.1,
    "file": 0.1,
    "fact": 0.1,
    "held": 0.1,
    "back": 0.1
  },
  "that procedure": {
    "this": 0.3333333333333333,
    "unless": 0.3333333333333333,
    "would": 0.3333333333333333
  },
  "procedure this": {
    "means": 0.5,
    "limits": 0.5
  },
  "this means": {
    "they": 0.05263157894736842,
    "it": 0.05263157894736842,
    "that": 0.42105263157894735,
    "the": 0.3157894736842105,
    "you": 0.05263157894736842,
    "a": 0.05263157894736842,
    "oltp": 0.05263157894736842
  },
  "means they": {
    "are": 1.0
  },
  "they are": {
    "only": 0.10526315789473684,
    "methods": 0.05263157894736842,
    "declared": 0.3684210526315789,
    "never": 0.05263157894736842,
    "truly": 0.05263157894736842,
    "defined": 0.05263157894736842,
    "visible": 0.05263157894736842,
    "also": 0.05263157894736842,
    "added": 0.05263157894736842,
    "both": 0.05263157894736842,
    "not": 0.05263157894736842,
    "being": 0.05263157894736842
  },
  "only visible": {
    "within": 0.75,
    "to": 0.25
  },
  "visible within": {
    "that": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "within that": {
    "procedure": 0.2,
    "source": 0.4,
    "class": 0.2,
    "record": 0.2
  },
  "procedure unless": {
    "passed": 1.0
  },
  "unless passed": {
    "as": 1.0
  },
  "passed as": {
    "a": 1.0
  },
  "a parameter": {
    "t": 0.25,
    "to": 0.25,
    "naming": 0.25,
    "effectively": 0.25
  },
  "parameter t": {
    "o": 1.0
  },
  "t o": {
    "another": 0.25,
    "process": 0.25,
    "the": 0.25,
    "do": 0.25
  },
  "o another": {
    "procedure": 1.0
  },
  "another procedure": {
    "variables": 0.25,
    "end": 0.5,
    "which": 0.25
  },
  "procedure variables": {
    "declared": 1.0
  },
  "variables declared": {
    "locally": 0.5,
    "local": 0.25,
    "in": 0.25
  },
  "declared locally": {
    "in": 0.6666666666666666,
    "to": 0.3333333333333333
  },
  "locally in": {
    "a": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "procedure without": {
    "the": 1.0
  },
  "without the": {
    "static": 0.125,
    "type": 0.125,
    "private": 0.25,
    "need": 0.125,
    "replace": 0.125,
    "potential": 0.125,
    "necessity": 0.125
  },
  "the static": {
    "attribute": 1.0
  },
  "static attribute": {
    "are": 0.3333333333333333,
    "there": 0.3333333333333333,
    "it": 0.3333333333333333
  },
  "attribute are": {
    "dynamically": 0.5,
    "assigned": 0.5
  },
  "are dynamically": {
    "allocated": 1.0
  },
  "dynamically allocated": {
    "memory": 0.6666666666666666,
    "local": 0.3333333333333333
  },
  "allocated memory": {
    "when": 0.3333333333333333,
    "on": 0.3333333333333333,
    "statically": 0.16666666666666666,
    "is": 0.16666666666666666
  },
  "memory when": {
    "the": 1.0
  },
  "procedure executes": {
    "the": 0.5,
    "therefore": 0.5
  },
  "executes the": {
    "memory": 0.5,
    "only": 0.5
  },
  "the memory": {
    "for": 0.5,
    "used": 0.3333333333333333,
    "queue": 0.16666666666666666
  },
  "memory for": {
    "a": 0.2,
    "the": 0.6,
    "properties": 0.2
  },
  "a local": {
    "viable": 0.16666666666666666,
    "procedure": 0.3333333333333333,
    "variable": 0.3333333333333333,
    "map": 0.16666666666666666
  },
  "local viable": {
    "is": 1.0
  },
  "viable is": {
    "allocated": 1.0
  },
  "is allocated": {
    "on": 0.3333333333333333,
    "static": 0.3333333333333333,
    "its": 0.16666666666666666,
    "when": 0.16666666666666666
  },
  "allocated on": {
    "the": 1.0
  },
  "on the": {
    "program": 0.02702702702702703,
    "heap": 0.02702702702702703,
    "stack": 0.13513513513513514,
    "same": 0.05405405405405406,
    "properties": 0.02702702702702703,
    "derived": 0.02702702702702703,
    "prototype": 0.02702702702702703,
    "way": 0.02702702702702703,
    "data": 0.02702702702702703,
    "class": 0.02702702702702703,
    "file": 0.02702702702702703,
    "foundat": 0.02702702702702703,
    "method": 0.05405405405405406,
    "construct": 0.02702702702702703,
    "other": 0.02702702702702703,
    "primary": 0.05405405405405406,
    "item": 0.02702702702702703,
    "put": 0.02702702702702703,
    "screen": 0.02702702702702703,
    "record": 0.08108108108108109,
    "sort": 0.02702702702702703,
    "back": 0.05405405405405406,
    "validity": 0.02702702702702703,
    "client": 0.05405405405405406,
    "join": 0.02702702702702703,
    "database": 0.02702702702702703
  },
  "the program": {
    "s": 0.1111111111111111,
    "for": 0.037037037037037035,
    "what": 0.037037037037037035,
    "file": 0.07407407407407407,
    "source": 0.1111111111111111,
    "map": 0.25925925925925924,
    "in": 0.07407407407407407,
    "has": 0.037037037037037035,
    "module": 0.037037037037037035,
    "data": 0.037037037037037035,
    "terminates": 0.07407407407407407,
    "not": 0.037037037037037035,
    "code": 0.037037037037037035,
    "executes": 0.037037037037037035
  },
  "program s": {
    "stack": 0.2,
    "data": 0.2,
    "map": 0.2,
    "tarts": 0.2,
    "global": 0.2
  },
  "s stack": {
    "unless": 1.0
  },
  "stack unless": {
    "it": 1.0
  },
  "unless it": {
    "is": 1.0
  },
  "is lar": {
    "ger": 1.0
  },
  "lar ger": {
    "than": 1.0
  },
  "ger than": {
    "the": 1.0
  },
  "than the": {
    "stack": 0.16666666666666666,
    "program": 0.16666666666666666,
    "address": 0.16666666666666666,
    "data": 0.16666666666666666,
    "physical": 0.16666666666666666,
    "decision": 0.16666666666666666
  },
  "the stack": {
    "threshold": 0.14285714285714285,
    "when": 0.2857142857142857,
    "dynamically": 0.14285714285714285,
    "this": 0.14285714285714285,
    "and": 0.14285714285714285,
    "therefore": 0.14285714285714285
  },
  "stack threshold": {
    "then": 1.0
  },
  "threshold then": {
    "it": 1.0
  },
  "then it": {
    "is": 0.5,
    "has": 0.5
  },
  "the heap": {
    "but": 1.0
  },
  "heap but": {
    "it": 1.0
  },
  "but it": {
    "behaves": 0.25,
    "doesn": 0.25,
    "actually": 0.25,
    "would": 0.25
  },
  "it behaves": {
    "the": 1.0
  },
  "behaves the": {
    "same": 1.0
  },
  "the same": {
    "as": 0.06756756756756757,
    "source": 0.06756756756756757,
    "set": 0.06756756756756757,
    "thing": 0.04054054054054054,
    "module": 0.02702702702702703,
    "executable": 0.013513513513513514,
    "type": 0.04054054054054054,
    "time": 0.05405405405405406,
    "se": 0.013513513513513514,
    "or": 0.013513513513513514,
    "parent": 0.02702702702702703,
    "prototype": 0.013513513513513514,
    "reasoning": 0.013513513513513514,
    "way": 0.013513513513513514,
    "name": 0.05405405405405406,
    "perspective": 0.013513513513513514,
    "code": 0.013513513513513514,
    "methods": 0.013513513513513514,
    "class": 0.02702702702702703,
    "basic": 0.013513513513513514,
    "base": 0.013513513513513514,
    "parameter": 0.013513513513513514,
    "neither": 0.013513513513513514,
    "if": 0.013513513513513514,
    "technique": 0.013513513513513514,
    "paramet": 0.013513513513513514,
    "fuzzy": 0.013513513513513514,
    "record": 0.10810810810810811,
    "file": 0.04054054054054054,
    "values": 0.013513513513513514,
    "change": 0.013513513513513514,
    "allow": 0.013513513513513514,
    "the": 0.04054054054054054,
    "memory": 0.013513513513513514,
    "order": 0.013513513513513514,
    "page": 0.013513513513513514,
    "number": 0.013513513513513514,
    "result": 0.013513513513513514
  },
  "same as": {
    "a": 0.2,
    "the": 0.2,
    "in": 0.2,
    "whe": 0.2,
    "any": 0.2
  },
  "a variable": {
    "allocated": 0.3333333333333333,
    "from": 0.3333333333333333,
    "in": 0.3333333333333333
  },
  "variable allocated": {
    "on": 1.0
  },
  "stack when": {
    "the": 1.0
  },
  "procedure is": {
    "complete": 0.125,
    "re": 0.125,
    "recursively": 0.125,
    "called": 0.375,
    "limited": 0.125,
    "a": 0.125
  },
  "is complete": {
    "and": 0.3333333333333333,
    "reportproc": 0.3333333333333333,
    "unlock": 0.3333333333333333
  },
  "complete and": {
    "program": 1.0
  },
  "and program": {
    "control": 1.0
  },
  "program control": {
    "returns": 1.0
  },
  "control returns": {
    "to": 1.0
  },
  "returns to": {
    "the": 0.75,
    "a": 0.25
  },
  "the place": {
    "from": 1.0
  },
  "place from": {
    "which": 1.0
  },
  "from which": {
    "it": 0.7142857142857143,
    "a": 0.14285714285714285,
    "the": 0.14285714285714285
  },
  "it was": {
    "called": 0.3333333333333333,
    "declared": 0.16666666666666666,
    "given": 0.16666666666666666,
    "retrieved": 0.16666666666666666,
    "first": 0.16666666666666666
  },
  "was called": {
    "the": 1.0
  },
  "called the": {
    "local": 0.4,
    "memory": 0.2,
    "sa": 0.2,
    "report": 0.2
  },
  "the local": {
    "variable": 0.2727272727272727,
    "data": 0.09090909090909091,
    "map": 0.09090909090909091,
    "variables": 0.18181818181818182,
    "derived": 0.18181818181818182,
    "buffer": 0.18181818181818182
  },
  "local variable": {
    "s": 0.16666666666666666,
    "declaration": 0.3333333333333333,
    "proc2": 0.16666666666666666,
    "anotherclass": 0.16666666666666666,
    "end": 0.16666666666666666
  },
  "variable s": {
    "memory": 0.5,
    "declaration": 0.5
  },
  "s memory": {
    "is": 1.0
  },
  "memory is": {
    "de": 0.3333333333333333,
    "automatically": 0.3333333333333333,
    "also": 0.3333333333333333
  },
  "is de": {
    "allocated": 1.0
  },
  "de allocated": {
    "and": 0.25,
    "from": 0.25,
    "when": 0.25,
    "the": 0.25
  },
  "allocated and": {
    "returned": 1.0
  },
  "and returned": {
    "to": 1.0
  },
  "returned to": {
    "the": 1.0
  },
  "program for": {
    "other": 1.0
  },
  "for other": {
    "uses": 0.14285714285714285,
    "s": 0.14285714285714285,
    "user": 0.42857142857142855,
    "locks": 0.14285714285714285,
    "users": 0.14285714285714285
  },
  "other uses": {
    "only": 1.0
  },
  "uses only": {
    "variables": 1.0
  },
  "only variables": {
    "declared": 1.0
  },
  "declared local": {
    "to": 1.0
  },
  "to a": {
    "procedure": 0.09375,
    "global": 0.03125,
    "derived": 0.03125,
    "single": 0.0625,
    "class": 0.0625,
    "specific": 0.21875,
    "virtu": 0.03125,
    "bicycle": 0.03125,
    "someclass": 0.09375,
    "queue": 0.03125,
    "data": 0.03125,
    "record": 0.0625,
    "second": 0.03125,
    "ushort": 0.03125,
    "common": 0.03125,
    "server": 0.03125,
    "minimum": 0.03125,
    "left": 0.03125,
    "previous": 0.03125
  },
  "procedure are": {
    "dynamically": 0.3333333333333333,
    "only": 0.3333333333333333,
    "assigned": 0.3333333333333333
  },
  "memory on": {
    "the": 1.0
  },
  "stack dynamically": {
    "allocated": 1.0
  },
  "allocated local": {
    "variables": 1.0
  },
  "local variables": {
    "makes": 0.2,
    "recursion": 0.2,
    "are": 0.2,
    "is": 0.2,
    "and": 0.2
  },
  "variables makes": {
    "recursive": 1.0
  },
  "makes recursive": {
    "and": 1.0
  },
  "recursive and": {
    "reentrant": 1.0
  },
  "and reentrant": {
    "procedure": 1.0
  },
  "reentrant procedure": {
    "s": 1.0
  },
  "s possible": {
    "a": 1.0
  },
  "possible a": {
    "procedure": 1.0
  },
  "is re": {
    "cursive": 1.0
  },
  "re cursive": {
    "if": 1.0
  },
  "cursive if": {
    "it": 1.0
  },
  "if it": {
    "calls": 0.16666666666666666,
    "were": 0.16666666666666666,
    "does": 0.16666666666666666,
    "is": 0.5
  },
  "it calls": {
    "itself": 0.5,
    "the": 0.5
  },
  "calls itself": {
    "within": 1.0
  },
  "itself within": {
    "its": 1.0
  },
  "within its": {
    "code": 0.5,
    "module": 0.5
  },
  "its code": {
    "each": 1.0
  },
  "code each": {
    "time": 1.0
  },
  "each time": {
    "a": 0.5,
    "well": 0.5
  },
  "time a": {
    "procedure": 0.3333333333333333,
    "record": 0.3333333333333333,
    "process": 0.3333333333333333
  },
  "is recursively": {
    "called": 1.0
  },
  "recursively called": {
    "it": 1.0
  },
  "called it": {
    "receives": 1.0
  },
  "it receives": {
    "a": 1.0
  },
  "receives a": {
    "new": 1.0
  },
  "a new": {
    "copy": 0.2,
    "statement": 0.2,
    "class": 0.2,
    "container": 0.2,
    "record": 0.2
  },
  "new copy": {
    "of": 1.0
  },
  "copy of": {
    "its": 0.3333333333333333,
    "the": 0.3333333333333333,
    "record": 0.3333333333333333
  },
  "of its": {
    "non": 0.2,
    "local": 0.2,
    "parent": 0.4,
    "derived": 0.2
  },
  "its non": {
    "static": 1.0
  },
  "non static": {
    "local": 1.0
  },
  "static local": {
    "variables": 1.0
  },
  "variables recursion": {
    "is": 1.0
  },
  "recursion is": {
    "an": 1.0
  },
  "is an": {
    "advanced": 0.058823529411764705,
    "other": 0.058823529411764705,
    "a": 0.058823529411764705,
    "oop": 0.11764705882352941,
    "excellent": 0.058823529411764705,
    "inherited": 0.058823529411764705,
    "instance": 0.058823529411764705,
    "index": 0.17647058823529413,
    "issue": 0.058823529411764705,
    "example": 0.23529411764705882,
    "array": 0.058823529411764705
  },
  "an advanced": {
    "programming": 1.0
  },
  "advanced programming": {
    "technique": 1.0
  },
  "programming technique": {
    "which": 1.0
  },
  "technique which": {
    "is": 1.0
  },
  "which is": {
    "useful": 0.1,
    "local": 0.1,
    "not": 0.1,
    "globally": 0.1,
    "very": 0.1,
    "one": 0.1,
    "being": 0.1,
    "about": 0.1,
    "the": 0.1,
    "a": 0.1
  },
  "for procedure": {
    "s": 1.0
  },
  "s which": {
    "must": 0.16666666666666666,
    "accomplish": 0.16666666666666666,
    "are": 0.3333333333333333,
    "reside": 0.16666666666666666,
    "act": 0.16666666666666666
  },
  "which must": {
    "be": 1.0
  },
  "must be": {
    "executed": 0.045454545454545456,
    "prototyped": 0.09090909090909091,
    "declared": 0.045454545454545456,
    "explicitly": 0.045454545454545456,
    "external": 0.045454545454545456,
    "a": 0.09090909090909091,
    "the": 0.045454545454545456,
    "defined": 0.045454545454545456,
    "resolved": 0.09090909090909091,
    "rebuilt": 0.045454545454545456,
    "in": 0.045454545454545456,
    "built": 0.045454545454545456,
    "read": 0.045454545454545456,
    "sure": 0.045454545454545456,
    "used": 0.045454545454545456,
    "opened": 0.045454545454545456,
    "embedded": 0.045454545454545456,
    "either": 0.045454545454545456,
    "present": 0.045454545454545456
  },
  "be executed": {
    "in": 1.0
  },
  "executed in": {
    "succe": 1.0
  },
  "in succe": {
    "ssive": 1.0
  },
  "succe ssive": {
    "iterations": 1.0
  },
  "ssive iterations": {
    "program": 1.0
  },
  "iterations program": {
    "map": 1.0
  },
  "map just": {
    "like": 1.0
  },
  "just like": {
    "a": 0.3333333333333333,
    "self": 0.3333333333333333,
    "hold": 0.3333333333333333
  },
  "like a": {
    "procedure": 0.25,
    "bit": 0.25,
    "limitation": 0.25,
    "lot": 0.25
  },
  "a program": {
    "has": 0.5,
    "s": 0.5
  },
  "program has": {
    "a": 0.5,
    "two": 0.5
  },
  "section between": {
    "the": 1.0
  },
  "between the": {
    "keywords": 0.21428571428571427,
    "various": 0.07142857142857142,
    "customer": 0.07142857142857142,
    "two": 0.21428571428571427,
    "many": 0.07142857142857142,
    "last": 0.07142857142857142,
    "physical": 0.07142857142857142,
    "second": 0.07142857142857142,
    "file": 0.07142857142857142,
    "client": 0.07142857142857142
  },
  "the keywords": {
    "program": 0.6666666666666666,
    "member": 0.3333333333333333
  },
  "keywords program": {
    "and": 1.0
  },
  "program and": {
    "code": 1.0
  },
  "and code": {
    "and": 0.3333333333333333,
    "myclass": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "section following": {
    "the": 1.0
  },
  "following the": {
    "keyword": 1.0
  },
  "code all": {
    "variables": 1.0
  },
  "all variables": {
    "and": 1.0
  },
  "variables and": {
    "data": 0.2857142857142857,
    "multiple": 0.14285714285714285,
    "the": 0.2857142857142857,
    "routines": 0.2857142857142857
  },
  "and data": {
    "structures": 1.0
  },
  "in the": {
    "program": 0.04697986577181208,
    "application": 0.020134228187919462,
    "global": 0.013422818791946308,
    "language": 0.026845637583892617,
    "map": 0.020134228187919462,
    "example": 0.006711409395973154,
    "module": 0.03355704697986577,
    "data": 0.013422818791946308,
    "member": 0.040268456375838924,
    "source": 0.013422818791946308,
    "myprog2": 0.006711409395973154,
    "modules": 0.013422818791946308,
    "same": 0.03355704697986577,
    "proc1": 0.013422818791946308,
    "clarion": 0.040268456375838924,
    "procedure": 0.020134228187919462,
    "fact": 0.020134228187919462,
    "parent": 0.020134228187919462,
    "base": 0.020134228187919462,
    "derived": 0.053691275167785234,
    "order": 0.026845637583892617,
    "middle": 0.006711409395973154,
    "audience": 0.006711409395973154,
    "preparepie": 0.006711409395973154,
    "applepie": 0.006711409395973154,
    "dutch": 0.006711409395973154,
    "abc": 0.006711409395973154,
    "world": 0.006711409395973154,
    "problem": 0.006711409395973154,
    "class": 0.03355704697986577,
    "executable": 0.013422818791946308,
    "vmt": 0.006711409395973154,
    "someclas": 0.006711409395973154,
    "dat": 0.006711409395973154,
    "variable": 0.006711409395973154,
    "above": 0.006711409395973154,
    "new": 0.006711409395973154,
    "declaration": 0.006711409395973154,
    "past": 0.006711409395973154,
    "primary": 0.013422818791946308,
    "customer": 0.013422818791946308,
    "second": 0.013422818791946308,
    "previous": 0.013422818791946308,
    "parts2prod": 0.006711409395973154,
    "foreign": 0.013422818791946308,
    "product": 0.006711409395973154,
    "relational": 0.006711409395973154,
    "sequence": 0.006711409395973154,
    "file": 0.053691275167785234,
    "build": 0.006711409395973154,
    "index": 0.020134228187919462,
    "records": 0.006711409395973154,
    "first": 0.006711409395973154,
    "case": 0.013422818791946308,
    "record": 0.006711409395973154,
    "locked": 0.006711409395973154,
    "network": 0.006711409395973154,
    "appropriate": 0.006711409395973154,
    "databa": 0.006711409395973154,
    "database": 0.020134228187919462,
    "child": 0.006711409395973154,
    "client": 0.013422818791946308,
    "back": 0.013422818791946308,
    "inner": 0.006711409395973154,
    "students": 0.013422818791946308,
    "generated": 0.006711409395973154,
    "next": 0.006711409395973154,
    "majors": 0.006711409395973154,
    "filter": 0.006711409395973154,
    "expression": 0.006711409395973154
  },
  "are global": {
    "available": 1.0
  },
  "global available": {
    "for": 1.0
  },
  "available for": {
    "use": 1.0
  },
  "for use": {
    "anywhere": 0.2857142857142857,
    "in": 0.2857142857142857,
    "within": 0.2857142857142857,
    "an": 0.14285714285714285
  },
  "use anywhere": {
    "in": 0.3333333333333333,
    "the": 0.3333333333333333,
    "that": 0.3333333333333333
  },
  "anywhere in": {
    "the": 1.0
  },
  "the application": {
    "and": 0.1111111111111111,
    "in": 0.1111111111111111,
    "s": 0.1111111111111111,
    "procedure": 0.1111111111111111,
    "required": 0.1111111111111111,
    "needs": 0.1111111111111111,
    "an": 0.1111111111111111,
    "really": 0.1111111111111111,
    "generator": 0.1111111111111111
  },
  "application and": {
    "are": 0.5,
    "the": 0.5
  },
  "and are": {
    "allocated": 0.5,
    "destroyed": 0.5
  },
  "are allocated": {
    "memory": 1.0
  },
  "memory statically": {
    "a": 1.0
  },
  "statically a": {
    "program": 1.0
  },
  "s map": {
    "structure": 0.16666666666666666,
    "therefore": 0.16666666666666666,
    "may": 0.5,
    "the": 0.16666666666666666
  },
  "map structure": {
    "is": 0.07142857142857142,
    "unless": 0.07142857142857142,
    "proc1": 0.07142857142857142,
    "this": 0.14285714285714285,
    "module": 0.21428571428571427,
    "proc2": 0.21428571428571427,
    "of": 0.07142857142857142,
    "a": 0.07142857142857142,
    "declaring": 0.07142857142857142
  },
  "structure is": {
    "located": 0.16666666666666666,
    "the": 0.16666666666666666,
    "a": 0.5,
    "that": 0.16666666666666666
  },
  "is located": {
    "in": 1.0
  },
  "located in": {
    "the": 1.0
  },
  "the global": {
    "data": 0.36363636363636365,
    "map": 0.2727272727272727,
    "approach": 0.09090909090909091,
    "executable": 0.18181818181818182,
    "objects": 0.09090909090909091
  },
  "global data": {
    "declaration": 0.25,
    "declar": 0.08333333333333333,
    "variables": 0.16666666666666666,
    "in": 0.08333333333333333,
    "is": 0.08333333333333333,
    "what": 0.08333333333333333,
    "section": 0.16666666666666666,
    "and": 0.08333333333333333
  },
  "section this": {
    "map": 1.0
  },
  "this map": {
    "tells": 0.5,
    "is": 0.5
  },
  "map tells": {
    "the": 1.0
  },
  "tells the": {
    "program": 0.1,
    "c": 0.1,
    "compiler": 0.1,
    "current": 0.1,
    "object": 0.1,
    "fi": 0.1,
    "f": 0.1,
    "back": 0.1,
    "file": 0.2
  },
  "program what": {
    "procedure": 1.0
  },
  "what procedure": {
    "s": 1.0
  },
  "s are": {
    "globally": 0.3333333333333333,
    "used": 0.3333333333333333,
    "available": 0.3333333333333333
  },
  "are globally": {
    "available": 1.0
  },
  "globally available": {
    "anywhere": 0.3333333333333333,
    "the": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "available anywhere": {
    "in": 1.0
  },
  "application in": {
    "a": 1.0
  },
  "a clarion": {
    "program": 0.25,
    "key": 0.5833333333333334,
    "programmer": 0.16666666666666666
  },
  "clarion program": {
    "all": 0.3333333333333333,
    "would": 0.3333333333333333,
    "if": 0.3333333333333333
  },
  "program all": {
    "procedure": 1.0
  },
  "all procedure": {
    "s": 0.6666666666666666,
    "calls": 0.3333333333333333
  },
  "s must": {
    "be": 1.0
  },
  "prototyped in": {
    "a": 0.2857142857142857,
    "that": 0.14285714285714285,
    "the": 0.42857142857142855,
    "both": 0.14285714285714285
  },
  "a map": {
    "structure": 0.2,
    "you": 0.2,
    "the": 0.2,
    "may": 0.2,
    "with": 0.2
  },
  "structure unless": {
    "they": 1.0
  },
  "unless they": {
    "are": 1.0
  },
  "are methods": {
    "of": 0.5,
    "which": 0.5
  },
  "methods of": {
    "a": 0.10526315789473684,
    "an": 0.15789473684210525,
    "the": 0.47368421052631576,
    "its": 0.10526315789473684,
    "classes": 0.05263157894736842,
    "any": 0.05263157894736842,
    "database": 0.05263157894736842
  },
  "a class": {
    "then": 0.03333333333333333,
    "declaration": 0.1,
    "declared": 0.03333333333333333,
    "which": 0.03333333333333333,
    "from": 0.03333333333333333,
    "method": 0.06666666666666667,
    "of": 0.03333333333333333,
    "hierarchy": 0.03333333333333333,
    "its": 0.03333333333333333,
    "such": 0.03333333333333333,
    "may": 0.1,
    "are": 0.06666666666666667,
    "containing": 0.03333333333333333,
    "share": 0.06666666666666667,
    "and": 0.03333333333333333,
    "propertya": 0.03333333333333333,
    "to": 0.03333333333333333,
    "the": 0.03333333333333333,
    "structure": 0.03333333333333333,
    "contains": 0.06666666666666667,
    "is": 0.03333333333333333,
    "with": 0.03333333333333333
  },
  "class then": {
    "the": 0.4,
    "derive": 0.2,
    "execute": 0.2,
    "executing": 0.2
  },
  "then the": {
    "class": 0.125,
    "derived": 0.375,
    "first": 0.125,
    "user": 0.125,
    "record": 0.125,
    "period": 0.125
  },
  "structure itself": {
    "contains": 0.5,
    "you": 0.5
  },
  "itself contains": {
    "the": 1.0
  },
  "contains the": {
    "prototype": 0.06666666666666667,
    "following": 0.5333333333333333,
    "abc": 0.06666666666666667,
    "specific": 0.06666666666666667,
    "order": 0.06666666666666667,
    "values": 0.06666666666666667,
    "same": 0.06666666666666667,
    "data": 0.06666666666666667
  },
  "the prototype": {
    "a": 0.2,
    "declared": 0.2,
    "of": 0.2,
    "then": 0.2,
    "in": 0.2
  },
  "prototype a": {
    "prototype": 1.0
  },
  "a prototype": {
    "of": 0.3333333333333333,
    "for": 0.6666666666666666
  },
  "prototype of": {
    "a": 0.5,
    "your": 0.5
  },
  "procedure tells": {
    "the": 1.0
  },
  "the c": {
    "ompiler": 0.5,
    "urrent": 0.5
  },
  "c ompiler": {
    "the": 1.0
  },
  "ompiler the": {
    "name": 1.0
  },
  "the name": {
    "of": 1.0
  },
  "name of": {
    "the": 1.0
  },
  "and how": {
    "to": 0.5,
    "it": 0.25,
    "we": 0.25
  },
  "how to": {
    "deal": 0.5,
    "program": 0.5
  },
  "to deal": {
    "with": 0.6666666666666666,
    "it": 0.3333333333333333
  },
  "deal with": {
    "it": 0.3333333333333333,
    "a": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "with it": {
    "for": 1.0
  },
  "it for": {
    "a": 0.25,
    "those": 0.25,
    "some": 0.5
  },
  "a complete": {
    "description": 0.3333333333333333,
    "discussion": 0.3333333333333333,
    "program": 0.3333333333333333
  },
  "complete description": {
    "of": 1.0
  },
  "description of": {
    "prototypes": 1.0
  },
  "of prototypes": {
    "see": 1.0
  },
  "prototypes see": {
    "procedure": 1.0
  },
  "see procedure": {
    "prototypes": 0.5,
    "ove": 0.5
  },
  "procedure prototypes": {
    "in": 0.25,
    "which": 0.5,
    "are": 0.25
  },
  "prototypes in": {
    "the": 1.0
  },
  "the language": {
    "reference": 1.0
  },
  "language reference": {
    "clarion": 0.25,
    "for": 0.5,
    "manual": 0.25
  },
  "reference clarion": {
    "language": 1.0
  },
  "guide 6": {
    "module": 1.0
  },
  "6 module": {
    "within": 0.5,
    "6": 0.5
  },
  "module within": {
    "a": 1.0
  },
  "map you": {
    "may": 0.5,
    "change": 0.5
  },
  "may have": {
    "module": 0.25,
    "local": 0.25,
    "its": 0.25,
    "multiple": 0.25
  },
  "have module": {
    "structures": 1.0
  },
  "module structures": {
    "which": 0.5,
    "if": 0.25,
    "and": 0.25
  },
  "structures which": {
    "declare": 0.3333333333333333,
    "are": 0.3333333333333333,
    "point": 0.3333333333333333
  },
  "which declare": {
    "the": 1.0
  },
  "declare the": {
    "separate": 0.2,
    "properties": 0.2,
    "method": 0.2,
    "virtual": 0.4
  },
  "the separate": {
    "source": 1.0
  },
  "separate source": {
    "file": 0.5555555555555556,
    "files": 0.4444444444444444
  },
  "source file": {
    "containing": 0.07142857142857142,
    "other": 0.07142857142857142,
    "to": 0.07142857142857142,
    "and": 0.07142857142857142,
    "points": 0.07142857142857142,
    "for": 0.07142857142857142,
    "myprog2": 0.2857142857142857,
    "myprog3": 0.07142857142857142,
    "the": 0.07142857142857142,
    "named": 0.07142857142857142,
    "making": 0.07142857142857142
  },
  "file containing": {
    "the": 1.0
  },
  "containing the": {
    "procedure": 0.25,
    "methods": 0.5,
    "foreign": 0.25
  },
  "s prototyped": {
    "in": 0.5,
    "are": 0.5
  },
  "in that": {
    "module": 0.2,
    "member": 0.2,
    "file": 0.2,
    "queue": 0.2,
    "case": 0.2
  },
  "that module": {
    "structure": 1.0
  },
  "module structure": {
    "the": 0.08333333333333333,
    "is": 0.08333333333333333,
    "defines": 0.08333333333333333,
    "within": 0.08333333333333333,
    "must": 0.08333333333333333,
    "in": 0.08333333333333333,
    "of": 0.3333333333333333,
    "as": 0.08333333333333333,
    "which": 0.08333333333333333
  },
  "structure the": {
    "module": 0.3333333333333333,
    "class": 0.3333333333333333,
    "view": 0.3333333333333333
  },
  "the module": {
    "structure": 0.5454545454545454,
    "any": 0.09090909090909091,
    "points": 0.09090909090909091,
    "objects": 0.09090909090909091,
    "attribute": 0.18181818181818182
  },
  "the mechanism": {
    "which": 0.25,
    "that": 0.5,
    "whereby": 0.25
  },
  "mechanism which": {
    "allows": 1.0
  },
  "allows the": {
    "next": 0.2,
    "class": 0.2,
    "user": 0.2,
    "other": 0.2,
    "back": 0.2
  },
  "the next": {
    "level": 0.1,
    "ten": 0.1,
    "one": 0.1,
    "and": 0.1,
    "or": 0.2,
    "record": 0.1,
    "page": 0.2,
    "statement": 0.1
  },
  "next level": {
    "of": 1.0
  },
  "level of": {
    "program": 0.3333333333333333,
    "the": 0.3333333333333333,
    "encapsulation": 0.3333333333333333
  },
  "of program": {
    "organization": 1.0
  },
  "program organization": {
    "grouping": 1.0
  },
  "organization grouping": {
    "procedure": 1.0
  },
  "grouping procedure": {
    "s": 1.0
  },
  "s into": {
    "separate": 1.0
  },
  "source files": {
    "there": 0.25,
    "this": 0.25,
    "any": 0.25,
    "the": 0.25
  },
  "files there": {
    "are": 1.0
  },
  "there are": {
    "many": 0.0625,
    "various": 0.03125,
    "about": 0.03125,
    "three": 0.15625,
    "two": 0.21875,
    "also": 0.09375,
    "no": 0.0625,
    "circumstances": 0.03125,
    "a": 0.03125,
    "seven": 0.03125,
    "multiple": 0.03125,
    "fou": 0.03125,
    "several": 0.03125,
    "related": 0.09375,
    "still": 0.03125,
    "always": 0.03125
  },
  "are many": {
    "reasons": 0.5,
    "books": 0.5
  },
  "many reasons": {
    "to": 1.0
  },
  "reasons to": {
    "split": 1.0
  },
  "to split": {
    "off": 1.0
  },
  "split off": {
    "groups": 1.0
  },
  "off groups": {
    "of": 1.0
  },
  "groups of": {
    "pro": 1.0
  },
  "of pro": {
    "cedure": 1.0
  },
  "pro cedure": {
    "s": 0.5,
    "derived": 0.5
  },
  "cedure s": {
    "into": 1.0
  },
  "files this": {
    "is": 1.0
  },
  "the point": {
    "at": 0.5,
    "where": 0.5
  },
  "point at": {
    "which": 1.0
  },
  "at which": {
    "debate": 1.0
  },
  "which debate": {
    "amongst": 1.0
  },
  "debate amongst": {
    "programmers": 1.0
  },
  "amongst programmers": {
    "with": 1.0
  },
  "programmers with": {
    "differing": 1.0
  },
  "with differing": {
    "viewpoints": 1.0
  },
  "differing viewpoints": {
    "becomes": 1.0
  },
  "viewpoints becomes": {
    "highly": 1.0
  },
  "becomes highly": {
    "charged": 1.0
  },
  "charged grouping": {
    "procedure": 1.0
  },
  "which accomplish": {
    "related": 1.0
  },
  "accomplish related": {
    "tasks": 1.0
  },
  "related tasks": {
    "is": 1.0
  },
  "tasks is": {
    "one": 1.0
  },
  "is one": {
    "approach": 0.1,
    "way": 0.2,
    "instance": 0.1,
    "specific": 0.1,
    "to": 0.3,
    "more": 0.1,
    "consideration": 0.1
  },
  "one approach": {
    "grouping": 1.0
  },
  "approach grouping": {
    "for": 1.0
  },
  "grouping for": {
    "optimization": 1.0
  },
  "for optimization": {
    "of": 1.0
  },
  "optimization of": {
    "compile": 1.0
  },
  "of compile": {
    "times": 1.0
  },
  "compile times": {
    "is": 1.0
  },
  "times is": {
    "an": 1.0
  },
  "an other": {
    "reason": 1.0
  },
  "other reason": {
    "for": 1.0
  },
  "reason for": {
    "grouping": 0.5,
    "that": 0.5
  },
  "for grouping": {
    "certain": 1.0
  },
  "grouping certain": {
    "files": 1.0
  },
  "certain files": {
    "together": 1.0
  },
  "files together": {
    "another": 1.0
  },
  "together another": {
    "purpose": 1.0
  },
  "another purpose": {
    "of": 1.0
  },
  "purpose of": {
    "procedure": 0.14285714285714285,
    "a": 0.14285714285714285,
    "the": 0.42857142857142855,
    "any": 0.14285714285714285,
    "client": 0.14285714285714285
  },
  "of procedure": {
    "grouping": 1.0
  },
  "procedure grouping": {
    "is": 1.0
  },
  "grouping is": {
    "the": 1.0
  },
  "the eventual": {
    "creation": 1.0
  },
  "eventual creation": {
    "of": 1.0
  },
  "creation of": {
    "a": 1.0
  },
  "a dynamic": {
    "link": 0.2,
    "index": 0.8
  },
  "dynamic link": {
    "library": 1.0
  },
  "link library": {
    "dll": 1.0
  },
  "library dll": {
    "no": 1.0
  },
  "dll no": {
    "matter": 1.0
  },
  "no matter": {
    "the": 0.14285714285714285,
    "how": 0.2857142857142857,
    "what": 0.2857142857142857,
    "which": 0.2857142857142857
  },
  "matter the": {
    "reason": 1.0
  },
  "the reason": {
    "the": 0.5,
    "for": 0.5
  },
  "reason the": {
    "module": 1.0
  },
  "structure defines": {
    "the": 1.0
  },
  "defines the": {
    "method": 1.0
  },
  "the method": {
    "by": 0.05263157894736842,
    "know": 0.10526315789473684,
    "s": 0.10526315789473684,
    "in": 0.21052631578947367,
    "so": 0.05263157894736842,
    "name": 0.05263157894736842,
    "call": 0.10526315789473684,
    "belongs": 0.05263157894736842,
    "and": 0.10526315789473684,
    "is": 0.05263157894736842,
    "prototype": 0.05263157894736842,
    "of": 0.05263157894736842
  },
  "method by": {
    "which": 1.0
  },
  "by which": {
    "your": 1.0
  },
  "which your": {
    "program": 1.0
  },
  "program may": {
    "reflect": 1.0
  },
  "may reflect": {
    "your": 1.0
  },
  "reflect your": {
    "structura": 1.0
  },
  "your structura": {
    "l": 1.0
  },
  "structura l": {
    "ideas": 1.0
  },
  "l ideas": {
    "member": 1.0
  },
  "ideas member": {
    "the": 1.0
  },
  "member the": {
    "prototypes": 1.0
  },
  "the prototypes": {
    "for": 1.0
  },
  "prototypes for": {
    "procedure": 0.3333333333333333,
    "all": 0.3333333333333333,
    "createcrust": 0.3333333333333333
  },
  "which are": {
    "defined": 0.2,
    "available": 0.4,
    "globally": 0.2,
    "only": 0.2
  },
  "are defined": {
    "in": 0.6666666666666666,
    "clarion": 0.3333333333333333
  },
  "defined in": {
    "a": 0.25,
    "clarion": 0.25,
    "the": 0.5
  },
  "a source": {
    "file": 0.25,
    "code": 0.25,
    "to": 0.25,
    "module": 0.25
  },
  "file other": {
    "than": 1.0
  },
  "other than": {
    "the": 0.6,
    "their": 0.2,
    "to": 0.2
  },
  "program file": {
    "must": 0.5,
    "to": 0.5
  },
  "file must": {
    "be": 1.0
  },
  "be declared": {
    "in": 0.3333333333333333,
    "for": 0.6666666666666666
  },
  "a module": {
    "structure": 0.6,
    "stru": 0.2,
    "s": 0.2
  },
  "structure within": {
    "a": 1.0
  },
  "map the": {
    "source": 0.1,
    "global": 0.3,
    "member": 0.3,
    "procedure": 0.2,
    "local": 0.1
  },
  "the source": {
    "code": 0.6666666666666666,
    "file": 0.1111111111111111,
    "module": 0.2222222222222222
  },
  "source code": {
    "file": 0.32142857142857145,
    "is": 0.03571428571428571,
    "proc1": 0.03571428571428571,
    "a": 0.10714285714285714,
    "in": 0.03571428571428571,
    "for": 0.14285714285714285,
    "the": 0.14285714285714285,
    "proc2": 0.03571428571428571,
    "definition": 0.03571428571428571,
    "module": 0.07142857142857142,
    "to": 0.03571428571428571
  },
  "code file": {
    "specified": 0.1111111111111111,
    "beginning": 0.1111111111111111,
    "named": 0.1111111111111111,
    "myprog2": 0.3333333333333333,
    "which": 0.1111111111111111,
    "myprog3": 0.1111111111111111,
    "contains": 0.1111111111111111
  },
  "file specified": {
    "by": 1.0
  },
  "specified by": {
    "the": 1.0
  },
  "by the": {
    "module": 0.058823529411764705,
    "procedure": 0.058823529411764705,
    "proc1": 0.058823529411764705,
    "local": 0.058823529411764705,
    "way": 0.11764705882352941,
    "same": 0.058823529411764705,
    "new": 0.058823529411764705,
    "component": 0.058823529411764705,
    "pointer": 0.058823529411764705,
    "other": 0.058823529411764705,
    "file": 0.11764705882352941,
    "application": 0.058823529411764705,
    "database": 0.058823529411764705,
    "sql": 0.058823529411764705,
    "back": 0.058823529411764705
  },
  "structure must": {
    "begin": 1.0
  },
  "must begin": {
    "with": 1.0
  },
  "begin with": {
    "a": 1.0
  },
  "with a": {
    "member": 0.11764705882352941,
    "memory": 0.058823529411764705,
    "starting": 0.058823529411764705,
    "period": 0.058823529411764705,
    "long": 0.058823529411764705,
    "lot": 0.058823529411764705,
    "one": 0.058823529411764705,
    "many": 0.058823529411764705,
    "multiple": 0.058823529411764705,
    "different": 0.11764705882352941,
    "file": 0.058823529411764705,
    "static": 0.058823529411764705,
    "release": 0.058823529411764705,
    "5": 0.058823529411764705,
    "plus": 0.058823529411764705
  },
  "a member": {
    "statement": 0.1875,
    "module": 0.75,
    "map": 0.0625
  },
  "member statement": {
    "an": 0.16666666666666666,
    "is": 0.16666666666666666,
    "specifies": 0.16666666666666666,
    "within": 0.16666666666666666,
    "which": 0.16666666666666666,
    "poi": 0.16666666666666666
  },
  "statement an": {
    "y": 1.0
  },
  "an y": {
    "source": 1.0
  },
  "y source": {
    "code": 1.0
  },
  "file beginning": {
    "with": 1.0
  },
  "beginning with": {
    "a": 1.0
  },
  "statement is": {
    "commonly": 0.125,
    "polymorphic": 0.125,
    "used": 0.125,
    "the": 0.25,
    "not": 0.125,
    "directed": 0.125,
    "limited": 0.125
  },
  "is commonly": {
    "referred": 1.0
  },
  "commonly referred": {
    "to": 1.0
  },
  "referred to": {
    "as": 1.0
  },
  "to as": {
    "a": 0.5,
    "its": 0.25,
    "parent": 0.25
  },
  "member module": {
    "the": 0.034482758620689655,
    "of": 0.034482758620689655,
    "also": 0.034482758620689655,
    "is": 0.034482758620689655,
    "and": 0.034482758620689655,
    "unless": 0.034482758620689655,
    "s": 0.3103448275862069,
    "using": 0.034482758620689655,
    "end": 0.034482758620689655,
    "proc1": 0.06896551724137931,
    "m": 0.034482758620689655,
    "map": 0.13793103448275862,
    "which": 0.034482758620689655,
    "data": 0.034482758620689655,
    "a": 0.06896551724137931,
    "may": 0.034482758620689655
  },
  "module the": {
    "member": 0.5,
    "advantage": 0.5
  },
  "the member": {
    "statement": 0.15789473684210525,
    "file": 0.05263157894736842,
    "source": 0.05263157894736842,
    "module": 0.42105263157894735,
    "map": 0.15789473684210525,
    "proc1": 0.05263157894736842,
    "data": 0.05263157894736842,
    "which": 0.05263157894736842
  },
  "statement specifies": {
    "the": 0.3333333333333333,
    "that": 0.3333333333333333,
    "two": 0.3333333333333333
  },
  "specifies the": {
    "filename": 0.5,
    "type": 0.5
  },
  "the filename": {
    "of": 1.0
  },
  "filename of": {
    "the": 1.0
  },
  "program source": {
    "file": 1.0
  },
  "file to": {
    "which": 0.2857142857142857,
    "re": 0.14285714285714285,
    "the": 0.2857142857142857,
    "hold": 0.14285714285714285,
    "be": 0.14285714285714285
  },
  "to which": {
    "the": 0.3333333333333333,
    "this": 0.16666666666666666,
    "it": 0.3333333333333333,
    "they": 0.16666666666666666
  },
  "which the": {
    "member": 0.07142857142857142,
    "procedure": 0.07142857142857142,
    "module": 0.07142857142857142,
    "private": 0.07142857142857142,
    "method": 0.14285714285714285,
    "new": 0.07142857142857142,
    "records": 0.14285714285714285,
    "user": 0.07142857142857142,
    "other": 0.07142857142857142,
    "database": 0.07142857142857142,
    "buffered": 0.07142857142857142,
    "data": 0.07142857142857142
  },
  "member file": {
    "belongs": 1.0
  },
  "file belongs": {
    "the": 1.0
  },
  "belongs the": {
    "module": 1.0
  },
  "structure in": {
    "the": 1.0
  },
  "the map": {
    "poi": 0.14285714285714285,
    "in": 0.42857142857142855,
    "structure": 0.2857142857142857,
    "crc16": 0.14285714285714285
  },
  "map poi": {
    "nts": 1.0
  },
  "poi nts": {
    "to": 0.5,
    "back": 0.5
  },
  "nts to": {
    "the": 1.0
  },
  "member source": {
    "file": 1.0
  },
  "file and": {
    "the": 0.5,
    "its": 0.1,
    "you": 0.1,
    "in": 0.1,
    "another": 0.1,
    "any": 0.1
  },
  "and the": {
    "member": 0.022222222222222223,
    "first": 0.022222222222222223,
    "procedures": 0.044444444444444446,
    "clarion": 0.022222222222222223,
    "rest": 0.022222222222222223,
    "new": 0.022222222222222223,
    "grandmas": 0.022222222222222223,
    "derived": 0.06666666666666667,
    "other": 0.044444444444444446,
    "compiler": 0.044444444444444446,
    "same": 0.022222222222222223,
    "methods": 0.044444444444444446,
    "network": 0.022222222222222223,
    "item": 0.044444444444444446,
    "primary": 0.022222222222222223,
    "order": 0.022222222222222223,
    "relationship": 0.022222222222222223,
    "file": 0.08888888888888889,
    "product": 0.022222222222222223,
    "change": 0.022222222222222223,
    "fact": 0.022222222222222223,
    "next": 0.022222222222222223,
    "index": 0.022222222222222223,
    "type": 0.022222222222222223,
    "position": 0.022222222222222223,
    "two": 0.022222222222222223,
    "calculation": 0.022222222222222223,
    "put": 0.022222222222222223,
    "report": 0.022222222222222223,
    "user": 0.022222222222222223,
    "server": 0.022222222222222223,
    "database": 0.044444444444444446,
    "buffer": 0.022222222222222223,
    "error": 0.022222222222222223
  },
  "statement within": {
    "that": 0.5,
    "the": 0.5
  },
  "that source": {
    "file": 0.5,
    "that": 0.5
  },
  "file points": {
    "back": 1.0
  },
  "points back": {
    "to": 1.0
  },
  "back to": {
    "the": 0.7272727272727273,
    "inheritance": 0.09090909090909091,
    "our": 0.09090909090909091,
    "disk": 0.09090909090909091
  },
  "file for": {
    "example": 1.0
  },
  "for example": {
    "a": 0.04,
    "assume": 0.08,
    "the": 0.48,
    "we": 0.04,
    "objects": 0.04,
    "suppose": 0.04,
    "an": 0.04,
    "using": 0.04,
    "although": 0.04,
    "member": 0.04,
    "if": 0.04,
    "myfile": 0.04,
    "next": 0.04
  },
  "example a": {
    "source": 0.25,
    "file": 0.5,
    "record": 0.25
  },
  "file named": {
    "myprog": 0.8,
    "in": 0.2
  },
  "named myprog": {
    "clw": 1.0
  },
  "myprog clw": {
    "contains": 0.6666666666666666,
    "module": 0.16666666666666666,
    "proc2": 0.16666666666666666
  },
  "clw contains": {
    "the": 0.8333333333333334,
    "someclass": 0.16666666666666666
  },
  "the following": {
    "code": 0.4583333333333333,
    "someclass": 0.041666666666666664,
    "executable": 0.08333333333333333,
    "data": 0.041666666666666664,
    "record": 0.041666666666666664,
    "global": 0.041666666666666664,
    "example": 0.041666666666666664,
    "view": 0.20833333333333334,
    "buffer": 0.041666666666666664
  },
  "following code": {
    "program": 0.2727272727272727,
    "member": 0.36363636363636365,
    "proc1": 0.09090909090909091,
    "creates": 0.09090909090909091,
    "uses": 0.09090909090909091,
    "replaces": 0.09090909090909091
  },
  "code program": {
    "begin": 1.0
  },
  "program begin": {
    "global": 1.0
  },
  "begin global": {
    "data": 1.0
  },
  "data declar": {
    "ation": 1.0
  },
  "declar ation": {
    "section": 1.0
  },
  "ation section": {
    "map": 1.0
  },
  "section map": {
    "the": 1.0
  },
  "global map": {
    "structure": 0.6,
    "that": 0.2,
    "you": 0.2
  },
  "structure proc1": {
    "procedure": 1.0
  },
  "proc1 procedure": {
    "a": 0.1,
    "begin": 0.4,
    "contains": 0.2,
    "map": 0.1,
    "proclocalvariable": 0.1,
    "s": 0.1
  },
  "prototype for": {
    "a": 0.3333333333333333,
    "proc2": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "procedure whose": {
    "source": 1.0
  },
  "whose source": {
    "code": 1.0
  },
  "code is": {
    "in": 0.4,
    "to": 0.2,
    "compiled": 0.2,
    "shared": 0.2
  },
  "is in": {
    "myprog": 0.14285714285714285,
    "a": 0.2857142857142857,
    "source": 0.14285714285714285,
    "scope": 0.2857142857142857,
    "use": 0.14285714285714285
  },
  "in myprog": {
    "clw": 1.0
  },
  "clw module": {
    "myprog2": 1.0
  },
  "module myprog2": {
    "a": 1.0
  },
  "myprog2 a": {
    "separate": 1.0
  },
  "file myprog2": {
    "clw": 1.0
  },
  "myprog2 clw": {
    "proc2": 0.07692307692307693,
    "declared": 0.07692307692307693,
    "therefore": 0.07692307692307693,
    "and": 0.07692307692307693,
    "is": 0.15384615384615385,
    "proc1": 0.15384615384615385,
    "now": 0.15384615384615385,
    "member": 0.23076923076923078
  },
  "clw proc2": {
    "procedure": 1.0
  },
  "proc2 procedure": {
    "contains": 0.2727272727272727,
    "begin": 0.2727272727272727,
    "a": 0.09090909090909091,
    "was": 0.18181818181818182,
    "an": 0.09090909090909091,
    "local": 0.09090909090909091
  },
  "procedure contains": {
    "another": 0.4,
    "a": 0.6
  },
  "contains another": {
    "procedure": 1.0
  },
  "procedure end": {
    "end": 0.14814814814814814,
    "classa": 0.2222222222222222,
    "dutch": 0.037037037037037035,
    "icecream": 0.037037037037037035,
    "alamode": 0.037037037037037035,
    "code": 0.07407407407407407,
    "myclass": 0.037037037037037035,
    "someclassobject1": 0.037037037037037035,
    "someclassobjectref": 0.037037037037037035,
    "anotherclass": 0.14814814814814814,
    "in": 0.037037037037037035,
    "someclass": 0.07407407407407407,
    "multiclass": 0.037037037037037035,
    "clarion": 0.037037037037037035
  },
  "end end": {
    "module": 0.14285714285714285,
    "map": 0.25,
    "order": 0.07142857142857142,
    "shipto": 0.03571428571428571,
    "item": 0.07142857142857142,
    "product": 0.03571428571428571,
    "parts2prod": 0.03571428571428571,
    "43": 0.03571428571428571,
    "notice": 0.03571428571428571,
    "end": 0.03571428571428571,
    "45": 0.03571428571428571,
    "changecascade": 0.03571428571428571,
    "changenullify": 0.03571428571428571,
    "loop": 0.03571428571428571,
    "process": 0.03571428571428571,
    "adding": 0.03571428571428571,
    "filter": 0.03571428571428571
  },
  "end module": {
    "end": 0.8,
    "someclass": 0.2
  },
  "module end": {
    "end": 1.0
  },
  "end map": {
    "code": 0.42857142857142855,
    "var1": 0.14285714285714285,
    "proc1": 0.14285714285714285,
    "proc2": 0.14285714285714285,
    "proclocalvariable": 0.14285714285714285
  },
  "map code": {
    "begin": 1.0
  },
  "code begin": {
    "program": 0.3,
    "procedure": 0.7
  },
  "begin program": {
    "executable": 1.0
  },
  "program executable": {
    "code": 1.0
  },
  "code some": {
    "executable": 1.0
  },
  "some executable": {
    "source": 1.0
  },
  "executable source": {
    "code": 1.0
  },
  "code proc1": {
    "procedure": 1.0
  },
  "procedure begin": {
    "local": 1.0
  },
  "begin local": {
    "data": 1.0
  },
  "local data": {
    "declaration": 0.30434782608695654,
    "and": 0.17391304347826086,
    "variables": 0.13043478260869565,
    "in": 0.08695652173913043,
    "that": 0.043478260869565216,
    "section": 0.08695652173913043,
    "declarations": 0.08695652173913043,
    "to": 0.043478260869565216,
    "manipulateaandb": 0.043478260869565216
  },
  "section code": {
    "begin": 1.0
  },
  "begin procedure": {
    "executable": 1.0
  },
  "procedure executable": {
    "code": 1.0
  },
  "code a": {
    "second": 0.3333333333333333,
    "third": 0.3333333333333333,
    "procedure": 0.3333333333333333
  },
  "a second": {
    "source": 0.25,
    "file": 0.25,
    "user": 0.25,
    "memory": 0.25
  },
  "second source": {
    "code": 1.0
  },
  "clw declared": {
    "in": 1.0
  },
  "in t": {
    "he": 1.0
  },
  "t he": {
    "module": 0.2,
    "code": 0.2,
    "compiler": 0.2,
    "values": 0.2,
    "primary": 0.2
  },
  "he module": {
    "structure": 1.0
  },
  "map in": {
    "the": 0.6,
    "myprog2": 0.2,
    "myprog3": 0.2
  },
  "the example": {
    "code": 1.0
  },
  "example code": {
    "above": 0.14285714285714285,
    "using": 0.14285714285714285,
    "processes": 0.14285714285714285,
    "demonstrates": 0.2857142857142857,
    "would": 0.14285714285714285,
    "if": 0.14285714285714285
  },
  "code above": {
    "contains": 1.0
  },
  "above contains": {
    "the": 1.0
  },
  "code member": {
    "myprog": 1.0
  },
  "member myprog": {
    "member": 0.2,
    "the": 0.6,
    "map": 0.2
  },
  "myprog member": {
    "module": 1.0
  },
  "module of": {
    "the": 1.0
  },
  "program in": {
    "myprog": 0.3333333333333333,
    "local": 0.3333333333333333,
    "it": 0.3333333333333333
  },
  "code in": {
    "this": 0.2,
    "parent": 0.2,
    "preparepie": 0.2,
    "the": 0.4
  },
  "in this": {
    "example": 0.5,
    "case": 0.2727272727272727,
    "mo": 0.045454545454545456,
    "simple": 0.045454545454545456,
    "code": 0.045454545454545456,
    "manner": 0.045454545454545456,
    "article": 0.045454545454545456
  },
  "this example": {
    "the": 0.15789473684210525,
    "declares": 0.15789473684210525,
    "overrides": 0.05263157894736842,
    "anotherclass": 0.05263157894736842,
    "were": 0.05263157894736842,
    "defines": 0.05263157894736842,
    "a": 0.05263157894736842,
    "parts": 0.05263157894736842,
    "code": 0.15789473684210525,
    "sample": 0.05263157894736842,
    "update": 0.05263157894736842,
    "demonstrates": 0.05263157894736842,
    "is": 0.05263157894736842
  },
  "example the": {
    "program": 0.0625,
    "dutch": 0.0625,
    "and": 0.0625,
    "clarion": 0.0625,
    "manipulateaandb": 0.0625,
    "relationship": 0.0625,
    "key": 0.0625,
    "following": 0.5,
    "conditional": 0.0625
  },
  "has two": {
    "procedure": 1.0
  },
  "two procedure": {
    "s": 1.0
  },
  "s proc1": {
    "and": 1.0
  },
  "proc1 and": {
    "proc2": 1.0
  },
  "and proc2": {
    "the": 0.25,
    "clarion": 0.5,
    "myroutine": 0.25
  },
  "proc2 the": {
    "source": 1.0
  },
  "code for": {
    "proc2": 0.16666666666666666,
    "procedure": 0.16666666666666666,
    "inherited": 0.16666666666666666,
    "all": 0.16666666666666666,
    "an": 0.16666666666666666,
    "the": 0.16666666666666666
  },
  "for proc2": {
    "is": 0.3333333333333333,
    "in": 0.3333333333333333,
    "may": 0.3333333333333333
  },
  "proc2 is": {
    "in": 1.0
  },
  "separate file": {
    "myprog2": 1.0
  },
  "clw therefore": {
    "the": 1.0
  },
  "map contains": {
    "a": 1.0
  },
  "contains a": {
    "module": 0.09090909090909091,
    "procedure": 0.18181818181818182,
    "local": 0.09090909090909091,
    "reference": 0.2727272727272727,
    "virtual": 0.09090909090909091,
    "method": 0.18181818181818182,
    "number": 0.09090909090909091
  },
  "module stru": {
    "cture": 1.0
  },
  "stru cture": {
    "which": 1.0
  },
  "cture which": {
    "declares": 1.0
  },
  "which declares": {
    "that": 0.3333333333333333,
    "them": 0.3333333333333333,
    "somelocalproc": 0.3333333333333333
  },
  "declares that": {
    "proc2": 1.0
  },
  "that proc2": {
    "is": 1.0
  },
  "in source": {
    "file": 1.0
  },
  "clw and": {
    "the": 1.0
  },
  "the first": {
    "statement": 0.10344827586206896,
    "procedure": 0.034482758620689655,
    "of": 0.034482758620689655,
    "object": 0.034482758620689655,
    "entry": 0.034482758620689655,
    "component": 0.06896551724137931,
    "file": 0.034482758620689655,
    "time": 0.034482758620689655,
    "get": 0.034482758620689655,
    "record": 0.20689655172413793,
    "next": 0.034482758620689655,
    "user": 0.1724137931034483,
    "place": 0.034482758620689655,
    "occurs": 0.034482758620689655,
    "lock": 0.034482758620689655,
    "solution": 0.034482758620689655,
    "page": 0.034482758620689655
  },
  "first statement": {
    "in": 0.3333333333333333,
    "that": 0.3333333333333333,
    "within": 0.3333333333333333
  },
  "statement in": {
    "myprog2": 0.3333333333333333,
    "the": 0.3333333333333333,
    "addition": 0.3333333333333333
  },
  "in myprog2": {
    "clw": 1.0
  },
  "clw is": {
    "a": 0.5,
    "duplicated": 0.5
  },
  "which tells": {
    "the": 1.0
  },
  "compiler the": {
    "program": 1.0
  },
  "which this": {
    "member": 1.0
  },
  "this member": {
    "belongs": 1.0
  },
  "member belongs": {
    "7": 1.0
  },
  "belongs 7": {
    "program": 1.0
  },
  "7 program": {
    "structure": 1.0
  },
  "structure member": {
    "maps": 1.0
  },
  "maps a": {
    "member": 1.0
  },
  "module also": {
    "has": 1.0
  },
  "also has": {
    "a": 0.5,
    "the": 0.5
  },
  "declaration se": {
    "ction": 1.0
  },
  "se ction": {
    "it": 1.0
  },
  "ction it": {
    "begins": 1.0
  },
  "it begins": {
    "following": 1.0
  },
  "begins following": {
    "the": 1.0
  },
  "keyword member": {
    "and": 1.0
  },
  "member and": {
    "ends": 0.5,
    "procedure": 0.5
  },
  "ends at": {
    "the": 1.0
  },
  "at the": {
    "first": 0.041666666666666664,
    "code": 0.20833333333333334,
    "1997": 0.041666666666666664,
    "same": 0.16666666666666666,
    "exact": 0.041666666666666664,
    "time": 0.08333333333333333,
    "generated": 0.041666666666666664,
    "bottom": 0.041666666666666664,
    "real": 0.041666666666666664,
    "problem": 0.041666666666666664,
    "natural": 0.041666666666666664,
    "most": 0.041666666666666664,
    "object": 0.041666666666666664,
    "end": 0.041666666666666664,
    "index": 0.041666666666666664,
    "position": 0.041666666666666664
  },
  "first procedure": {
    "statement": 1.0
  },
  "procedure statement": {
    "in": 0.5,
    "b": 0.5
  },
  "module any": {
    "variable": 1.0
  },
  "any variable": {
    "or": 1.0
  },
  "variable or": {
    "data": 1.0
  },
  "data structure": {
    "declared": 0.5,
    "that": 0.5
  },
  "structure declared": {
    "in": 1.0
  },
  "section of": {
    "a": 1.0
  },
  "module is": {
    "local": 1.0
  },
  "is local": {
    "to": 1.0
  },
  "that member": {
    "module": 1.0
  },
  "module and": {
    "is": 0.5,
    "declares": 0.5
  },
  "and is": {
    "allocated": 0.14285714285714285,
    "discussed": 0.14285714285714285,
    "in": 0.14285714285714285,
    "not": 0.14285714285714285,
    "destroyed": 0.14285714285714285,
    "always": 0.14285714285714285,
    "ready": 0.14285714285714285
  },
  "allocated static": {
    "memory": 1.0
  },
  "static memory": {
    "this": 0.4,
    "in": 0.2,
    "of": 0.2,
    "clarion": 0.2
  },
  "memory this": {
    "means": 1.0
  },
  "means it": {
    "may": 1.0
  },
  "be accessed": {
    "only": 0.3333333333333333,
    "by": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "accessed only": {
    "by": 1.0
  },
  "only by": {
    "a": 0.2,
    "other": 0.2,
    "the": 0.4,
    "th": 0.2
  },
  "by a": {
    "procedure": 0.2,
    "looku": 0.2,
    "put": 0.2,
    "system": 0.2,
    "company": 0.2
  },
  "which resides": {
    "in": 1.0
  },
  "resides in": {
    "that": 0.5,
    "another": 0.5
  },
  "module unless": {
    "passed": 1.0
  },
  "parameter to": {
    "another": 0.16666666666666666,
    "its": 0.16666666666666666,
    "the": 0.16666666666666666,
    "a": 0.16666666666666666,
    "new": 0.16666666666666666,
    "simplify": 0.16666666666666666
  },
  "in another": {
    "source": 0.25,
    "file": 0.75
  },
  "another source": {
    "module": 1.0
  },
  "source module": {
    "essentially": 0.125,
    "localvariab": 0.125,
    "containing": 0.25,
    "as": 0.125,
    "this": 0.125,
    "someclass": 0.125,
    "making": 0.125
  },
  "module essentially": {
    "making": 1.0
  },
  "essentially making": {
    "them": 1.0
  },
  "making them": {
    "private": 1.0
  },
  "them private": {
    "variables": 0.5,
    "property": 0.5
  },
  "private variables": {
    "in": 1.0
  },
  "variables in": {
    "addition": 0.5,
    "clarion": 0.5
  },
  "in addition": {
    "to": 1.0
  },
  "addition to": {
    "data": 0.5,
    "public": 0.25,
    "its": 0.25
  },
  "to data": {
    "declaration": 0.5,
    "declarations": 0.5
  },
  "declaration s": {
    "a": 1.0
  },
  "s a": {
    "member": 0.16666666666666666,
    "procedure": 0.16666666666666666,
    "good": 0.16666666666666666,
    "virtual": 0.16666666666666666,
    "pretty": 0.16666666666666666,
    "car": 0.16666666666666666
  },
  "module s": {
    "data": 0.6363636363636364,
    "map": 0.36363636363636365
  },
  "section may": {
    "also": 0.6666666666666666,
    "declare": 0.3333333333333333
  },
  "also contain": {
    "its": 0.5,
    "module": 0.25,
    "a": 0.25
  },
  "contain its": {
    "own": 1.0
  },
  "its own": {
    "map": 0.21428571428571427,
    "data": 0.07142857142857142,
    "set": 0.35714285714285715,
    "discrete": 0.07142857142857142,
    "properties": 0.07142857142857142,
    "specific": 0.14285714285714285,
    "version": 0.07142857142857142
  },
  "own map": {
    "structure": 1.0
  },
  "structure this": {
    "map": 0.14285714285714285,
    "example": 0.42857142857142855,
    "means": 0.14285714285714285,
    "completely": 0.14285714285714285,
    "is": 0.14285714285714285
  },
  "map is": {
    "structurally": 1.0
  },
  "is structurally": {
    "the": 1.0
  },
  "structurally the": {
    "same": 1.0
  },
  "as the": {
    "map": 0.05263157894736842,
    "action": 0.05263157894736842,
    "class": 0.10526315789473684,
    "global": 0.05263157894736842,
    "object": 0.10526315789473684,
    "par": 0.05263157894736842,
    "derived": 0.05263157894736842,
    "base": 0.05263157894736842,
    "data": 0.05263157894736842,
    "parameter": 0.05263157894736842,
    "instance": 0.05263157894736842,
    "methods": 0.05263157894736842,
    "declaring": 0.05263157894736842,
    "primary": 0.05263157894736842,
    "cascade": 0.05263157894736842,
    "starting": 0.05263157894736842,
    "third": 0.05263157894736842
  },
  "program module": {
    "and": 0.5,
    "which": 0.5
  },
  "and declares": {
    "procedure": 1.0
  },
  "declares procedure": {
    "prototypes": 1.0
  },
  "prototypes which": {
    "are": 1.0
  },
  "are available": {
    "locally": 0.6666666666666666,
    "for": 0.3333333333333333
  },
  "available locally": {
    "within": 1.0
  },
  "locally within": {
    "the": 1.0
  },
  "module using": {
    "the": 1.0
  },
  "using the": {
    "prev": 0.1,
    "previous": 0.3,
    "object": 0.1,
    "same": 0.1,
    "files": 0.3,
    "clarion": 0.1
  },
  "the prev": {
    "ious": 1.0
  },
  "prev ious": {
    "example": 1.0
  },
  "ious example": {
    "a": 1.0
  },
  "a file": {
    "named": 0.10714285714285714,
    "or": 0.17857142857142858,
    "declaration": 0.03571428571428571,
    "structure": 0.03571428571428571,
    "based": 0.07142857142857142,
    "which": 0.07142857142857142,
    "sequential": 0.03571428571428571,
    "procedure": 0.03571428571428571,
    "the": 0.07142857142857142,
    "get": 0.03571428571428571,
    "that": 0.03571428571428571,
    "until": 0.03571428571428571,
    "to": 0.03571428571428571,
    "lock": 0.07142857142857142,
    "locked": 0.03571428571428571,
    "and": 0.03571428571428571,
    "must": 0.03571428571428571,
    "while": 0.03571428571428571
  },
  "structure module": {
    "myprog2": 0.6666666666666666,
    "myprog3": 0.3333333333333333
  },
  "clw proc1": {
    "procedure": 1.0
  },
  "code the": {
    "second": 0.2857142857142857,
    "proc2": 0.14285714285714285,
    "procedure": 0.14285714285714285,
    "object": 0.14285714285714285,
    "purpose": 0.14285714285714285,
    "constructor": 0.14285714285714285
  },
  "the second": {
    "source": 0.13333333333333333,
    "member": 0.06666666666666667,
    "object": 0.06666666666666667,
    "file": 0.06666666666666667,
    "example": 0.06666666666666667,
    "access": 0.06666666666666667,
    "add": 0.06666666666666667,
    "faster": 0.06666666666666667,
    "user": 0.06666666666666667,
    "memory": 0.06666666666666667,
    "calculation": 0.06666666666666667,
    "get": 0.06666666666666667,
    "form": 0.06666666666666667,
    "takes": 0.06666666666666667
  },
  "clw now": {
    "contains": 1.0
  },
  "now contains": {
    "the": 1.0
  },
  "myprog the": {
    "beginning": 1.0
  },
  "member map": {
    "structure": 0.75,
    "but": 0.25
  },
  "structure proc2": {
    "procedure": 1.0
  },
  "the myprog2": {
    "clw": 1.0
  },
  "clw member": {
    "module": 1.0
  },
  "map var1": {
    "byte": 1.0
  },
  "var1 byte": {
    "a": 1.0
  },
  "byte a": {
    "static": 1.0
  },
  "a static": {
    "variable": 0.3333333333333333,
    "index": 0.3333333333333333,
    "attribute": 0.3333333333333333
  },
  "static variable": {
    "local": 1.0
  },
  "variable local": {
    "to": 1.0
  },
  "member proc1": {
    "procedure": 1.0
  },
  "code proc2": {
    "procedure": 0.5,
    "a": 0.5
  },
  "the proc2": {
    "procedure": 1.0
  },
  "procedure was": {
    "not": 1.0
  },
  "was not": {
    "declared": 1.0
  },
  "not declared": {
    "in": 1.0
  },
  "map but": {
    "only": 1.0
  },
  "but only": {
    "in": 1.0
  },
  "only in": {
    "the": 0.8,
    "this": 0.2
  },
  "map therefore": {
    "it": 1.0
  },
  "therefore it": {
    "may": 0.6666666666666666,
    "is": 0.3333333333333333
  },
  "called only": {
    "by": 1.0
  },
  "by other": {
    "procedure": 1.0
  },
  "other procedure": {
    "s": 1.0
  },
  "s within": {
    "the": 1.0
  },
  "module proc1": {
    "var1": 0.5,
    "and": 0.5
  },
  "proc1 var1": {
    "was": 1.0
  },
  "var1 was": {
    "declared": 1.0
  },
  "was declared": {
    "in": 0.6666666666666666,
    "or": 0.3333333333333333
  },
  "member data": {
    "declaration": 1.0
  },
  "section therefore": {
    "it": 1.0
  },
  "used only": {
    "by": 1.0
  },
  "s actually": {
    "residing": 1.0
  },
  "actually residing": {
    "in": 1.0
  },
  "residing in": {
    "the": 1.0
  },
  "proc2 clarion": {
    "language": 1.0
  },
  "guide 8": {
    "modules": 1.0
  },
  "8 modules": {
    "within": 1.0
  },
  "maps just": {
    "as": 1.0
  },
  "just as": {
    "in": 0.3333333333333333,
    "if": 0.3333333333333333,
    "surely": 0.3333333333333333
  },
  "as in": {
    "the": 0.2857142857142857,
    "a": 0.14285714285714285,
    "this": 0.5714285714285714
  },
  "map a": {
    "member": 0.5,
    "local": 0.5
  },
  "map may": {
    "also": 0.25,
    "not": 0.25,
    "contain": 0.5
  },
  "contain module": {
    "structures": 1.0
  },
  "structures if": {
    "the": 1.0
  },
  "if the": {
    "procedure": 0.043478260869565216,
    "inherited": 0.043478260869565216,
    "parameter": 0.043478260869565216,
    "replace": 0.043478260869565216,
    "only": 0.043478260869565216,
    "get": 0.043478260869565216,
    "file": 0.08695652173913043,
    "foreign": 0.043478260869565216,
    "two": 0.08695652173913043,
    "record": 0.17391304347826086,
    "save": 0.043478260869565216,
    "system": 0.043478260869565216,
    "prevention": 0.043478260869565216,
    "lock": 0.043478260869565216,
    "first": 0.043478260869565216,
    "rule": 0.043478260869565216,
    "field": 0.043478260869565216,
    "value": 0.043478260869565216
  },
  "prototyped are": {
    "in": 1.0
  },
  "are in": {
    "separate": 0.5,
    "scope": 0.5
  },
  "in separate": {
    "source": 0.6666666666666666,
    "orders": 0.3333333333333333
  },
  "files any": {
    "procedure": 1.0
  },
  "any procedure": {
    "which": 0.5,
    "local": 0.5
  },
  "is not": {
    "prototyped": 0.05,
    "accessible": 0.05,
    "because": 0.05,
    "automatically": 0.05,
    "true": 0.05,
    "necessary": 0.05,
    "matched": 0.05,
    "allowed": 0.05,
    "always": 0.1,
    "maintained": 0.05,
    "actually": 0.05,
    "main": 0.05,
    "found": 0.05,
    "commonly": 0.05,
    "even": 0.05,
    "safe": 0.05,
    "a": 0.05,
    "requi": 0.05,
    "required": 0.05
  },
  "not prototyped": {
    "in": 1.0
  },
  "map must": {
    "be": 1.0
  },
  "module m": {
    "ap": 1.0
  },
  "m ap": {
    "in": 1.0
  },
  "ap in": {
    "which": 1.0
  },
  "resides this": {
    "means": 1.0
  },
  "means that": {
    "identical": 0.045454545454545456,
    "the": 0.18181818181818182,
    "you": 0.045454545454545456,
    "virtual": 0.045454545454545456,
    "a": 0.18181818181818182,
    "all": 0.13636363636363635,
    "despite": 0.045454545454545456,
    "exactly": 0.045454545454545456,
    "multiple": 0.045454545454545456,
    "no": 0.045454545454545456,
    "when": 0.13636363636363635,
    "for": 0.045454545454545456
  },
  "that identical": {
    "procedure": 1.0
  },
  "identical procedure": {
    "prototypes": 0.5,
    "prototype": 0.5
  },
  "prototypes are": {
    "required": 1.0
  },
  "are required": {
    "in": 1.0
  },
  "required in": {
    "the": 0.6666666666666666,
    "individual": 0.3333333333333333
  },
  "module map": {
    "in": 0.25,
    "end": 0.25,
    "structures": 0.5
  },
  "file which": {
    "calls": 0.25,
    "provides": 0.25,
    "acts": 0.25,
    "is": 0.25
  },
  "which calls": {
    "the": 1.0
  },
  "calls the": {
    "procedure": 0.1111111111111111,
    "parent": 0.1111111111111111,
    "steer": 0.1111111111111111,
    "base": 0.4444444444444444,
    "derived": 0.1111111111111111,
    "differentclass": 0.1111111111111111
  },
  "second member": {
    "module": 1.0
  },
  "module which": {
    "actually": 0.5,
    "forces": 0.5
  },
  "which actually": {
    "cont": 0.5,
    "retrieves": 0.5
  },
  "actually cont": {
    "ains": 1.0
  },
  "cont ains": {
    "the": 1.0
  },
  "ains the": {
    "source": 1.0
  },
  "code definition": {
    "of": 1.0
  },
  "definition of": {
    "the": 0.6,
    "client": 0.4
  },
  "procedure again": {
    "using": 1.0
  },
  "again using": {
    "the": 1.0
  },
  "the previous": {
    "examples": 0.1,
    "example": 0.6,
    "assignment": 0.1,
    "theoretical": 0.1,
    "procedure": 0.1
  },
  "previous examples": {
    "a": 1.0
  },
  "examples a": {
    "file": 1.0
  },
  "module myprog3": {
    "a": 1.0
  },
  "myprog3 a": {
    "separate": 1.0
  },
  "file myprog3": {
    "clw": 1.0
  },
  "myprog3 clw": {
    "proc2": 0.3333333333333333,
    "contains": 0.3333333333333333,
    "this": 0.3333333333333333
  },
  "map proc1": {
    "procedure": 1.0
  },
  "proc2 a": {
    "call": 1.0
  },
  "a call": {
    "to": 1.0
  },
  "call to": {
    "proc2": 0.1111111111111111,
    "self": 0.1111111111111111,
    "preparepie": 0.1111111111111111,
    "perform": 0.1111111111111111,
    "the": 0.2222222222222222,
    "a": 0.1111111111111111,
    "proc": 0.2222222222222222
  },
  "to proc2": {
    "some": 1.0
  },
  "proc2 some": {
    "executable": 1.0
  },
  "a third": {
    "source": 0.5,
    "file": 0.5
  },
  "third source": {
    "code": 1.0
  },
  "procedure an": {
    "identical": 0.16666666666666666,
    "object": 0.16666666666666666,
    "d": 0.16666666666666666,
    "update": 0.5
  },
  "an identical": {
    "procedure": 1.0
  },
  "procedure prototype": {
    "to": 0.25,
    "for": 0.75
  },
  "prototype to": {
    "the": 1.0
  },
  "prototype declared": {
    "in": 1.0
  },
  "map end": {
    "end": 1.0
  },
  "map proc2": {
    "procedure": 1.0
  },
  "proc2 in": {
    "the": 1.0
  },
  "is duplicated": {
    "in": 1.0
  },
  "duplicated in": {
    "the": 0.5,
    "m": 0.5
  },
  "in myprog3": {
    "clw": 1.0
  },
  "clw this": {
    "duplication": 1.0
  },
  "this duplication": {
    "is": 1.0
  },
  "duplication is": {
    "required": 1.0
  },
  "is required": {
    "for": 0.6,
    "the": 0.2,
    "before": 0.2
  },
  "required for": {
    "all": 0.25,
    "that": 0.25,
    "every": 0.25,
    "the": 0.25
  },
  "for all": {
    "procedure": 0.5,
    "local": 0.25,
    "the": 0.25
  },
  "s declared": {
    "in": 1.0
  },
  "proc2 may": {
    "be": 1.0
  },
  "be placed": {
    "in": 1.0
  },
  "placed in": {
    "as": 0.5,
    "the": 0.5
  },
  "in as": {
    "many": 1.0
  },
  "as many": {
    "member": 0.2,
    "procedure": 0.2,
    "modules": 0.2,
    "changes": 0.2,
    "files": 0.2
  },
  "many member": {
    "module": 1.0
  },
  "map structures": {
    "within": 0.5,
    "only": 0.5
  },
  "structures within": {
    "its": 1.0
  },
  "its module": {
    "structure": 1.0
  },
  "structure as": {
    "are": 0.5,
    "a": 0.5
  },
  "as are": {
    "needed": 0.5,
    "related": 0.5
  },
  "are needed": {
    "to": 1.0
  },
  "needed to": {
    "allow": 0.5,
    "temporarily": 0.5
  },
  "to allow": {
    "as": 0.125,
    "you": 0.125,
    "practical": 0.125,
    "duplicate": 0.125,
    "users": 0.125,
    "programmatic": 0.125,
    "sending": 0.125,
    "the": 0.125
  },
  "allow as": {
    "many": 1.0
  },
  "many procedure": {
    "s": 1.0
  },
  "s to": {
    "call": 0.5,
    "index": 0.5
  },
  "call it": {
    "as": 1.0
  },
  "it as": {
    "need": 1.0
  },
  "as need": {
    "to": 1.0
  },
  "need to": {
    "this": 0.02857142857142857,
    "l": 0.02857142857142857,
    "do": 0.08571428571428572,
    "introduce": 0.02857142857142857,
    "duplicate": 0.02857142857142857,
    "declare": 0.05714285714285714,
    "multiple": 0.02857142857142857,
    "initialize": 0.02857142857142857,
    "explicitly": 0.02857142857142857,
    "execute": 0.05714285714285714,
    "take": 0.02857142857142857,
    "change": 0.02857142857142857,
    "override": 0.02857142857142857,
    "implement": 0.02857142857142857,
    "have": 0.08571428571428572,
    "be": 0.17142857142857143,
    "directly": 0.02857142857142857,
    "access": 0.05714285714285714,
    "randomly": 0.02857142857142857,
    "process": 0.02857142857142857,
    "begin": 0.02857142857142857,
    "write": 0.02857142857142857,
    "update": 0.02857142857142857
  },
  "to this": {
    "allows": 0.2,
    "lowered": 0.2,
    "dilemma": 0.2,
    "a": 0.2,
    "rule": 0.2
  },
  "this allows": {
    "you": 0.75,
    "the": 0.25
  },
  "allows you": {
    "to": 1.0
  },
  "you to": {
    "explicitly": 0.034482758620689655,
    "declare": 0.06896551724137931,
    "provide": 0.034482758620689655,
    "derive": 0.034482758620689655,
    "disambiguate": 0.034482758620689655,
    "call": 0.06896551724137931,
    "write": 0.10344827586206896,
    "re": 0.034482758620689655,
    "incrementally": 0.06896551724137931,
    "utilize": 0.034482758620689655,
    "set": 0.034482758620689655,
    "retrieve": 0.034482758620689655,
    "the": 0.034482758620689655,
    "send": 0.034482758620689655,
    "append": 0.034482758620689655,
    "use": 0.034482758620689655,
    "specify": 0.13793103448275862,
    "create": 0.034482758620689655,
    "make": 0.034482758620689655,
    "pre": 0.034482758620689655,
    "detect": 0.034482758620689655
  },
  "to explicitly": {
    "declare": 0.2,
    "declaring": 0.2,
    "override": 0.2,
    "control": 0.2,
    "call": 0.2
  },
  "explicitly declare": {
    "and": 1.0
  },
  "declare and": {
    "use": 1.0
  },
  "and use": {
    "proc2": 0.5,
    "just": 0.5
  },
  "use proc2": {
    "only": 1.0
  },
  "proc2 only": {
    "in": 1.0
  },
  "the modules": {
    "that": 0.5,
    "in": 0.5
  },
  "modules that": {
    "need": 1.0
  },
  "that need": {
    "it": 0.5,
    "destruction": 0.5
  },
  "need it": {
    "and": 0.3333333333333333,
    "there": 0.3333333333333333,
    "to": 0.3333333333333333
  },
  "it and": {
    "in": 0.3333333333333333,
    "that": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "and in": {
    "as": 0.5,
    "others": 0.5
  },
  "many modules": {
    "as": 1.0
  },
  "modules as": {
    "actually": 1.0
  },
  "as actually": {
    "do": 1.0
  },
  "actually do": {
    "need": 1.0
  },
  "do need": {
    "it": 1.0
  },
  "it there": {
    "is": 1.0
  },
  "there is": {
    "an": 0.06896551724137931,
    "a": 0.1724137931034483,
    "no": 0.41379310344827586,
    "more": 0.034482758620689655,
    "such": 0.034482758620689655,
    "usually": 0.034482758620689655,
    "never": 0.034482758620689655,
    "one": 0.06896551724137931,
    "only": 0.034482758620689655,
    "also": 0.034482758620689655,
    "the": 0.06896551724137931
  },
  "an a": {
    "dvantage": 1.0
  },
  "a dvantage": {
    "to": 1.0
  },
  "dvantage to": {
    "explicitly": 1.0
  },
  "explicitly declaring": {
    "all": 1.0
  },
  "declaring all": {
    "procedure": 1.0
  },
  "s in": {
    "the": 0.3333333333333333,
    "member": 0.6666666666666666
  },
  "in local": {
    "member": 0.5,
    "data": 0.5
  },
  "local member": {
    "maps": 1.0
  },
  "maps instead": {
    "of": 1.0
  },
  "instead of": {
    "a": 0.2727272727272727,
    "using": 0.09090909090909091,
    "inheriting": 0.09090909090909091,
    "the": 0.2727272727272727,
    "early": 0.09090909090909091,
    "lock": 0.09090909090909091,
    "generating": 0.09090909090909091
  },
  "a single": {
    "global": 0.058823529411764705,
    "set": 0.17647058823529413,
    "object": 0.058823529411764705,
    "thing": 0.11764705882352941,
    "class": 0.11764705882352941,
    "comp": 0.058823529411764705,
    "source": 0.11764705882352941,
    "sql": 0.058823529411764705,
    "result": 0.058823529411764705,
    "record": 0.058823529411764705,
    "page": 0.058823529411764705,
    "field": 0.058823529411764705
  },
  "single global": {
    "map": 1.0
  },
  "map that": {
    "advantage": 1.0
  },
  "that advantage": {
    "is": 1.0
  },
  "advantage is": {
    "compile": 1.0
  },
  "is compile": {
    "time": 1.0
  },
  "compile time": {
    "whenever": 0.125,
    "the": 0.125,
    "however": 0.125,
    "t": 0.125,
    "and": 0.125,
    "exactly": 0.125,
    "to": 0.125,
    "create": 0.125
  },
  "time whenever": {
    "you": 1.0
  },
  "whenever you": {
    "add": 1.0
  },
  "you add": {
    "a": 0.3333333333333333,
    "the": 0.3333333333333333,
    "some": 0.3333333333333333
  },
  "add a": {
    "procedure": 0.3333333333333333,
    "preparepie": 0.3333333333333333,
    "shipto": 0.3333333333333333
  },
  "procedure to": {
    "a": 0.2,
    "return": 0.2,
    "declare": 0.2,
    "serve": 0.2,
    "detect": 0.2
  },
  "a global": {
    "map": 0.3333333333333333,
    "object": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "you change": {
    "the": 1.0
  },
  "change the": {
    "9": 0.09090909090909091,
    "primary": 0.45454545454545453,
    "record": 0.09090909090909091,
    "first": 0.09090909090909091,
    "simplest": 0.09090909090909091,
    "foreign": 0.09090909090909091,
    "pattern": 0.09090909090909091
  },
  "the 9": {
    "program": 1.0
  },
  "9 program": {
    "structure": 1.0
  },
  "structure program": {
    "module": 1.0
  },
  "which forces": {
    "a": 1.0
  },
  "forces a": {
    "re": 1.0
  },
  "a re": {
    "compilation": 1.0
  },
  "re compilation": {
    "of": 1.0
  },
  "compilation of": {
    "the": 1.0
  },
  "the entire": {
    "application": 0.2,
    "late": 0.2,
    "file": 0.2,
    "record": 0.2,
    "expression": 0.2
  },
  "entire application": {
    "by": 1.0
  },
  "application by": {
    "explicitly": 1.0
  },
  "by explicitly": {
    "prototyping": 0.5,
    "calling": 0.5
  },
  "explicitly prototyping": {
    "all": 1.0
  },
  "prototyping all": {
    "the": 0.5,
    "of": 0.5
  },
  "all the": {
    "application": 0.02564102564102564,
    "global": 0.02564102564102564,
    "various": 0.02564102564102564,
    "public": 0.05128205128205128,
    "functionality": 0.02564102564102564,
    "most": 0.02564102564102564,
    "standard": 0.02564102564102564,
    "inherited": 0.02564102564102564,
    "properties": 0.1282051282051282,
    "oop": 0.02564102564102564,
    "way": 0.05128205128205128,
    "code": 0.02564102564102564,
    "procedure": 0.02564102564102564,
    "hoops": 0.02564102564102564,
    "objects": 0.02564102564102564,
    "other": 0.02564102564102564,
    "common": 0.02564102564102564,
    "virtual": 0.02564102564102564,
    "simple": 0.02564102564102564,
    "methods": 0.07692307692307693,
    "types": 0.02564102564102564,
    "customer": 0.02564102564102564,
    "information": 0.07692307692307693,
    "fields": 0.02564102564102564,
    "dependent": 0.02564102564102564,
    "related": 0.02564102564102564,
    "clarion": 0.02564102564102564,
    "sql": 0.02564102564102564,
    "required": 0.02564102564102564
  },
  "application s": {
    "procedure": 1.0
  },
  "s procedure": {
    "s": 0.6666666666666666,
    "overloading": 0.3333333333333333
  },
  "in member": {
    "maps": 0.5,
    "module": 0.5
  },
  "maps only": {
    "in": 1.0
  },
  "modules in": {
    "which": 1.0
  },
  "are used": {
    "you": 0.25,
    "to": 0.5,
    "in": 0.25
  },
  "used you": {
    "can": 1.0
  },
  "you can": {
    "eliminate": 0.07407407407407407,
    "h": 0.037037037037037035,
    "have": 0.1111111111111111,
    "end": 0.037037037037037035,
    "re": 0.037037037037037035,
    "do": 0.07407407407407407,
    "thank": 0.037037037037037035,
    "override": 0.07407407407407407,
    "t": 0.037037037037037035,
    "study": 0.037037037037037035,
    "also": 0.14814814814814814,
    "declare": 0.037037037037037035,
    "easily": 0.037037037037037035,
    "waste": 0.037037037037037035,
    "see": 0.037037037037037035,
    "embed": 0.037037037037037035,
    "take": 0.037037037037037035,
    "send": 0.037037037037037035,
    "include": 0.037037037037037035
  },
  "can eliminate": {
    "many": 0.5,
    "the": 0.5
  },
  "eliminate many": {
    "global": 1.0
  },
  "many global": {
    "re": 1.0
  },
  "global re": {
    "compilations": 1.0
  },
  "re compilations": {
    "saving": 0.5,
    "of": 0.5
  },
  "compilations saving": {
    "you": 1.0
  },
  "saving you": {
    "time": 1.0
  },
  "you time": {
    "as": 1.0
  },
  "time as": {
    "you": 0.3333333333333333,
    "the": 0.3333333333333333,
    "users": 0.3333333333333333
  },
  "as you": {
    "build": 1.0
  },
  "you build": {
    "the": 0.5,
    "an": 0.5
  },
  "build the": {
    "application": 0.25,
    "index": 0.5,
    "dynamic": 0.25
  },
  "application procedure": {
    "maps": 1.0
  },
  "maps you": {
    "recall": 1.0
  },
  "you recall": {
    "that": 1.0
  },
  "recall that": {
    "a": 0.5,
    "the": 0.5
  },
  "that a": {
    "procedure": 0.2,
    "derived": 0.3,
    "class": 0.1,
    "key": 0.1,
    "get": 0.1,
    "clarion": 0.2
  },
  "and ending": {
    "at": 1.0
  },
  "ending at": {
    "the": 1.0
  },
  "the code": {
    "statement": 0.21052631578947367,
    "inside": 0.10526315789473684,
    "in": 0.15789473684210525,
    "that": 0.05263157894736842,
    "is": 0.05263157894736842,
    "generated": 0.10526315789473684,
    "for": 0.05263157894736842,
    "defining": 0.05263157894736842,
    "to": 0.05263157894736842,
    "first": 0.05263157894736842,
    "between": 0.05263157894736842,
    "should": 0.05263157894736842
  },
  "code statement": {
    "in": 0.25,
    "which": 0.75
  },
  "declarations a": {
    "procedure": 1.0
  },
  "structure a": {
    "procedure": 0.5,
    "left": 0.5
  },
  "not contain": {
    "any": 0.5,
    "duplicate": 0.5
  },
  "contain any": {
    "module": 1.0
  },
  "any module": {
    "structures": 0.5,
    "s": 0.5
  },
  "structures and": {
    "declares": 1.0
  },
  "procedure these": {
    "are": 1.0
  },
  "these are": {
    "called": 0.3333333333333333,
    "always": 0.3333333333333333,
    "methods": 0.3333333333333333
  },
  "are called": {
    "local": 1.0
  },
  "called local": {
    "procedures": 0.5,
    "derived": 0.5
  },
  "local procedures": {
    "the": 0.16666666666666666,
    "must": 0.16666666666666666,
    "is": 0.16666666666666666,
    "proc1": 0.3333333333333333,
    "have": 0.16666666666666666
  },
  "the definitions": {
    "of": 1.0
  },
  "definitions of": {
    "any": 0.5,
    "primary": 0.5
  },
  "any local": {
    "procedures": 1.0
  },
  "procedures must": {
    "immediately": 1.0
  },
  "must immediately": {
    "follow": 1.0
  },
  "immediately follow": {
    "the": 1.0
  },
  "follow the": {
    "procedure": 0.5,
    "declaring": 0.25,
    "end": 0.25
  },
  "procedure within": {
    "which": 0.75,
    "that": 0.25
  },
  "within which": {
    "they": 1.0
  },
  "which they": {
    "are": 0.8181818181818182,
    "were": 0.09090909090909091,
    "belong": 0.09090909090909091
  },
  "are declared": {
    "in": 0.2222222222222222,
    "when": 0.1111111111111111,
    "someproc": 0.1111111111111111,
    "or": 0.1111111111111111,
    "so": 0.1111111111111111,
    "that": 0.1111111111111111,
    "at": 0.1111111111111111,
    "a": 0.1111111111111111
  },
  "same source": {
    "code": 0.4,
    "module": 0.6
  },
  "code module": {
    "the": 0.5,
    "as": 0.5
  },
  "the advantage": {
    "of": 0.75,
    "you": 0.125,
    "should": 0.125
  },
  "advantage of": {
    "local": 0.14285714285714285,
    "sharing": 0.14285714285714285,
    "easily": 0.14285714285714285,
    "using": 0.2857142857142857,
    "this": 0.14285714285714285,
    "client": 0.14285714285714285
  },
  "of local": {
    "procedures": 0.5,
    "data": 0.5
  },
  "procedures is": {
    "that": 1.0
  },
  "is that": {
    "they": 0.1111111111111111,
    "the": 0.2222222222222222,
    "you": 0.2222222222222222,
    "is": 0.1111111111111111,
    "in": 0.1111111111111111,
    "when": 0.1111111111111111,
    "there": 0.1111111111111111
  },
  "that they": {
    "share": 0.25,
    "are": 0.25,
    "both": 0.25,
    "have": 0.25
  },
  "they share": {
    "the": 1.0
  },
  "share the": {
    "local": 0.16666666666666666,
    "same": 0.6666666666666666,
    "declaring": 0.16666666666666666
  },
  "data and": {
    "routines": 0.375,
    "methods": 0.25,
    "code": 0.125,
    "c": 0.125,
    "a": 0.125
  },
  "and routines": {
    "of": 0.14285714285714285,
    "conceptually": 0.14285714285714285,
    "are": 0.2857142857142857,
    "the": 0.14285714285714285,
    "code": 0.14285714285714285,
    "with": 0.14285714285714285
  },
  "routines of": {
    "their": 1.0
  },
  "of their": {
    "declaring": 0.3333333333333333,
    "derivation": 0.3333333333333333,
    "execution": 0.3333333333333333
  },
  "their declaring": {
    "procedure": 1.0
  },
  "declaring procedure": {
    "conceptually": 0.09090909090909091,
    "in": 0.09090909090909091,
    "do": 0.09090909090909091,
    "the": 0.09090909090909091,
    "and": 0.18181818181818182,
    "s": 0.18181818181818182,
    "an": 0.09090909090909091,
    "typically": 0.09090909090909091,
    "39": 0.09090909090909091
  },
  "procedure conceptually": {
    "a": 1.0
  },
  "conceptually a": {
    "local": 1.0
  },
  "local procedure": {
    "could": 0.3333333333333333,
    "declaration": 0.3333333333333333,
    "definition": 0.3333333333333333
  },
  "procedure could": {
    "be": 1.0
  },
  "could be": {
    "thought": 0.1111111111111111,
    "a": 0.1111111111111111,
    "before": 0.1111111111111111,
    "caused": 0.1111111111111111,
    "built": 0.1111111111111111,
    "updating": 0.1111111111111111,
    "very": 0.1111111111111111,
    "written": 0.1111111111111111,
    "used": 0.1111111111111111
  },
  "be thought": {
    "of": 1.0
  },
  "thought of": {
    "as": 0.5,
    "that": 0.5
  },
  "of as": {
    "a": 1.0
  },
  "a routine": {
    "which": 0.3333333333333333,
    "myroutine": 0.3333333333333333,
    "from": 0.3333333333333333
  },
  "routine which": {
    "can": 1.0
  },
  "which can": {
    "receive": 0.5,
    "declare": 0.5
  },
  "can receive": {
    "parameters": 1.0
  },
  "receive parameters": {
    "return": 0.5,
    "and": 0.5
  },
  "parameters return": {
    "a": 1.0
  },
  "and contain": {
    "its": 0.5,
    "a": 0.5
  },
  "own data": {
    "declarations": 1.0
  },
  "declarations using": {
    "the": 1.0
  },
  "previous example": {
    "a": 0.16666666666666666,
    "the": 0.16666666666666666,
    "an": 0.16666666666666666,
    "to": 0.16666666666666666,
    "file": 0.16666666666666666,
    "code": 0.16666666666666666
  },
  "local map": {
    "structure": 0.5,
    "which": 0.5
  },
  "procedure declaration": {
    "end": 1.0
  },
  "declaration end": {
    "end": 1.0
  },
  "map proclocalvariable": {
    "long": 1.0
  },
  "proclocalvariable long": {
    "a": 1.0
  },
  "long a": {
    "local": 0.4,
    "type": 0.6
  },
  "variable declaration": {
    "code": 1.0
  },
  "declaration code": {
    "begin": 0.5,
    "localvariable": 0.5
  },
  "code do": {
    "myroutine": 1.0
  },
  "do myroutine": {
    "call": 0.5,
    "anotherclass": 0.25,
    "increment": 0.25
  },
  "myroutine call": {
    "a": 1.0
  },
  "call a": {
    "routine": 0.4,
    "method": 0.6
  },
  "routine myroutine": {
    "routine": 1.0
  },
  "myroutine routine": {
    "proclocalvariable": 0.3333333333333333,
    "is": 0.3333333333333333,
    "routine": 0.3333333333333333
  },
  "routine proclocalvariable": {
    "1": 1.0
  },
  "proclocalvariable 1": {
    "increment": 1.0
  },
  "1 increment": {
    "the": 1.0
  },
  "increment the": {
    "local": 1.0
  },
  "variable proc2": {
    "procedure": 1.0
  },
  "procedure local": {
    "procedure": 0.3333333333333333,
    "data": 0.6666666666666666
  },
  "procedure definition": {
    "must": 1.0
  },
  "definition must": {
    "follow": 1.0
  },
  "must follow": {
    "the": 1.0
  },
  "the declaring": {
    "procedure": 1.0
  },
  "module localvariab": {
    "le": 1.0
  },
  "localvariab le": {
    "long": 1.0
  },
  "le long": {
    "a": 1.0
  },
  "code localvariable": {
    "proclocalvariable": 1.0
  },
  "localvariable proclocalvariable": {
    "use": 1.0
  },
  "proclocalvariable use": {
    "a": 1.0
  },
  "use a": {
    "variable": 0.25,
    "dynamic": 0.25,
    "significant": 0.25,
    "record": 0.25
  },
  "variable from": {
    "the": 1.0
  },
  "from the": {
    "declaring": 0.046511627906976744,
    "stack": 0.023255813953488372,
    "procedure": 0.046511627906976744,
    "rest": 0.023255813953488372,
    "same": 0.11627906976744186,
    "parent": 0.046511627906976744,
    "lowest": 0.023255813953488372,
    "base": 0.046511627906976744,
    "vehicle": 0.046511627906976744,
    "class": 0.023255813953488372,
    "derived": 0.023255813953488372,
    "primary": 0.023255813953488372,
    "reverse": 0.023255813953488372,
    "beginning": 0.023255813953488372,
    "end": 0.023255813953488372,
    "file": 0.06976744186046512,
    "queue": 0.046511627906976744,
    "data": 0.023255813953488372,
    "second": 0.023255813953488372,
    "loop": 0.023255813953488372,
    "database": 0.06976744186046512,
    "back": 0.09302325581395349,
    "databa": 0.023255813953488372,
    "students": 0.023255813953488372,
    "local": 0.046511627906976744
  },
  "procedure do": {
    "myroutine": 1.0
  },
  "routine from": {
    "the": 1.0
  },
  "procedure the": {
    "proc2": 0.125,
    "local": 0.125,
    "module": 0.125,
    "index": 0.125,
    "update": 0.25,
    "previous": 0.125,
    "entire": 0.125
  },
  "map or": {
    "a": 1.0
  },
  "or a": {
    "member": 0.2222222222222222,
    "method": 0.1111111111111111,
    "window": 0.1111111111111111,
    "bicycle": 0.1111111111111111,
    "change": 0.3333333333333333,
    "replication": 0.1111111111111111
  },
  "the proc1": {
    "procedure": 1.0
  },
  "procedure map": {
    "therefore": 1.0
  },
  "procedure proclocalvariable": {
    "was": 1.0
  },
  "proclocalvariable was": {
    "declared": 1.0
  },
  "by th": {
    "e": 1.0
  },
  "th e": {
    "declaring": 0.25,
    "derived": 0.25,
    "index": 0.25,
    "expression": 0.25
  },
  "e declaring": {
    "procedure": 1.0
  },
  "and any": {
    "local": 0.4,
    "return": 0.2,
    "other": 0.2,
    "filter": 0.2
  },
  "procedures proc1": {
    "and": 1.0
  },
  "proc2 myroutine": {
    "routine": 1.0
  },
  "routine is": {
    "also": 1.0
  },
  "is also": {
    "available": 0.125,
    "automatically": 0.125,
    "a": 0.125,
    "one": 0.125,
    "the": 0.125,
    "updated": 0.125,
    "no": 0.125,
    "unknown": 0.125
  },
  "also available": {
    "only": 1.0
  },
  "available only": {
    "to": 1.0
  },
  "only to": {
    "the": 1.0
  },
  "guide 10": {
    "summary": 1.0
  },
  "10 summary": {
    "with": 1.0
  },
  "summary with": {
    "the": 1.0
  },
  "language you": {
    "may": 0.5,
    "ve": 0.5
  },
  "may separate": {
    "tasks": 1.0
  },
  "tasks into": {
    "procedure": 1.0
  },
  "into procedure": {
    "s": 1.0
  },
  "procedure may": {
    "contain": 0.5,
    "have": 0.5
  },
  "contain routines": {
    "which": 1.0
  },
  "routines which": {
    "optimize": 0.5,
    "can": 0.5
  },
  "which optimize": {
    "repetitive": 0.5,
    "run": 0.5
  },
  "optimize repetitive": {
    "source": 1.0
  },
  "repetitive source": {
    "code": 1.0
  },
  "have local": {
    "stack": 1.0
  },
  "based variables": {
    "which": 1.0
  },
  "variables which": {
    "optimize": 1.0
  },
  "optimize run": {
    "time": 1.0
  },
  "run time": {
    "memory": 0.16666666666666666,
    "when": 0.16666666666666666,
    "each": 0.16666666666666666,
    "inter": 0.16666666666666666,
    "in": 0.16666666666666666,
    "the": 0.16666666666666666
  },
  "time memory": {
    "requirements": 1.0
  },
  "memory requirements": {
    "and": 1.0
  },
  "requirements and": {
    "make": 0.5,
    "easier": 0.5
  },
  "and make": {
    "recursion": 1.0
  },
  "make recursion": {
    "possible": 1.0
  },
  "recursion possible": {
    "the": 1.0
  },
  "possible the": {
    "program": 1.0
  },
  "program data": {
    "declaration": 1.0
  },
  "section declares": {
    "all": 1.0
  },
  "declares all": {
    "data": 1.0
  },
  "all data": {
    "which": 0.5,
    "sent": 0.5
  },
  "data which": {
    "is": 1.0
  },
  "is globally": {
    "available": 1.0
  },
  "available the": {
    "program": 1.0
  },
  "map declares": {
    "the": 1.0
  },
  "declares the": {
    "prototypes": 0.3333333333333333,
    "class": 0.6666666666666666
  },
  "available a": {
    "map": 1.0
  },
  "contain a": {
    "module": 0.14285714285714285,
    "map": 0.14285714285714285,
    "crumbletop": 0.14285714285714285,
    "topcrust": 0.14285714285714285,
    "carameltop": 0.14285714285714285,
    "reference": 0.14285714285714285,
    "value": 0.14285714285714285
  },
  "structure which": {
    "points": 0.5,
    "sequentially": 0.5
  },
  "which points": {
    "to": 1.0
  },
  "points to": {
    "the": 0.42857142857142855,
    "must": 0.14285714285714285,
    "a": 0.2857142857142857,
    "that": 0.14285714285714285
  },
  "which reside": {
    "in": 1.0
  },
  "reside in": {
    "separate": 0.25,
    "the": 0.25,
    "other": 0.25,
    "a": 0.25
  },
  "files the": {
    "member": 0.3333333333333333,
    "join": 0.3333333333333333,
    "solution": 0.3333333333333333
  },
  "statement poi": {
    "nts": 1.0
  },
  "nts back": {
    "to": 1.0
  },
  "file the": {
    "member": 0.0625,
    "customer": 0.0625,
    "item": 0.0625,
    "shipto": 0.0625,
    "middle": 0.0625,
    "physical": 0.0625,
    "build": 0.0625,
    "next": 0.0625,
    "record": 0.0625,
    "get": 0.0625,
    "clarion": 0.125,
    "access": 0.0625,
    "share": 0.0625,
    "problem": 0.0625,
    "user": 0.0625
  },
  "module data": {
    "declaration": 0.16666666666666666,
    "is": 0.16666666666666666,
    "so": 0.16666666666666666,
    "myclass": 0.16666666666666666,
    "or": 0.16666666666666666,
    "section": 0.16666666666666666
  },
  "may declare": {
    "variables": 1.0
  },
  "declare variables": {
    "and": 1.0
  },
  "only available": {
    "to": 1.0
  },
  "available to": {
    "the": 0.25,
    "any": 0.5,
    "you": 0.25
  },
  "s that": {
    "reside": 0.5,
    "effectively": 0.25,
    "should": 0.25
  },
  "that reside": {
    "in": 1.0
  },
  "module a": {
    "member": 1.0
  },
  "module may": {
    "have": 1.0
  },
  "have its": {
    "own": 1.0
  },
  "structure declaring": {
    "other": 1.0
  },
  "declaring other": {
    "procedure": 1.0
  },
  "s only": {
    "known": 1.0
  },
  "only known": {
    "locally": 1.0
  },
  "known locally": {
    "in": 1.0
  },
  "which point": {
    "to": 1.0
  },
  "point to": {
    "procedure": 1.0
  },
  "to procedure": {
    "s": 1.0
  },
  "in other": {
    "member": 0.1111111111111111,
    "languages": 0.3333333333333333,
    "words": 0.2222222222222222,
    "oop": 0.1111111111111111,
    "object": 0.2222222222222222
  },
  "other member": {
    "modules": 1.0
  },
  "member modules": {
    "the": 1.0
  },
  "modules the": {
    "member": 1.0
  },
  "member which": {
    "the": 1.0
  },
  "module points": {
    "to": 1.0
  },
  "to must": {
    "also": 1.0
  },
  "must also": {
    "contain": 0.3333333333333333,
    "have": 0.3333333333333333,
    "use": 0.3333333333333333
  },
  "map with": {
    "identical": 1.0
  },
  "with identical": {
    "proto": 1.0
  },
  "identical proto": {
    "types": 1.0
  },
  "proto types": {
    "for": 1.0
  },
  "types for": {
    "those": 1.0
  },
  "for those": {
    "procedure": 0.14285714285714285,
    "o": 0.14285714285714285,
    "cases": 0.14285714285714285,
    "of": 0.14285714285714285,
    "instances": 0.14285714285714285,
    "derived": 0.14285714285714285,
    "outer": 0.14285714285714285
  },
  "those procedure": {
    "s": 1.0
  },
  "s explicitly": {
    "prototyping": 1.0
  },
  "all of": {
    "an": 0.1111111111111111,
    "you": 0.1111111111111111,
    "codd": 0.1111111111111111,
    "one": 0.5555555555555556,
    "the": 0.1111111111111111
  },
  "an application": {
    "s": 0.3333333333333333,
    "because": 0.3333333333333333,
    "truly": 0.3333333333333333
  },
  "structures only": {
    "where": 1.0
  },
  "only where": {
    "actually": 1.0
  },
  "where actually": {
    "needed": 1.0
  },
  "actually needed": {
    "can": 1.0
  },
  "needed can": {
    "significantly": 1.0
  },
  "can significantly": {
    "reduce": 1.0
  },
  "significantly reduce": {
    "the": 1.0
  },
  "reduce the": {
    "number": 0.5,
    "network": 0.5
  },
  "the number": {
    "of": 1.0
  },
  "number of": {
    "global": 0.125,
    "methods": 0.125,
    "records": 0.375,
    "foreign": 0.125,
    "statements": 0.125,
    "fields": 0.125
  },
  "of global": {
    "re": 0.5,
    "data": 0.5
  },
  "compilations of": {
    "the": 1.0
  },
  "application required": {
    "during": 1.0
  },
  "required during": {
    "development": 1.0
  },
  "during development": {
    "local": 1.0
  },
  "development local": {
    "procedures": 1.0
  },
  "procedures have": {
    "the": 1.0
  },
  "have the": {
    "advantage": 0.16666666666666666,
    "exact": 0.16666666666666666,
    "virtual": 0.16666666666666666,
    "properties": 0.16666666666666666,
    "dup": 0.16666666666666666,
    "same": 0.16666666666666666
  },
  "of sharing": {
    "their": 1.0
  },
  "sharing their": {
    "declaring": 1.0
  },
  "s local": {
    "data": 1.0
  },
  "routines conceptually": {
    "this": 1.0
  },
  "conceptually this": {
    "makes": 1.0
  },
  "this makes": {
    "them": 0.5,
    "their": 0.16666666666666666,
    "the": 0.3333333333333333
  },
  "makes them": {
    "function": 0.3333333333333333,
    "available": 0.3333333333333333,
    "private": 0.3333333333333333
  },
  "them function": {
    "like": 1.0
  },
  "function like": {
    "routines": 1.0
  },
  "like routines": {
    "which": 1.0
  },
  "can declare": {
    "data": 0.5,
    "a": 0.5
  },
  "declare data": {
    "receive": 0.5,
    "variables": 0.5
  },
  "data receive": {
    "parameters": 1.0
  },
  "parameters and": {
    "return": 0.5,
    "cannot": 0.5
  },
  "and return": {
    "values": 1.0
  },
  "return values": {
    "11": 1.0
  },
  "values 11": {
    "easing": 1.0
  },
  "11 easing": {
    "into": 1.0
  },
  "easing into": {
    "oop": 1.0
  },
  "into oop": {
    "2": 0.125,
    "this": 0.125,
    "instantiation": 0.125,
    "the": 0.125,
    "bake": 0.125,
    "and": 0.125,
    "more": 0.125,
    "local": 0.125
  },
  "oop 2": {
    "easing": 1.0
  },
  "2 easing": {
    "into": 1.0
  },
  "oop this": {
    "chapter": 1.0
  },
  "this chapter": {
    "was": 1.0
  },
  "chapter was": {
    "derived": 1.0
  },
  "was derived": {
    "from": 1.0
  },
  "derived from": {
    "a": 0.13333333333333333,
    "the": 0.4,
    "it": 0.13333333333333333,
    "that": 0.2,
    "someclass": 0.13333333333333333
  },
  "from a": {
    "speech": 0.09090909090909091,
    "point": 0.09090909090909091,
    "parent": 0.18181818181818182,
    "singl": 0.09090909090909091,
    "nother": 0.09090909090909091,
    "file": 0.18181818181818182,
    "database": 0.18181818181818182,
    "blank": 0.09090909090909091
  },
  "a speech": {
    "delivered": 1.0
  },
  "speech delivered": {
    "by": 1.0
  },
  "delivered by": {
    "richard": 1.0
  },
  "by richard": {
    "taylor": 1.0
  },
  "richard taylor": {
    "at": 1.0
  },
  "taylor at": {
    "the": 1.0
  },
  "the 1997": {
    "developer": 1.0
  },
  "1997 developer": {
    "s": 1.0
  },
  "developer s": {
    "conference": 1.0
  },
  "s conference": {
    "devcon": 1.0
  },
  "conference devcon": {
    "97": 1.0
  },
  "devcon 97": {
    "prior": 1.0
  },
  "97 prior": {
    "to": 1.0
  },
  "prior to": {
    "the": 0.5,
    "using": 0.5
  },
  "the release": {
    "of": 1.0
  },
  "release of": {
    "clarion": 1.0
  },
  "of clarion": {
    "version": 0.25,
    "going": 0.25,
    "you": 0.25,
    "to": 0.25
  },
  "clarion version": {
    "4": 1.0
  },
  "version 4": {
    "several": 1.0
  },
  "4 several": {
    "attendees": 1.0
  },
  "several attendees": {
    "suggested": 1.0
  },
  "attendees suggested": {
    "that": 1.0
  },
  "suggested that": {
    "it": 1.0
  },
  "it become": {
    "part": 1.0
  },
  "become part": {
    "of": 1.0
  },
  "clarion documentation": {
    "set": 1.0
  },
  "documentation set": {
    "opening": 1.0
  },
  "set opening": {
    "shots": 1.0
  },
  "shots i": {
    "know": 1.0
  },
  "i know": {
    "that": 0.5,
    "some": 0.5
  },
  "know that": {
    "some": 0.16666666666666666,
    "a": 0.16666666666666666,
    "local": 0.16666666666666666,
    "these": 0.16666666666666666,
    "it": 0.16666666666666666,
    "someone": 0.16666666666666666
  },
  "that some": {
    "of": 0.5,
    "other": 0.25,
    "procedure": 0.25
  },
  "some of": {
    "you": 0.5,
    "the": 0.5
  },
  "of you": {
    "have": 0.25,
    "this": 0.25,
    "know": 0.25,
    "who": 0.25
  },
  "you have": {
    "had": 0.16666666666666666,
    "to": 0.3333333333333333,
    "an": 0.16666666666666666,
    "issued": 0.16666666666666666,
    "created": 0.16666666666666666
  },
  "have had": {
    "a": 1.0
  },
  "had a": {
    "lot": 1.0
  },
  "a lot": {
    "of": 0.625,
    "more": 0.25,
    "about": 0.125
  },
  "lot of": {
    "experience": 0.2,
    "oop": 0.2,
    "potential": 0.2,
    "disk": 0.2,
    "work": 0.2
  },
  "of experience": {
    "with": 1.0
  },
  "experience with": {
    "object": 1.0
  },
  "with object": {
    "oriented": 1.0
  },
  "programming in": {
    "other": 0.5,
    "clarion": 0.5
  },
  "other languages": {
    "while": 0.3333333333333333,
    "is": 0.6666666666666666
  },
  "languages while": {
    "others": 1.0
  },
  "while others": {
    "here": 1.0
  },
  "others here": {
    "have": 1.0
  },
  "here have": {
    "never": 1.0
  },
  "have never": {
    "even": 1.0
  },
  "never even": {
    "said": 1.0
  },
  "even said": {
    "oops": 1.0
  },
  "said oops": {
    "in": 1.0
  },
  "oops in": {
    "their": 1.0
  },
  "in their": {
    "lives": 0.5,
    "physical": 0.5
  },
  "their lives": {
    "for": 1.0
  },
  "lives for": {
    "those": 1.0
  },
  "those o": {
    "f": 1.0
  },
  "o f": {
    "you": 1.0
  },
  "f you": {
    "who": 1.0
  },
  "you who": {
    "do": 0.5,
    "still": 0.5
  },
  "who do": {
    "have": 1.0
  },
  "do have": {
    "a": 1.0
  },
  "have a": {
    "lot": 0.1111111111111111,
    "vehicle": 0.1111111111111111,
    "clarion": 0.1111111111111111,
    "one": 0.1111111111111111,
    "separate": 0.1111111111111111,
    "key": 0.1111111111111111,
    "many": 0.1111111111111111,
    "tremendous": 0.1111111111111111,
    "major": 0.1111111111111111
  },
  "of oop": {
    "background": 0.5,
    "lies": 0.5
  },
  "oop background": {
    "please": 1.0
  },
  "background please": {
    "bear": 1.0
  },
  "please bear": {
    "with": 1.0
  },
  "bear with": {
    "me": 1.0
  },
  "with me": {
    "because": 1.0
  },
  "me because": {
    "i": 1.0
  },
  "because i": {
    "m": 1.0
  },
  "i m": {
    "going": 0.3333333333333333,
    "not": 0.3333333333333333,
    "sure": 0.3333333333333333
  },
  "m going": {
    "to": 1.0
  },
  "going to": {
    "be": 0.4,
    "define": 0.2,
    "execute": 0.2,
    "access": 0.2
  },
  "to be": {
    "explaining": 0.043478260869565216,
    "known": 0.043478260869565216,
    "available": 0.043478260869565216,
    "considered": 0.043478260869565216,
    "polymorphism": 0.043478260869565216,
    "re": 0.043478260869565216,
    "one": 0.043478260869565216,
    "called": 0.043478260869565216,
    "shipped": 0.043478260869565216,
    "declared": 0.08695652173913043,
    "aware": 0.043478260869565216,
    "very": 0.043478260869565216,
    "defined": 0.043478260869565216,
    "overwr": 0.043478260869565216,
    "written": 0.043478260869565216,
    "end": 0.043478260869565216,
    "dec": 0.043478260869565216,
    "in": 0.043478260869565216,
    "locked": 0.043478260869565216,
    "quite": 0.043478260869565216,
    "processed": 0.043478260869565216,
    "valid": 0.043478260869565216
  },
  "be explaining": {
    "some": 1.0
  },
  "explaining some": {
    "things": 1.0
  },
  "some things": {
    "that": 1.0
  },
  "things that": {
    "may": 0.5,
    "belong": 0.5
  },
  "that may": {
    "seem": 0.3333333333333333,
    "be": 0.6666666666666666
  },
  "may seem": {
    "pretty": 0.25,
    "like": 0.75
  },
  "seem pretty": {
    "obvious": 1.0
  },
  "pretty obvious": {
    "to": 1.0
  },
  "obvious to": {
    "you": 1.0
  },
  "to you": {
    "i": 0.3333333333333333,
    "by": 0.3333333333333333,
    "move": 0.3333333333333333
  },
  "you i": {
    "apologize": 1.0
  },
  "i apologize": {
    "in": 1.0
  },
  "apologize in": {
    "advance": 1.0
  },
  "in advance": {
    "if": 1.0
  },
  "advance if": {
    "things": 1.0
  },
  "if things": {
    "seem": 1.0
  },
  "things seem": {
    "a": 1.0
  },
  "seem a": {
    "little": 1.0
  },
  "a little": {
    "simplistic": 0.25,
    "later": 0.25,
    "tricky": 0.25,
    "different": 0.25
  },
  "little simplistic": {
    "to": 1.0
  },
  "simplistic to": {
    "the": 1.0
  },
  "the rest": {
    "of": 1.0
  },
  "rest of": {
    "you": 0.3333333333333333,
    "the": 0.3333333333333333,
    "your": 0.3333333333333333
  },
  "you this": {
    "will": 1.0
  },
  "will be": {
    "a": 0.3333333333333333,
    "createcrust": 0.3333333333333333,
    "read": 0.3333333333333333
  },
  "be a": {
    "fai": 0.125,
    "either": 0.125,
    "little": 0.125,
    "procedure": 0.125,
    "unique": 0.125,
    "matter": 0.125,
    "valid": 0.125,
    "very": 0.125
  },
  "a fai": {
    "rly": 1.0
  },
  "fai rly": {
    "quick": 1.0
  },
  "rly quick": {
    "overview": 1.0
  },
  "quick overview": {
    "there": 1.0
  },
  "overview there": {
    "are": 1.0
  },
  "many books": {
    "that": 1.0
  },
  "books that": {
    "have": 1.0
  },
  "that have": {
    "been": 0.5,
    "the": 0.25,
    "no": 0.25
  },
  "have been": {
    "written": 0.25,
    "derived": 0.25,
    "widely": 0.25,
    "used": 0.25
  },
  "been written": {
    "on": 1.0
  },
  "written on": {
    "object": 1.0
  },
  "on object": {
    "oriented": 1.0
  },
  "programming so": {
    "i": 0.5,
    "powerful": 0.5
  },
  "so i": {
    "only": 1.0
  },
  "i only": {
    "intend": 1.0
  },
  "only intend": {
    "to": 1.0
  },
  "intend to": {
    "hit": 1.0
  },
  "to hit": {
    "these": 1.0
  },
  "hit these": {
    "concepts": 1.0
  },
  "these concepts": {
    "once": 0.5,
    "encapsulation": 0.5
  },
  "concepts once": {
    "over": 1.0
  },
  "once over": {
    "lightly": 1.0
  },
  "over lightly": {
    "in": 1.0
  },
  "lightly in": {
    "relation": 1.0
  },
  "in relation": {
    "to": 1.0
  },
  "relation to": {
    "how": 1.0
  },
  "to how": {
    "we": 1.0
  },
  "how we": {
    "ve": 1.0
  },
  "we ve": {
    "implemented": 0.2857142857142857,
    "introduced": 0.14285714285714285,
    "now": 0.14285714285714285,
    "learned": 0.14285714285714285,
    "provided": 0.14285714285714285,
    "given": 0.14285714285714285
  },
  "ve implemented": {
    "them": 1.0
  },
  "implemented them": {
    "in": 1.0
  },
  "them in": {
    "the": 0.375,
    "clarion": 0.25,
    "any": 0.125,
    "record": 0.25
  },
  "language ok": {
    "let": 1.0
  },
  "ok let": {
    "s": 1.0
  },
  "let s": {
    "start": 0.5,
    "go": 0.25,
    "not": 0.25
  },
  "s start": {
    "from": 0.5,
    "with": 0.5
  },
  "start from": {
    "a": 1.0
  },
  "a point": {
    "that": 0.5,
    "back": 0.5
  },
  "point that": {
    "we": 1.0
  },
  "that we": {
    "all": 0.16666666666666666,
    "ve": 0.16666666666666666,
    "look": 0.16666666666666666,
    "will": 0.5
  },
  "we all": {
    "should": 0.3333333333333333,
    "know": 0.6666666666666666
  },
  "all should": {
    "be": 1.0
  },
  "should be": {
    "familiar": 0.06666666666666667,
    "stored": 0.2,
    "addressed": 0.06666666666666667,
    "implemented": 0.06666666666666667,
    "noted": 0.06666666666666667,
    "used": 0.13333333333333333,
    "immediately": 0.06666666666666667,
    "in": 0.06666666666666667,
    "released": 0.06666666666666667,
    "kept": 0.06666666666666667,
    "written": 0.06666666666666667,
    "unlocked": 0.06666666666666667
  },
  "be familiar": {
    "with": 1.0
  },
  "familiar with": {
    "procedural": 1.0
  },
  "with procedural": {
    "code": 1.0
  },
  "code procedural": {
    "code": 1.0
  },
  "visited we": {
    "all": 1.0
  },
  "all know": {
    "that": 0.6666666666666666,
    "what": 0.3333333333333333
  },
  "data section": {
    "and": 0.07692307692307693,
    "since": 0.07692307692307693,
    "is": 0.15384615384615385,
    "are": 0.15384615384615385,
    "or": 0.15384615384615385,
    "goes": 0.07692307692307693,
    "go": 0.07692307692307693,
    "share": 0.07692307692307693,
    "between": 0.15384615384615385
  },
  "and a": {
    "code": 0.125,
    "bake": 0.125,
    "string": 0.125,
    "destructor": 0.125,
    "derived": 0.125,
    "constructor": 0.125,
    "read": 0.125,
    "field": 0.125
  },
  "a code": {
    "section": 1.0
  },
  "and we": {
    "all": 1.0
  },
  "that local": {
    "data": 1.0
  },
  "data variables": {
    "declared": 0.1,
    "are": 0.2,
    "in": 0.1,
    "and": 0.3,
    "each": 0.1,
    "inside": 0.1,
    "both": 0.1
  },
  "and exi": {
    "st": 1.0
  },
  "exi st": {
    "only": 1.0
  },
  "st only": {
    "while": 1.0
  },
  "only while": {
    "the": 1.0
  },
  "while the": {
    "procedure": 0.25,
    "file": 0.25,
    "user": 0.25,
    "sql": 0.25
  },
  "executes therefore": {
    "local": 1.0
  },
  "therefore local": {
    "data": 1.0
  },
  "variables are": {
    "in": 0.16666666666666666,
    "automatically": 0.16666666666666666,
    "not": 0.16666666666666666,
    "allocated": 0.16666666666666666,
    "also": 0.16666666666666666,
    "valid": 0.16666666666666666
  },
  "in scope": {
    "only": 0.3333333333333333,
    "program": 0.3333333333333333,
    "clarion": 0.3333333333333333
  },
  "scope only": {
    "within": 1.0
  },
  "only within": {
    "the": 1.0
  },
  "declared when": {
    "the": 1.0
  },
  "are automatically": {
    "allocated": 0.5,
    "called": 0.5
  },
  "automatically allocated": {
    "memory": 0.6666666666666666,
    "for": 0.3333333333333333
  },
  "stack this": {
    "makes": 1.0
  },
  "them available": {
    "for": 1.0
  },
  "use in": {
    "the": 0.5,
    "multi": 0.5
  },
  "s executable": {
    "code": 1.0
  },
  "statements then": {
    "when": 1.0
  },
  "then when": {
    "a": 0.5,
    "you": 0.5
  },
  "when a": {
    "return": 0.2,
    "parent": 0.2,
    "record": 0.4,
    "user": 0.2
  },
  "a return": {
    "statement": 0.5,
    "message": 0.5
  },
  "return statement": {
    "executes": 1.0
  },
  "statement executes": {
    "in": 0.5,
    "it": 0.5
  },
  "executes in": {
    "the": 1.0
  },
  "return to": {
    "the": 1.0
  },
  "memory used": {
    "by": 0.6666666666666666,
    "for": 0.3333333333333333
  },
  "used by": {
    "the": 0.25,
    "queue": 0.25,
    "a": 0.25,
    "any": 0.25
  },
  "variables is": {
    "automatically": 1.0
  },
  "is automatically": {
    "de": 0.1111111111111111,
    "destroyed": 0.2222222222222222,
    "called": 0.4444444444444444,
    "allocated": 0.1111111111111111,
    "you": 0.1111111111111111
  },
  "automatically de": {
    "allocated": 1.0
  },
  "allocated from": {
    "the": 1.0
  },
  "stack and": {
    "r": 1.0
  },
  "and r": {
    "eturned": 1.0
  },
  "r eturned": {
    "to": 1.0
  },
  "eturned to": {
    "the": 1.0
  },
  "the operating": {
    "system": 1.0
  },
  "operating system": {
    "so": 0.3333333333333333,
    "therefore": 0.3333333333333333,
    "this": 0.3333333333333333
  },
  "system so": {
    "we": 1.0
  },
  "so we": {
    "can": 0.5,
    "ve": 0.25,
    "ll": 0.25
  },
  "we can": {
    "say": 0.2,
    "go": 0.2,
    "write": 0.2,
    "divide": 0.2,
    "see": 0.2
  },
  "can say": {
    "that": 1.0
  },
  "say that": {
    "the": 0.6666666666666666,
    "it": 0.3333333333333333
  },
  "that the": {
    "lifetime": 0.02702702702702703,
    "global": 0.02702702702702703,
    "proliferation": 0.02702702702702703,
    "clarion": 0.02702702702702703,
    "property": 0.10810810810810811,
    "parameter": 0.05405405405405406,
    "private": 0.02702702702702703,
    "derived": 0.02702702702702703,
    "argument": 0.02702702702702703,
    "way": 0.02702702702702703,
    "code": 0.08108108108108109,
    "prototypes": 0.02702702702702703,
    "actual": 0.02702702702702703,
    "object": 0.02702702702702703,
    "compiler": 0.02702702702702703,
    "methods": 0.02702702702702703,
    "value": 0.02702702702702703,
    "record": 0.02702702702702703,
    "user": 0.05405405405405406,
    "update": 0.02702702702702703,
    "database": 0.08108108108108109,
    "data": 0.02702702702702703,
    "client": 0.02702702702702703,
    "result": 0.02702702702702703,
    "file": 0.05405405405405406,
    "target": 0.02702702702702703,
    "restrict": 0.02702702702702703
  },
  "the lifetime": {
    "and": 1.0
  },
  "lifetime and": {
    "visibility": 0.75,
    "there": 0.25
  },
  "and visibility": {
    "of": 0.6666666666666666,
    "to": 0.3333333333333333
  },
  "visibility of": {
    "local": 0.5,
    "a": 0.5
  },
  "data in": {
    "a": 0.2,
    "your": 0.2,
    "those": 0.2,
    "some": 0.2,
    "files": 0.2
  },
  "is limited": {
    "to": 1.0
  },
  "limited to": {
    "the": 1.0
  },
  "the duration": {
    "of": 1.0
  },
  "duration of": {
    "the": 1.0
  },
  "procedure execution": {
    "ok": 1.0
  },
  "execution ok": {
    "so": 1.0
  },
  "ok so": {
    "what": 0.14285714285714285,
    "you": 0.14285714285714285,
    "now": 0.2857142857142857,
    "we": 0.14285714285714285,
    "how": 0.14285714285714285,
    "far": 0.14285714285714285
  },
  "so what": {
    "if": 0.3333333333333333,
    "does": 0.3333333333333333,
    "s": 0.3333333333333333
  },
  "what if": {
    "you": 0.75,
    "the": 0.25
  },
  "if you": {
    "wanted": 0.15789473684210525,
    "forget": 0.05263157894736842,
    "need": 0.21052631578947367,
    "wan": 0.05263157894736842,
    "add": 0.05263157894736842,
    "don": 0.05263157894736842,
    "look": 0.05263157894736842,
    "so": 0.10526315789473684,
    "only": 0.05263157894736842,
    "issue": 0.10526315789473684,
    "are": 0.05263157894736842,
    "hold": 0.05263157894736842
  },
  "you wanted": {
    "to": 1.0
  },
  "wanted to": {
    "have": 0.4,
    "re": 0.2,
    "reference": 0.4
  },
  "to have": {
    "multiple": 0.3333333333333333,
    "in": 0.16666666666666666,
    "data": 0.16666666666666666,
    "a": 0.16666666666666666,
    "clarion": 0.16666666666666666
  },
  "have multiple": {
    "code": 0.2,
    "sets": 0.2,
    "instances": 0.2,
    "generations": 0.2,
    "items": 0.2
  },
  "multiple code": {
    "sections": 1.0
  },
  "code sections": {
    "able": 0.25,
    "that": 0.25,
    "by": 0.25,
    "in": 0.25
  },
  "sections able": {
    "to": 1.0
  },
  "able to": {
    "operate": 0.16666666666666666,
    "write": 0.16666666666666666,
    "call": 0.5,
    "get": 0.16666666666666666
  },
  "to operate": {
    "on": 1.0
  },
  "operate on": {
    "the": 0.375,
    "that": 0.125,
    "them": 0.25,
    "those": 0.25
  },
  "same set": {
    "of": 1.0
  },
  "set of": {
    "data": 0.16666666666666666,
    "variables": 0.041666666666666664,
    "multiple": 0.041666666666666664,
    "properties": 0.25,
    "methods": 0.125,
    "classes": 0.041666666666666664,
    "individual": 0.041666666666666664,
    "codd": 0.041666666666666664,
    "files": 0.08333333333333333,
    "the": 0.041666666666666664,
    "re": 0.041666666666666664,
    "records": 0.041666666666666664,
    "sql": 0.041666666666666664
  },
  "of data": {
    "variables": 0.4444444444444444,
    "myclass": 0.1111111111111111,
    "members": 0.1111111111111111,
    "to": 0.1111111111111111,
    "making": 0.1111111111111111,
    "requests": 0.1111111111111111
  },
  "s procedural": {
    "code": 1.0
  },
  "code you": {
    "could": 1.0
  },
  "you could": {
    "do": 0.25,
    "place": 0.25,
    "in": 0.25,
    "add": 0.25
  },
  "could do": {
    "it": 1.0
  },
  "do it": {
    "two": 0.5,
    "1": 0.5
  },
  "it two": {
    "ways": 1.0
  },
  "two ways": {
    "make": 0.25,
    "to": 0.5,
    "you": 0.25
  },
  "ways make": {
    "the": 1.0
  },
  "make the": {
    "variables": 0.25,
    "changes": 0.5,
    "most": 0.25
  },
  "the variables": {
    "global": 0.25,
    "are": 0.25,
    "as": 0.25,
    "you": 0.25
  },
  "variables global": {
    "or": 1.0
  },
  "global or": {
    "move": 0.5,
    "module": 0.5
  },
  "or move": {
    "them": 1.0
  },
  "move them": {
    "into": 1.0
  },
  "them into": {
    "a": 1.0
  },
  "into a": {
    "module": 0.1111111111111111,
    "tree": 0.1111111111111111,
    "file": 0.4444444444444444,
    "more": 0.1111111111111111,
    "clarion": 0.1111111111111111,
    "single": 0.1111111111111111
  },
  "section since": {
    "module": 1.0
  },
  "since module": {
    "data": 1.0
  },
  "data is": {
    "a": 0.25,
    "allocated": 0.25,
    "always": 0.25,
    "considered": 0.25
  },
  "a concept": {
    "that": 1.0
  },
  "concept that": {
    "s": 1.0
  },
  "that s": {
    "fairly": 0.125,
    "where": 0.125,
    "how": 0.125,
    "pretty": 0.125,
    "what": 0.125,
    "required": 0.125,
    "got": 0.125,
    "the": 0.125
  },
  "s fairly": {
    "unique": 1.0
  },
  "fairly unique": {
    "to": 1.0
  },
  "unique to": {
    "clarion": 0.3333333333333333,
    "it": 0.3333333333333333,
    "itself": 0.3333333333333333
  },
  "clarion we": {
    "ll": 1.0
  },
  "we ll": {
    "only": 0.25,
    "add": 0.25,
    "prototype": 0.25,
    "derive": 0.25
  },
  "ll only": {
    "discuss": 1.0
  },
  "only discuss": {
    "the": 1.0
  },
  "discuss the": {
    "global": 1.0
  },
  "global approach": {
    "this": 1.0
  },
  "approach this": {
    "morning": 1.0
  },
  "this morning": {
    "by": 0.3333333333333333,
    "s": 0.3333333333333333,
    "scoping": 0.3333333333333333
  },
  "morning by": {
    "declaring": 1.0
  },
  "by declaring": {
    "your": 0.3333333333333333,
    "the": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "declaring your": {
    "variables": 1.0
  },
  "your variables": {
    "globally": 1.0
  },
  "variables globally": {
    "you": 1.0
  },
  "globally you": {
    "end": 1.0
  },
  "you end": {
    "up": 1.0
  },
  "end up": {
    "with": 1.0
  },
  "up with": {
    "effectively": 0.3333333333333333,
    "a": 0.3333333333333333,
    "une": 0.3333333333333333
  },
  "with effectively": {
    "what": 1.0
  },
  "effectively what": {
    "you": 1.0
  },
  "what you": {
    "want": 0.25,
    "expected": 0.25,
    "re": 0.25,
    "need": 0.25
  },
  "you want": {
    "a": 0.5,
    "to": 0.5
  },
  "want a": {
    "single": 0.5,
    "property": 0.5
  },
  "single set": {
    "of": 1.0
  },
  "and multiple": {
    "executable": 1.0
  },
  "multiple executable": {
    "code": 1.0
  },
  "sections that": {
    "can": 1.0
  },
  "can operate": {
    "on": 1.0
  },
  "on that": {
    "data": 0.5,
    "selected": 0.5
  },
  "that data": {
    "one": 0.5,
    "must": 0.5
  },
  "data one": {
    "drawback": 1.0
  },
  "one drawback": {
    "though": 1.0
  },
  "drawback though": {
    "is": 1.0
  },
  "though is": {
    "that": 1.0
  },
  "are not": {
    "limited": 0.07142857142857142,
    "visible": 0.07142857142857142,
    "automatically": 0.14285714285714285,
    "overridden": 0.07142857142857142,
    "allowed": 0.07142857142857142,
    "valid": 0.07142857142857142,
    "declared": 0.07142857142857142,
    "stored": 0.07142857142857142,
    "the": 0.14285714285714285,
    "kept": 0.07142857142857142,
    "nearly": 0.07142857142857142,
    "possible": 0.07142857142857142
  },
  "not limited": {
    "in": 1.0
  },
  "limited in": {
    "lifetime": 1.0
  },
  "in lifetime": {
    "and": 1.0
  },
  "and there": {
    "are": 1.0
  },
  "are various": {
    "schools": 1.0
  },
  "various schools": {
    "of": 1.0
  },
  "schools of": {
    "programming": 1.0
  },
  "of programming": {
    "thought": 0.5,
    "that": 0.5
  },
  "programming thought": {
    "that": 1.0
  },
  "thought that": {
    "hold": 1.0
  },
  "that hold": {
    "that": 1.0
  },
  "hold that": {
    "the": 1.0
  },
  "the proliferation": {
    "of": 1.0
  },
  "proliferation of": {
    "global": 1.0
  },
  "your programs": {
    "is": 1.0
  },
  "programs is": {
    "a": 1.0
  },
  "a bad": {
    "thing": 1.0
  },
  "bad thing": {
    "global": 1.0
  },
  "thing global": {
    "data": 1.0
  },
  "means the": {
    "variables": 0.1111111111111111,
    "code": 0.1111111111111111,
    "biggest": 0.1111111111111111,
    "inherited": 0.1111111111111111,
    "procedure": 0.1111111111111111,
    "product": 0.1111111111111111,
    "most": 0.1111111111111111,
    "data": 0.1111111111111111,
    "enforcement": 0.1111111111111111
  },
  "s tarts": {
    "execution": 1.0
  },
  "tarts execution": {
    "and": 1.0
  },
  "execution and": {
    "only": 1.0
  },
  "and only": {
    "de": 1.0
  },
  "only de": {
    "allocated": 1.0
  },
  "allocated when": {
    "the": 0.5,
    "that": 0.5
  },
  "program terminates": {
    "by": 0.5,
    "to": 0.5
  },
  "terminates by": {
    "the": 1.0
  },
  "the way": {
    "the": 0.14285714285714285,
    "automatic": 0.14285714285714285,
    "to": 0.2857142857142857,
    "back": 0.14285714285714285,
    "for": 0.14285714285714285,
    "we": 0.14285714285714285
  },
  "way the": {
    "same": 1.0
  },
  "same thing": {
    "is": 1.0
  },
  "thing is": {
    "true": 1.0
  },
  "is true": {
    "of": 0.4,
    "for": 0.2,
    "howev": 0.2,
    "even": 0.2
  },
  "true of": {
    "module": 0.5,
    "al": 0.5
  },
  "of module": {
    "data": 1.0
  },
  "data so": {
    "you": 1.0
  },
  "so you": {
    "wouldn": 0.16666666666666666,
    "can": 0.3333333333333333,
    "might": 0.16666666666666666,
    "guys": 0.16666666666666666,
    "could": 0.16666666666666666
  },
  "you wouldn": {
    "t": 1.0
  },
  "wouldn t": {
    "buy": 1.0
  },
  "t buy": {
    "anything": 1.0
  },
  "buy anything": {
    "by": 1.0
  },
  "anything by": {
    "going": 1.0
  },
  "by going": {
    "that": 1.0
  },
  "going that": {
    "route": 1.0
  },
  "that route": {
    "except": 1.0
  },
  "route except": {
    "limiting": 1.0
  },
  "except limiting": {
    "the": 1.0
  },
  "limiting the": {
    "visibility": 1.0
  },
  "the visibility": {
    "to": 1.0
  },
  "visibility to": {
    "the": 1.0
  },
  "the procedures": {
    "within": 0.14285714285714285,
    "which": 0.2857142857142857,
    "that": 0.14285714285714285,
    "prototyped": 0.14285714285714285,
    "defined": 0.2857142857142857
  },
  "procedures within": {
    "the": 1.0
  },
  "same module": {
    "ok": 0.5,
    "member": 0.5
  },
  "module ok": {
    "so": 1.0
  },
  "can h": {
    "ave": 1.0
  },
  "h ave": {
    "a": 1.0
  },
  "ave a": {
    "single": 1.0
  },
  "of variables": {
    "that": 1.0
  },
  "variables that": {
    "can": 1.0
  },
  "be referenced": {
    "by": 0.6666666666666666,
    "within": 0.3333333333333333
  },
  "referenced by": {
    "multiple": 0.5,
    "the": 0.5
  },
  "by multiple": {
    "executable": 0.5,
    "user": 0.5
  },
  "sections by": {
    "declaring": 1.0
  },
  "declaring the": {
    "variables": 0.3333333333333333,
    "methods": 0.3333333333333333,
    "construct": 0.3333333333333333
  },
  "variables as": {
    "global": 1.0
  },
  "as global": {
    "data": 1.0
  },
  "data what": {
    "if": 1.0
  },
  "multiple sets": {
    "of": 1.0
  },
  "sets of": {
    "this": 0.3333333333333333,
    "data": 0.6666666666666666
  },
  "this data": {
    "that": 0.5,
    "could": 0.5
  },
  "data that": {
    "could": 0.3333333333333333,
    "you": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "that could": {
    "all": 0.3333333333333333,
    "be": 0.6666666666666666
  },
  "could all": {
    "be": 1.0
  },
  "all be": {
    "referenced": 0.5,
    "stored": 0.5
  },
  "of multiple": {
    "executable": 0.25,
    "inheritance": 0.5,
    "users": 0.25
  },
  "sections in": {
    "other": 1.0
  },
  "other words": {
    "what": 0.5,
    "lifo": 0.5
  },
  "words what": {
    "if": 1.0
  },
  "to re": {
    "use": 0.25,
    "start": 0.25,
    "state": 0.25,
    "enter": 0.25
  },
  "re use": {
    "the": 0.4,
    "code": 0.2,
    "your": 0.2,
    "once": 0.2
  },
  "use the": {
    "same": 0.08333333333333333,
    "industry": 0.08333333333333333,
    "new": 0.08333333333333333,
    "word": 0.08333333333333333,
    "object": 0.08333333333333333,
    "code": 0.08333333333333333,
    "self": 0.08333333333333333,
    "index": 0.08333333333333333,
    "clarion": 0.25,
    "database": 0.08333333333333333
  },
  "same executable": {
    "code": 1.0
  },
  "code over": {
    "and": 1.0
  },
  "over and": {
    "over": 1.0
  },
  "and over": {
    "again": 1.0
  },
  "over again": {
    "but": 0.5,
    "for": 0.5
  },
  "again but": {
    "using": 1.0
  },
  "but using": {
    "different": 1.0
  },
  "using different": {
    "sets": 1.0
  },
  "different sets": {
    "of": 1.0
  },
  "variables each": {
    "time": 1.0
  },
  "time well": {
    "you": 1.0
  },
  "well you": {
    "could": 0.5,
    "ll": 0.5
  },
  "could place": {
    "all": 1.0
  },
  "place all": {
    "the": 1.0
  },
  "variables inside": {
    "a": 1.0
  },
  "inside a": {
    "queue": 1.0
  },
  "a queue": {
    "structure": 0.25,
    "queue": 0.25,
    "with": 0.25,
    "for": 0.25
  },
  "queue structure": {
    "then": 0.5,
    "myqueue": 0.5
  },
  "structure then": {
    "somehow": 0.5,
    "use": 0.5
  },
  "then somehow": {
    "manip": 1.0
  },
  "somehow manip": {
    "ulate": 1.0
  },
  "manip ulate": {
    "the": 1.0
  },
  "ulate the": {
    "queue": 1.0
  },
  "the queue": {
    "entries": 0.14285714285714285,
    "f": 0.14285714285714285,
    "if": 0.14285714285714285,
    "someclass": 0.14285714285714285,
    "in": 0.14285714285714285,
    "the": 0.14285714285714285,
    "hold": 0.14285714285714285
  },
  "queue entries": {
    "so": 0.5,
    "break": 0.5
  },
  "entries so": {
    "that": 1.0
  },
  "so that": {
    "you": 0.2,
    "maximum": 0.2,
    "users": 0.2,
    "the": 0.2,
    "no": 0.2
  },
  "that you": {
    "could": 0.047619047619047616,
    "re": 0.047619047619047616,
    "can": 0.2857142857142857,
    "only": 0.047619047619047616,
    "declare": 0.047619047619047616,
    "do": 0.09523809523809523,
    "ve": 0.047619047619047616,
    "wanted": 0.047619047619047616,
    "duplicate": 0.047619047619047616,
    "add": 0.047619047619047616,
    "should": 0.09523809523809523,
    "know": 0.047619047619047616,
    "spec": 0.047619047619047616,
    "have": 0.047619047619047616
  },
  "could in": {
    "some": 1.0
  },
  "in some": {
    "way": 0.1,
    "procedure": 0.1,
    "other": 0.1,
    "fields": 0.1,
    "specified": 0.1,
    "order": 0.1,
    "serial": 0.1,
    "file": 0.3
  },
  "some way": {
    "sensibly": 0.5,
    "to": 0.5
  },
  "way sensibly": {
    "maintain": 1.0
  },
  "sensibly maintain": {
    "which": 1.0
  },
  "maintain which": {
    "queue": 1.0
  },
  "which queue": {
    "entry": 1.0
  },
  "queue entry": {
    "it": 0.1111111111111111,
    "1": 0.2222222222222222,
    "2": 0.1111111111111111,
    "one": 0.2222222222222222,
    "then": 0.1111111111111111,
    "and": 0.1111111111111111,
    "s": 0.1111111111111111
  },
  "entry it": {
    "is": 1.0
  },
  "you re": {
    "currently": 0.2,
    "use": 0.2,
    "right": 0.2,
    "actually": 0.2,
    "write": 0.2
  },
  "re currently": {
    "working": 1.0
  },
  "currently working": {
    "on": 1.0
  },
  "working on": {
    "however": 1.0
  },
  "on however": {
    "this": 1.0
  },
  "however this": {
    "would": 1.0
  },
  "this would": {
    "get": 0.2,
    "be": 0.4,
    "make": 0.2,
    "not": 0.2
  },
  "would get": {
    "pretty": 1.0
  },
  "get pretty": {
    "complex": 1.0
  },
  "pretty complex": {
    "pretty": 1.0
  },
  "complex pretty": {
    "quickly": 1.0
  },
  "pretty quickly": {
    "there": 1.0
  },
  "quickly there": {
    "is": 1.0
  },
  "a better": {
    "way": 1.0
  },
  "better way": {
    "and": 1.0
  },
  "way and": {
    "that": 1.0
  },
  "and that": {
    "way": 0.3333333333333333,
    "they": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "that way": {
    "is": 1.0
  },
  "way is": {
    "the": 1.0
  },
  "declaration clarion": {
    "language": 1.0
  },
  "guide 12": {
    "class": 1.0
  },
  "12 class": {
    "dec": 1.0
  },
  "class dec": {
    "laration": 1.0
  },
  "dec laration": {
    "the": 1.0
  },
  "laration the": {
    "clarion": 1.0
  },
  "clarion class": {
    "structure": 1.0
  },
  "structure allows": {
    "you": 1.0
  },
  "to declare": {
    "data": 0.14285714285714285,
    "an": 0.2857142857142857,
    "the": 0.14285714285714285,
    "c": 0.14285714285714285,
    "them": 0.14285714285714285,
    "a": 0.14285714285714285
  },
  "variables both": {
    "simple": 1.0
  },
  "both simple": {
    "data": 1.0
  },
  "simple data": {
    "types": 1.0
  },
  "data types": {
    "and": 0.125,
    "that": 0.125,
    "are": 0.125,
    "file": 0.125,
    "in": 0.125,
    "queue": 0.125,
    "or": 0.125,
    "including": 0.125
  },
  "types and": {
    "reference": 1.0
  },
  "and reference": {
    "variables": 0.5,
    "assigning": 0.5
  },
  "reference variables": {
    "and": 0.1111111111111111,
    "these": 0.1111111111111111,
    "for": 0.1111111111111111,
    "needless": 0.1111111111111111,
    "are": 0.2222222222222222,
    "someclass": 0.1111111111111111,
    "to": 0.1111111111111111,
    "28": 0.1111111111111111
  },
  "procedures which": {
    "operate": 0.6666666666666666,
    "allow": 0.3333333333333333
  },
  "which operate": {
    "on": 1.0
  },
  "on them": {
    "this": 0.5,
    "to": 0.5
  },
  "them this": {
    "is": 0.3333333333333333,
    "makes": 0.3333333333333333,
    "gives": 0.3333333333333333
  },
  "the basic": {
    "declaration": 1.0
  },
  "basic declaration": {
    "structure": 1.0
  },
  "declaration structure": {
    "of": 1.0
  },
  "of object": {
    "oriented": 0.18181818181818182,
    "and": 0.18181818181818182,
    "the": 0.09090909090909091,
    "method": 0.2727272727272727,
    "which": 0.09090909090909091,
    "orientation": 0.09090909090909091,
    "this": 0.09090909090909091
  },
  "clarion this": {
    "is": 1.0
  },
  "the structure": {
    "that": 0.5,
    "just": 0.5
  },
  "structure that": {
    "lets": 0.25,
    "allows": 0.25,
    "automatically": 0.25,
    "joins": 0.25
  },
  "that lets": {
    "you": 1.0
  },
  "lets you": {
    "re": 1.0
  },
  "use code": {
    "over": 1.0
  },
  "again for": {
    "different": 0.5,
    "the": 0.5
  },
  "for different": {
    "sets": 1.0
  },
  "data myclass": {
    "class": 1.0
  },
  "myclass class": {
    "property": 0.2,
    "declare": 0.5,
    "myproperty": 0.1,
    "type": 0.2
  },
  "class property": {
    "long": 1.0
  },
  "property long": {
    "queproperty": 0.125,
    "a": 0.375,
    "method": 0.25,
    "myproperty": 0.25
  },
  "long queproperty": {
    "somequeue": 1.0
  },
  "queproperty somequeue": {
    "method1": 1.0
  },
  "somequeue method1": {
    "procedure": 1.0
  },
  "method1 procedure": {
    "method2": 1.0
  },
  "procedure method2": {
    "procedure": 1.0
  },
  "method2 procedure": {
    "long": 1.0
  },
  "procedure long": {
    "long": 0.2,
    "passeda": 0.8
  },
  "long long": {
    "end": 1.0
  },
  "long end": {
    "the": 1.0
  },
  "end the": {
    "class": 0.3333333333333333,
    "nullify": 0.3333333333333333,
    "following": 0.3333333333333333
  },
  "a container": {
    "which": 0.3333333333333333,
    "for": 0.6666666666666666
  },
  "container which": {
    "holds": 1.0
  },
  "which holds": {
    "a": 1.0
  },
  "holds a": {
    "set": 1.0
  },
  "a set": {
    "of": 0.6,
    "statement": 0.2,
    "is": 0.2
  },
  "them to": {
    "use": 1.0
  },
  "to use": {
    "the": 0.2857142857142857,
    "self": 0.14285714285714285,
    "anywhere": 0.14285714285714285,
    "features": 0.14285714285714285,
    "standard": 0.14285714285714285,
    "prop": 0.14285714285714285
  },
  "the industry": {
    "standard": 1.0
  },
  "industry standard": {
    "terms": 1.0
  },
  "standard terms": {
    "for": 1.0
  },
  "terms for": {
    "these": 1.0
  },
  "for these": {
    "the": 1.0
  },
  "these the": {
    "class": 1.0
  },
  "structure contains": {
    "properties": 1.0
  },
  "contains properties": {
    "and": 1.0
  },
  "properties and": {
    "methods": 0.7906976744186046,
    "initialize": 0.023255813953488372,
    "a": 0.023255813953488372,
    "behaviors": 0.06976744186046512,
    "declaring": 0.023255813953488372,
    "one": 0.023255813953488372,
    "two": 0.023255813953488372,
    "metho": 0.023255813953488372
  },
  "and methods": {
    "properties": 0.024390243902439025,
    "are": 0.1951219512195122,
    "form": 0.024390243902439025,
    "according": 0.024390243902439025,
    "declared": 0.024390243902439025,
    "and": 0.04878048780487805,
    "what": 0.024390243902439025,
    "of": 0.1951219512195122,
    "but": 0.024390243902439025,
    "for": 0.024390243902439025,
    "which": 0.024390243902439025,
    "from": 0.07317073170731707,
    "instead": 0.024390243902439025,
    "there": 0.024390243902439025,
    "you": 0.024390243902439025,
    "cannot": 0.024390243902439025,
    "can": 0.024390243902439025,
    "sort": 0.024390243902439025,
    "that": 0.04878048780487805,
    "the": 0.024390243902439025,
    "this": 0.024390243902439025,
    "clarion": 0.024390243902439025,
    "appropriate": 0.024390243902439025
  },
  "methods properties": {
    "are": 1.0
  },
  "properties are": {
    "the": 1.0
  },
  "are the": {
    "data": 0.15384615384615385,
    "procedure": 0.07692307692307693,
    "objects": 0.07692307692307693,
    "opposite": 0.07692307692307693,
    "things": 0.07692307692307693,
    "procedures": 0.07692307692307693,
    "same": 0.15384615384615385,
    "pointers": 0.07692307692307693,
    "most": 0.07692307692307693,
    "two": 0.07692307692307693,
    "type": 0.07692307692307693
  },
  "methods are": {
    "the": 0.1875,
    "public": 0.125,
    "not": 0.0625,
    "what": 0.0625,
    "virtual": 0.0625,
    "sort": 0.0625,
    "declared": 0.0625,
    "its": 0.0625,
    "friends": 0.0625,
    "visible": 0.0625,
    "pub": 0.0625,
    "prototyped": 0.0625,
    "used": 0.0625
  },
  "which act": {
    "on": 1.0
  },
  "act on": {
    "those": 1.0
  },
  "on those": {
    "properties": 1.0
  },
  "those properties": {
    "taken": 0.3333333333333333,
    "that": 0.3333333333333333,
    "in": 0.3333333333333333
  },
  "properties taken": {
    "together": 1.0
  },
  "taken together": {
    "these": 1.0
  },
  "together these": {
    "properties": 1.0
  },
  "these properties": {
    "and": 1.0
  },
  "methods form": {
    "a": 1.0
  },
  "form a": {
    "single": 1.0
  },
  "single object": {
    "ok": 1.0
  },
  "object ok": {
    "so": 1.0
  },
  "so now": {
    "we": 0.3333333333333333,
    "that": 0.3333333333333333,
    "you": 0.3333333333333333
  },
  "now we": {
    "ve": 0.5,
    "ll": 0.5
  },
  "ve introduced": {
    "and": 1.0
  },
  "introduced and": {
    "defined": 1.0
  },
  "and defined": {
    "in": 1.0
  },
  "clarion terms": {
    "three": 1.0
  },
  "terms three": {
    "standard": 1.0
  },
  "three standard": {
    "oop": 1.0
  },
  "standard oop": {
    "buzzwords": 0.25,
    "terms": 0.25,
    "technique": 0.25,
    "polymorphism": 0.25
  },
  "oop buzzwords": {
    "properties": 0.4,
    "encapsulation": 0.4,
    "to": 0.2
  },
  "buzzwords properties": {
    "methods": 1.0
  },
  "properties methods": {
    "and": 0.3333333333333333,
    "objects": 0.6666666666666666
  },
  "methods and": {
    "object": 0.2,
    "i": 0.2,
    "all": 0.2,
    "you": 0.2,
    "virtual": 0.2
  },
  "and object": {
    "let": 1.0
  },
  "object let": {
    "me": 1.0
  },
  "let me": {
    "introduce": 0.5,
    "simply": 0.5
  },
  "me introduce": {
    "the": 1.0
  },
  "introduce the": {
    "first": 1.0
  },
  "first of": {
    "the": 1.0
  },
  "the th": {
    "ree": 0.5,
    "ing": 0.5
  },
  "th ree": {
    "major": 1.0
  },
  "ree major": {
    "oop": 1.0
  },
  "major oop": {
    "buzzwords": 0.6666666666666666,
    "buzzword": 0.3333333333333333
  },
  "buzzwords encapsulation": {
    "encapsulation": 0.5,
    "inheritance": 0.5
  },
  "encapsulation encapsulation": {
    "the": 0.5,
    "means": 0.5
  },
  "encapsulation the": {
    "class": 0.3333333333333333,
    "clarion": 0.3333333333333333,
    "source": 0.3333333333333333
  },
  "container for": {
    "the": 0.5,
    "properties": 0.5
  },
  "for the": {
    "properties": 0.06976744186046512,
    "child": 0.023255813953488372,
    "individual": 0.023255813953488372,
    "most": 0.023255813953488372,
    "more": 0.023255813953488372,
    "derived": 0.023255813953488372,
    "method": 0.023255813953488372,
    "class": 0.046511627906976744,
    "file": 0.09302325581395349,
    "current": 0.06976744186046512,
    "object": 0.046511627906976744,
    "new": 0.023255813953488372,
    "declaring": 0.023255813953488372,
    "above": 0.023255813953488372,
    "primary": 0.046511627906976744,
    "records": 0.023255813953488372,
    "build": 0.023255813953488372,
    "program": 0.023255813953488372,
    "first": 0.023255813953488372,
    "simplest": 0.023255813953488372,
    "disk": 0.023255813953488372,
    "user": 0.023255813953488372,
    "second": 0.023255813953488372,
    "map": 0.046511627906976744,
    "type": 0.023255813953488372,
    "purposes": 0.023255813953488372,
    "same": 0.023255813953488372,
    "sam": 0.023255813953488372,
    "next": 0.023255813953488372,
    "database": 0.023255813953488372,
    "field": 0.023255813953488372,
    "possible": 0.023255813953488372
  },
  "the properties": {
    "and": 0.6296296296296297,
    "of": 0.2222222222222222,
    "that": 0.037037037037037035,
    "data": 0.037037037037037035,
    "someclass": 0.037037037037037035,
    "anotherclass": 0.037037037037037035
  },
  "methods according": {
    "to": 1.0
  },
  "according to": {
    "the": 1.0
  },
  "the oxford": {
    "english": 1.0
  },
  "oxford english": {
    "dictionary": 1.0
  },
  "english dictionary": {
    "the": 0.25,
    "defines": 0.5,
    "definitio": 0.25
  },
  "dictionary the": {
    "word": 1.0
  },
  "the word": {
    "encapsulate": 0.5,
    "self": 0.5
  },
  "word encapsulate": {
    "means": 1.0
  },
  "encapsulate means": {
    "to": 1.0
  },
  "means to": {
    "enclose": 0.5,
    "place": 0.5
  },
  "to enclose": {
    "as": 1.0
  },
  "enclose as": {
    "in": 1.0
  },
  "a capsule": {
    "therefore": 1.0
  },
  "capsule therefore": {
    "the": 1.0
  },
  "structure encapsulates": {
    "the": 1.0
  },
  "encapsulates the": {
    "properties": 0.5,
    "data": 0.5
  },
  "methods declared": {
    "within": 1.0
  },
  "declared within": {
    "it": 0.5,
    "the": 0.5
  },
  "within it": {
    "now": 1.0
  },
  "it now": {
    "you": 0.5,
    "i": 0.5
  },
  "now you": {
    "oop": 0.2,
    "might": 0.2,
    "ll": 0.2,
    "execute": 0.2,
    "see": 0.2
  },
  "you oop": {
    "purists": 1.0
  },
  "oop purists": {
    "out": 0.25,
    "encapsulation": 0.25,
    "in": 0.25,
    "are": 0.25
  },
  "purists out": {
    "there": 1.0
  },
  "out there": {
    "are": 1.0
  },
  "are about": {
    "to": 1.0
  },
  "about to": {
    "say": 0.5,
    "be": 0.5
  },
  "to say": {
    "wait": 0.25,
    "about": 0.25,
    "that": 0.25,
    "this": 0.25
  },
  "say wait": {
    "a": 1.0
  },
  "wait a": {
    "minute": 1.0
  },
  "a minute": {
    "it": 1.0
  },
  "minute it": {
    "means": 1.0
  },
  "it means": {
    "a": 0.5,
    "that": 0.5
  },
  "means a": {
    "lot": 0.5,
    "direct": 0.5
  },
  "lot more": {
    "than": 0.5,
    "work": 0.5
  },
  "more than": {
    "that": 0.25,
    "the": 0.25,
    "a": 0.25,
    "adequately": 0.25
  },
  "than that": {
    "in": 1.0
  },
  "that in": {
    "oop": 1.0
  },
  "in oop": {
    "and": 0.5,
    "no": 0.25,
    "theory": 0.25
  },
  "oop and": {
    "you": 0.25,
    "more": 0.25,
    "they": 0.25,
    "how": 0.25
  },
  "and you": {
    "re": 0.2,
    "will": 0.2,
    "know": 0.2,
    "need": 0.2,
    "must": 0.2
  },
  "re right": {
    "in": 0.5,
    "all": 0.5
  },
  "right in": {
    "common": 1.0
  },
  "in common": {
    "usage": 0.5,
    "therefore": 0.5
  },
  "common usage": {
    "for": 0.5,
    "would": 0.5
  },
  "usage for": {
    "oop": 1.0
  },
  "for oop": {
    "encapsulation": 1.0
  },
  "oop encapsulation": {
    "means": 1.0
  },
  "encapsulation means": {
    "much": 0.5,
    "bundling": 0.5
  },
  "means much": {
    "mor": 1.0
  },
  "much mor": {
    "e": 1.0
  },
  "mor e": {
    "than": 1.0
  },
  "e than": {
    "just": 1.0
  },
  "than just": {
    "containerizing": 1.0
  },
  "just containerizing": {
    "the": 1.0
  },
  "containerizing the": {
    "properties": 1.0
  },
  "and i": {
    "ll": 1.0
  },
  "i ll": {
    "get": 1.0
  },
  "ll get": {
    "around": 1.0
  },
  "get around": {
    "to": 0.5,
    "this": 0.5
  },
  "around to": {
    "all": 1.0
  },
  "to all": {
    "that": 0.25,
    "apple": 0.25,
    "the": 0.25,
    "members": 0.25
  },
  "all that": {
    "shortly": 0.5,
    "polymorphic": 0.5
  },
  "that shortly": {
    "just": 1.0
  },
  "shortly just": {
    "be": 1.0
  },
  "just be": {
    "patient": 1.0
  },
  "be patient": {
    "ok": 1.0
  },
  "patient ok": {
    "so": 1.0
  },
  "ve now": {
    "got": 0.5,
    "been": 0.5
  },
  "now got": {
    "a": 1.0
  },
  "got a": {
    "container": 1.0
  },
  "for properties": {
    "and": 0.6666666666666666,
    "in": 0.3333333333333333
  },
  "methods what": {
    "good": 1.0
  },
  "what good": {
    "does": 0.5,
    "are": 0.5
  },
  "good does": {
    "that": 1.0
  },
  "does that": {
    "do": 0.5,
    "buy": 0.5
  },
  "that do": {
    "us": 1.0
  },
  "do us": {
    "well": 1.0
  },
  "us well": {
    "you": 1.0
  },
  "you ll": {
    "notice": 0.3333333333333333,
    "ask": 0.3333333333333333,
    "find": 0.3333333333333333
  },
  "ll notice": {
    "that": 1.0
  },
  "notice that": {
    "the": 0.5,
    "i": 0.16666666666666666,
    "clarion": 0.16666666666666666,
    "only": 0.16666666666666666
  },
  "clarion keyword": {
    "we": 1.0
  },
  "keyword we": {
    "re": 1.0
  },
  "we re": {
    "usin": 0.5,
    "going": 0.5
  },
  "re usin": {
    "g": 1.0
  },
  "usin g": {
    "here": 1.0
  },
  "g here": {
    "is": 1.0
  },
  "here is": {
    "class": 0.14285714285714285,
    "that": 0.14285714285714285,
    "automatically": 0.14285714285714285,
    "an": 0.5714285714285714
  },
  "is class": {
    "and": 1.0
  },
  "class and": {
    "not": 0.07142857142857142,
    "derived": 0.14285714285714285,
    "also": 0.21428571428571427,
    "without": 0.07142857142857142,
    "that": 0.07142857142857142,
    "the": 0.21428571428571427,
    "methods": 0.07142857142857142,
    "instantiates": 0.07142857142857142,
    "an": 0.07142857142857142
  },
  "and not": {
    "object": 0.5,
    "myfield": 0.5
  },
  "not object": {
    "the": 1.0
  },
  "object the": {
    "reason": 0.2,
    "class": 0.2,
    "applepie": 0.2,
    "clarion": 0.2,
    "current": 0.2
  },
  "for that": {
    "is": 0.16666666666666666,
    "specific": 0.16666666666666666,
    "array": 0.16666666666666666,
    "file": 0.16666666666666666,
    "relationship": 0.16666666666666666,
    "database": 0.16666666666666666
  },
  "that is": {
    "because": 0.05,
    "currently": 0.05,
    "automatically": 0.1,
    "to": 0.05,
    "most": 0.05,
    "virtually": 0.05,
    "a": 0.05,
    "must": 0.05,
    "passed": 0.05,
    "anotherclass": 0.05,
    "the": 0.05,
    "pertinent": 0.05,
    "absolutely": 0.05,
    "not": 0.15,
    "probably": 0.05,
    "updated": 0.05,
    "best": 0.05
  },
  "is because": {
    "a": 0.5,
    "the": 0.5
  },
  "because a": {
    "class": 1.0
  },
  "declaration declares": {
    "a": 1.0
  },
  "declares a": {
    "specific": 0.25,
    "very": 0.25,
    "simple": 0.25,
    "virtual": 0.25
  },
  "a specific": {
    "type": 0.42857142857142855,
    "object": 0.07142857142857142,
    "method": 0.14285714285714285,
    "code": 0.07142857142857142,
    "class": 0.07142857142857142,
    "record": 0.14285714285714285,
    "sub": 0.07142857142857142
  },
  "specific type": {
    "of": 0.8571428571428571,
    "s": 0.14285714285714285
  },
  "object and": {
    "it": 0.16666666666666666,
    "an": 0.16666666666666666,
    "property": 0.3333333333333333,
    "implicitly": 0.16666666666666666,
    "initialize": 0.16666666666666666
  },
  "and it": {
    "can": 0.1,
    "has": 0.1,
    "s": 0.1,
    "doesn": 0.1,
    "goes": 0.1,
    "also": 0.1,
    "shares": 0.1,
    "does": 0.1,
    "contains": 0.1,
    "employs": 0.1
  },
  "it can": {
    "also": 0.25,
    "call": 0.25,
    "perform": 0.25,
    "optimize": 0.25
  },
  "can also": {
    "declare": 0.4,
    "look": 0.2,
    "label": 0.2,
    "specify": 0.2
  },
  "also declare": {
    "an": 0.5,
    "a": 0.5
  },
  "declare an": {
    "instance": 0.08333333333333333,
    "object": 0.6666666666666666,
    "o": 0.08333333333333333,
    "automatic": 0.16666666666666666
  },
  "an instance": {
    "of": 0.7,
    "it": 0.1,
    "the": 0.1,
    "propertya": 0.1
  },
  "instance of": {
    "that": 0.13333333333333333,
    "a": 0.26666666666666666,
    "the": 0.26666666666666666,
    "someclass": 0.13333333333333333,
    "myclass": 0.13333333333333333,
    "another": 0.06666666666666667
  },
  "of that": {
    "object": 0.3333333333333333,
    "parent": 0.16666666666666666,
    "name": 0.16666666666666666,
    "record": 0.3333333333333333
  },
  "that object": {
    "type": 0.4,
    "is": 0.6
  },
  "object type": {
    "but": 0.3333333333333333,
    "2": 0.3333333333333333,
    "pay": 0.3333333333333333
  },
  "type but": {
    "it": 1.0
  },
  "it doesn": {
    "t": 1.0
  },
  "doesn t": {
    "have": 0.18181818181818182,
    "know": 0.2727272727272727,
    "care": 0.18181818181818182,
    "inherit": 0.09090909090909091,
    "the": 0.09090909090909091,
    "exist": 0.18181818181818182
  },
  "t have": {
    "to": 0.6666666666666666,
    "any": 0.3333333333333333
  },
  "have to": {
    "so": 0.1111111111111111,
    "keep": 0.1111111111111111,
    "le": 0.1111111111111111,
    "know": 0.1111111111111111,
    "learn": 0.2222222222222222,
    "resolve": 0.1111111111111111,
    "be": 0.2222222222222222
  },
  "to so": {
    "here": 0.5,
    "to": 0.5
  },
  "so here": {
    "s": 1.0
  },
  "here s": {
    "the": 1.0
  },
  "s the": {
    "next": 0.14285714285714285,
    "th": 0.14285714285714285,
    "key": 0.14285714285714285,
    "mechanics": 0.14285714285714285,
    "advantage": 0.14285714285714285,
    "private": 0.14285714285714285,
    "expected": 0.14285714285714285
  },
  "next ten": {
    "dollar": 1.0
  },
  "ten dollar": {
    "oop": 0.3333333333333333,
    "word": 0.3333333333333333,
    "buzzword": 0.3333333333333333
  },
  "dollar oop": {
    "buzzword": 1.0
  },
  "oop buzzword": {
    "we": 0.5,
    "you": 0.5
  },
  "buzzword we": {
    "need": 1.0
  },
  "we need": {
    "to": 1.0
  },
  "to l": {
    "earn": 1.0
  },
  "l earn": {
    "instantiation": 1.0
  },
  "earn instantiation": {
    "my": 1.0
  },
  "instantiation my": {
    "oxford": 1.0
  },
  "my oxford": {
    "english": 1.0
  },
  "dictionary defines": {
    "instantiate": 0.5,
    "derive": 0.5
  },
  "defines instantiate": {
    "as": 1.0
  },
  "instantiate as": {
    "to": 1.0
  },
  "as to": {
    "represent": 0.25,
    "convey": 0.25,
    "what": 0.25,
    "generate": 0.25
  },
  "to represent": {
    "by": 1.0
  },
  "represent by": {
    "an": 1.0
  },
  "by an": {
    "instance": 1.0
  },
  "instance it": {
    "also": 0.5,
    "has": 0.5
  },
  "it also": {
    "defines": 0.1111111111111111,
    "inherits": 0.1111111111111111,
    "enables": 0.1111111111111111,
    "lets": 0.1111111111111111,
    "contains": 0.2222222222222222,
    "has": 0.1111111111111111,
    "becomes": 0.1111111111111111,
    "specifies": 0.1111111111111111
  },
  "also defines": {
    "instantiation": 1.0
  },
  "defines instantiation": {
    "as": 1.0
  },
  "instantiation as": {
    "the": 1.0
  },
  "the action": {
    "or": 0.15384615384615385,
    "which": 0.07692307692307693,
    "restrict": 0.07692307692307693,
    "means": 0.15384615384615385,
    "is": 0.15384615384615385,
    "cascade": 0.07692307692307693,
    "cascades": 0.07692307692307693,
    "what": 0.07692307692307693,
    "as": 0.07692307692307693,
    "the": 0.07692307692307693
  },
  "action or": {
    "fact": 0.5,
    "less": 0.5
  },
  "or fact": {
    "of": 1.0
  },
  "fact of": {
    "instantiating": 1.0
  },
  "of instantiating": {
    "representation": 1.0
  },
  "instantiating representation": {
    "by": 1.0
  },
  "representation by": {
    "an": 1.0
  },
  "instance the": {
    "real": 1.0
  },
  "the real": {
    "power": 0.25,
    "p": 0.25,
    "world": 0.25,
    "usefulness": 0.25
  },
  "real power": {
    "of": 1.0
  },
  "power of": {
    "the": 1.0
  },
  "can have": {
    "multiple": 0.4,
    "many": 0.2,
    "a": 0.4
  },
  "multiple instances": {
    "of": 1.0
  },
  "instances of": {
    "the": 0.6,
    "a": 0.4
  },
  "the type": {
    "of": 0.6363636363636364,
    "attribute": 0.2727272727272727,
    "where": 0.09090909090909091
  },
  "class declares": {
    "each": 1.0
  },
  "declares each": {
    "of": 1.0
  },
  "each of": {
    "these": 0.75,
    "the": 0.25
  },
  "of these": {
    "instances": 0.125,
    "tasks": 0.125,
    "complex": 0.125,
    "methods": 0.125,
    "questions": 0.125,
    "access": 0.125,
    "database": 0.125,
    "examples": 0.125
  },
  "these instances": {
    "is": 1.0
  },
  "instances is": {
    "allocated": 1.0
  },
  "allocated its": {
    "own": 1.0
  },
  "own set": {
    "of": 1.0
  },
  "of properties": {
    "but": 0.3333333333333333,
    "when": 0.16666666666666666,
    "like": 0.16666666666666666,
    "specific": 0.16666666666666666,
    "data": 0.16666666666666666
  },
  "properties but": {
    "they": 0.5,
    "shares": 0.5
  },
  "but they": {
    "all": 1.0
  },
  "they all": {
    "share": 0.6666666666666666,
    "execute": 0.3333333333333333
  },
  "all share": {
    "the": 1.0
  },
  "of methods": {
    "that": 0.2,
    "to": 0.2,
    "how": 0.2,
    "therefore": 0.2,
    "of": 0.2
  },
  "methods that": {
    "operate": 0.25,
    "eliminates": 0.125,
    "differentiate": 0.125,
    "are": 0.125,
    "belong": 0.125,
    "exist": 0.125,
    "we": 0.125
  },
  "that operate": {
    "on": 1.0
  },
  "properties that": {
    "s": 0.3333333333333333,
    "each": 0.3333333333333333,
    "need": 0.3333333333333333
  },
  "s where": {
    "the": 1.0
  },
  "where the": {
    "real": 0.3333333333333333,
    "user": 0.3333333333333333,
    "program": 0.3333333333333333
  },
  "real p": {
    "romise": 1.0
  },
  "p romise": {
    "of": 1.0
  },
  "romise of": {
    "oop": 1.0
  },
  "oop lies": {
    "in": 1.0
  },
  "lies in": {
    "the": 0.5,
    "clarion": 0.25,
    "its": 0.25
  },
  "the fact": {
    "that": 1.0
  },
  "fact that": {
    "you": 0.14285714285714285,
    "they": 0.14285714285714285,
    "many": 0.14285714285714285,
    "these": 0.14285714285714285,
    "a": 0.2857142857142857,
    "exclusive": 0.14285714285714285
  },
  "you only": {
    "need": 0.6666666666666666,
    "want": 0.3333333333333333
  },
  "only need": {
    "a": 0.3333333333333333,
    "to": 0.6666666666666666
  },
  "need a": {
    "single": 1.0
  },
  "methods to": {
    "operate": 0.25,
    "call": 0.5,
    "execute": 0.25
  },
  "properties of": {
    "any": 0.1111111111111111,
    "a": 0.2222222222222222,
    "the": 0.5555555555555556,
    "an": 0.1111111111111111
  },
  "any object": {
    "instance": 1.0
  },
  "object instance": {
    "of": 0.25,
    "is": 0.25,
    "someclass": 0.25,
    "are": 0.25
  },
  "a particular": {
    "class": 0.5,
    "file": 0.5
  },
  "particular class": {
    "the": 1.0
  },
  "class the": {
    "memory": 0.09090909090909091,
    "construct": 0.09090909090909091,
    "destruct": 0.09090909090909091,
    "answer": 0.09090909090909091,
    "derived": 0.18181818181818182,
    "current": 0.09090909090909091,
    "ability": 0.09090909090909091,
    "contained": 0.09090909090909091,
    "container": 0.09090909090909091,
    "virtual": 0.09090909090909091
  },
  "specific object": {
    "instance": 1.0
  },
  "instance is": {
    "allocated": 1.0
  },
  "when that": {
    "object": 1.0
  },
  "object is": {
    "instantiated": 0.2608695652173913,
    "automatically": 0.043478260869565216,
    "global": 0.043478260869565216,
    "that": 0.043478260869565216,
    "program": 0.043478260869565216,
    "destroyed": 0.17391304347826086,
    "a": 0.043478260869565216,
    "one": 0.08695652173913043,
    "not": 0.043478260869565216,
    "created": 0.08695652173913043,
    "destroye": 0.043478260869565216,
    "in": 0.043478260869565216,
    "an": 0.043478260869565216
  },
  "is instantiated": {
    "a": 0.14285714285714285,
    "so": 0.14285714285714285,
    "for": 0.14285714285714285,
    "no": 0.14285714285714285,
    "either": 0.14285714285714285,
    "first": 0.14285714285714285,
    "if": 0.14285714285714285
  },
  "instantiated a": {
    "ten": 1.0
  },
  "a ten": {
    "dollar": 1.0
  },
  "dollar word": {
    "for": 1.0
  },
  "word for": {
    "created": 1.0
  },
  "for created": {
    "ok": 1.0
  },
  "created ok": {
    "so": 1.0
  },
  "so how": {
    "do": 1.0
  },
  "how do": {
    "we": 0.5,
    "you": 0.5
  },
  "do we": {
    "instantiate": 1.0
  },
  "we instantiate": {
    "an": 1.0
  },
  "instantiate an": {
    "object": 1.0
  },
  "object there": {
    "are": 0.75,
    "is": 0.25
  },
  "are three": {
    "ways": 0.16666666666666666,
    "major": 0.16666666666666666,
    "that": 0.16666666666666666,
    "types": 0.16666666666666666,
    "clarion": 0.16666666666666666,
    "forms": 0.16666666666666666
  },
  "three ways": {
    "to": 1.0
  },
  "ways to": {
    "do": 0.25,
    "create": 0.25,
    "access": 0.25,
    "directly": 0.25
  },
  "to do": {
    "it": 0.1111111111111111,
    "with": 0.3333333333333333,
    "that": 0.3333333333333333,
    "is": 0.2222222222222222
  },
  "it 1": {
    "a": 1.0
  },
  "1 a": {
    "class": 1.0
  },
  "class declared": {
    "without": 1.0
  },
  "declared without": {
    "the": 1.0
  },
  "type attribute": {
    "declares": 0.3333333333333333,
    "only": 0.3333333333333333,
    "both": 0.3333333333333333
  },
  "attribute declares": {
    "both": 1.0
  },
  "declares both": {
    "a": 1.0
  },
  "both a": {
    "type": 0.5,
    "parent": 0.5
  },
  "a type": {
    "of": 1.0
  },
  "type 2": {
    "a": 1.0
  },
  "2 a": {
    "simple": 1.0
  },
  "a simple": {
    "declaration": 0.3333333333333333,
    "class": 0.3333333333333333,
    "coding": 0.3333333333333333
  },
  "simple declaration": {
    "statement": 1.0
  },
  "declaration statement": {
    "wi": 1.0
  },
  "statement wi": {
    "th": 1.0
  },
  "wi th": {
    "the": 1.0
  },
  "th the": {
    "data": 1.0
  },
  "data type": {
    "being": 0.2,
    "as": 0.2,
    "for": 0.2,
    "program": 0.2,
    "they": 0.2
  },
  "type being": {
    "the": 1.0
  },
  "being the": {
    "label": 1.0
  },
  "the label": {
    "of": 1.0
  },
  "label of": {
    "a": 0.625,
    "the": 0.25,
    "an": 0.125
  },
  "a previously": {
    "declared": 1.0
  },
  "previously declared": {
    "class": 0.6666666666666666,
    "base": 0.3333333333333333
  },
  "declared class": {
    "structure": 1.0
  },
  "structure declares": {
    "an": 1.0
  },
  "declares an": {
    "object": 1.0
  },
  "object of": {
    "the": 0.6,
    "another": 0.2,
    "one": 0.2
  },
  "same type": {
    "as": 0.3333333333333333,
    "other": 0.3333333333333333,
    "of": 0.3333333333333333
  },
  "type as": {
    "the": 0.5,
    "a": 0.5
  },
  "class 3": {
    "declare": 1.0
  },
  "3 declare": {
    "a": 1.0
  },
  "declare a": {
    "reference": 0.3076923076923077,
    "public": 0.15384615384615385,
    "private": 0.15384615384615385,
    "base": 0.07692307692307693,
    "type": 0.07692307692307693,
    "diferent": 0.07692307692307693,
    "clarion": 0.07692307692307693,
    "key": 0.07692307692307693
  },
  "a reference": {
    "to": 0.6666666666666666,
    "variable": 0.2222222222222222,
    "assignment": 0.1111111111111111
  },
  "reference to": {
    "the": 0.3333333333333333,
    "another": 0.06666666666666667,
    "serve": 0.06666666666666667,
    "a": 0.4666666666666667,
    "an": 0.06666666666666667
  },
  "then use": {
    "the": 1.0
  },
  "the new": {
    "and": 0.1111111111111111,
    "procedure": 0.1111111111111111,
    "class": 0.4444444444444444,
    "abc": 0.1111111111111111,
    "functionality": 0.1111111111111111,
    "primary": 0.1111111111111111
  },
  "new and": {
    "dispose": 1.0
  },
  "and dispose": {
    "procedures": 0.3333333333333333,
    "to": 0.3333333333333333,
    "of": 0.3333333333333333
  },
  "dispose procedures": {
    "to": 1.0
  },
  "procedures to": {
    "instantiate": 1.0
  },
  "to instantiate": {
    "and": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "instantiate and": {
    "destroy": 1.0
  },
  "and destroy": {
    "the": 0.5,
    "variables": 0.5
  },
  "destroy the": {
    "object": 0.5,
    "someclass": 0.25,
    "queue": 0.25
  },
  "the object": {
    "that": 0.03125,
    "is": 0.34375,
    "to": 0.03125,
    "itself": 0.03125,
    "s": 0.09375,
    "name": 0.0625,
    "has": 0.03125,
    "as": 0.03125,
    "without": 0.03125,
    "knows": 0.03125,
    "whether": 0.03125,
    "it": 0.03125,
    "you": 0.03125,
    "inside": 0.03125,
    "can": 0.03125,
    "and": 0.03125,
    "the": 0.03125,
    "which": 0.03125,
    "in": 0.03125
  },
  "object that": {
    "s": 1.0
  },
  "s how": {
    "you": 1.0
  },
  "how you": {
    "instantiate": 0.3333333333333333,
    "are": 0.3333333333333333,
    "want": 0.3333333333333333
  },
  "you instantiate": {
    "objects": 1.0
  },
  "instantiate objects": {
    "now": 1.0
  },
  "objects now": {
    "you": 1.0
  },
  "you might": {
    "ask": 0.25,
    "call": 0.25,
    "guess": 0.25,
    "end": 0.25
  },
  "might ask": {
    "why": 1.0
  },
  "ask why": {
    "is": 1.0
  },
  "why is": {
    "he": 0.3333333333333333,
    "it": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "is he": {
    "making": 1.0
  },
  "he making": {
    "such": 1.0
  },
  "making such": {
    "a": 1.0
  },
  "such a": {
    "big": 0.5,
    "thing": 0.5
  },
  "a big": {
    "deal": 1.0
  },
  "big deal": {
    "about": 1.0
  },
  "deal about": {
    "instantiation": 1.0
  },
  "about instantiation": {
    "good": 1.0
  },
  "instantiation good": {
    "question": 1.0
  },
  "good question": {
    "the": 1.0
  },
  "question the": {
    "answer": 0.5,
    "beginning": 0.5
  },
  "the answer": {
    "has": 0.14285714285714285,
    "lies": 0.14285714285714285,
    "to": 0.14285714285714285,
    "is": 0.42857142857142855,
    "may": 0.14285714285714285
  },
  "answer has": {
    "to": 1.0
  },
  "has to": {
    "do": 0.25,
    "die": 0.25,
    "be": 0.25,
    "delete": 0.25
  },
  "do with": {
    "memory": 0.3333333333333333,
    "polymorphism": 0.3333333333333333,
    "what": 0.3333333333333333
  },
  "with memory": {
    "allocation": 1.0
  },
  "memory allocation": {
    "for": 0.5,
    "and": 0.5
  },
  "allocation for": {
    "the": 1.0
  },
  "that each": {
    "object": 1.0
  },
  "each object": {
    "contains": 0.2,
    "gets": 0.4,
    "has": 0.2,
    "end": 0.2
  },
  "object contains": {
    "remember": 0.5,
    "all": 0.5
  },
  "contains remember": {
    "that": 1.0
  },
  "remember that": {
    "each": 1.0
  },
  "object gets": {
    "its": 1.0
  },
  "gets its": {
    "own": 1.0
  },
  "own discrete": {
    "set": 1.0
  },
  "discrete set": {
    "of": 1.0
  },
  "properties when": {
    "the": 1.0
  },
  "instantiated so": {
    "it": 1.0
  },
  "so it": {
    "s": 1.0
  },
  "it s": {
    "important": 0.16666666666666666,
    "appropriate": 0.16666666666666666,
    "the": 0.16666666666666666,
    "a": 0.3333333333333333,
    "actual": 0.16666666666666666
  },
  "s important": {
    "to": 1.0
  },
  "important to": {
    "know": 0.5,
    "note": 0.5
  },
  "to know": {
    "when": 0.2,
    "exactly": 0.2,
    "about": 0.2,
    "anything": 0.2,
    "that": 0.2
  },
  "know when": {
    "these": 1.0
  },
  "when these": {
    "things": 1.0
  },
  "these things": {
    "are": 0.5,
    "local": 0.5
  },
  "things are": {
    "instantiated": 1.0
  },
  "are instantiated": {
    "13": 0.3333333333333333,
    "and": 0.3333333333333333,
    "for": 0.3333333333333333
  },
  "instantiated 13": {
    "easing": 1.0
  },
  "13 easing": {
    "into": 1.0
  },
  "oop instantiation": {
    "an": 1.0
  },
  "instantiation an": {
    "object": 1.0
  },
  "object declared": {
    "in": 0.75,
    "locally": 0.25
  },
  "s global": {
    "data": 1.0
  },
  "section is": {
    "instantiated": 0.5,
    "automatically": 0.5
  },
  "instantiated for": {
    "you": 1.0
  },
  "for you": {
    "automatically": 0.21428571428571427,
    "when": 0.42857142857142855,
    "you": 0.07142857142857142,
    "the": 0.14285714285714285,
    "or": 0.07142857142857142,
    "by": 0.07142857142857142
  },
  "you automatically": {
    "at": 1.0
  },
  "automatically at": {
    "the": 1.0
  },
  "which marks": {
    "the": 1.0
  },
  "marks the": {
    "beginning": 1.0
  },
  "global executable": {
    "code": 1.0
  },
  "automatically destroyed": {
    "for": 1.0
  },
  "destroyed for": {
    "you": 1.0
  },
  "you when": {
    "you": 0.5,
    "an": 0.3333333333333333,
    "it": 0.16666666666666666
  },
  "when you": {
    "return": 0.14285714285714285,
    "execute": 0.047619047619047616,
    "talk": 0.047619047619047616,
    "derive": 0.14285714285714285,
    "decide": 0.047619047619047616,
    "ve": 0.047619047619047616,
    "need": 0.047619047619047616,
    "look": 0.047619047619047616,
    "use": 0.047619047619047616,
    "couple": 0.047619047619047616,
    "cascade": 0.047619047619047616,
    "are": 0.047619047619047616,
    "set": 0.09523809523809523,
    "write": 0.047619047619047616,
    "establish": 0.047619047619047616,
    "re": 0.047619047619047616
  },
  "you return": {
    "from": 1.0
  },
  "return from": {
    "your": 0.5,
    "the": 0.5
  },
  "from your": {
    "program": 0.6666666666666666,
    "standard": 0.3333333333333333
  },
  "program to": {
    "the": 1.0
  },
  "system therefore": {
    "the": 1.0
  },
  "global object": {
    "is": 1.0
  },
  "is global": {
    "program": 1.0
  },
  "global program": {
    "global": 1.0
  },
  "program global": {
    "data": 1.0
  },
  "code myclass": {
    "class": 0.25,
    "and": 0.5,
    "mymethod": 0.25
  },
  "class declare": {
    "an": 0.5,
    "base": 0.3333333333333333,
    "a": 0.16666666666666666
  },
  "and property": {
    "long": 1.0
  },
  "object method": {
    "procedure": 0.75,
    "so": 0.25
  },
  "method procedure": {
    "end": 0.5555555555555556,
    "construct": 0.2222222222222222,
    "mymethod": 0.1111111111111111,
    "code": 0.1111111111111111
  },
  "end classa": {
    "myclass": 0.5,
    "class": 0.5
  },
  "classa myclass": {
    "declare": 1.0
  },
  "myclass declare": {
    "myclass": 0.6666666666666666,
    "derived": 0.3333333333333333
  },
  "declare myclass": {
    "object": 0.5,
    "reference": 0.5
  },
  "myclass object": {
    "classb": 1.0
  },
  "object classb": {
    "myclass": 1.0
  },
  "classb myclass": {
    "declare": 1.0
  },
  "myclass reference": {
    "code": 0.6666666666666666,
    "someproc": 0.3333333333333333
  },
  "reference code": {
    "myclass": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "myclass and": {
    "classa": 1.0
  },
  "and classa": {
    "automagically": 0.8,
    "are": 0.2
  },
  "classa automagically": {
    "instantiated": 0.5,
    "destroyed": 0.5
  },
  "automagically instantiated": {
    "classb": 1.0
  },
  "instantiated classb": {
    "new": 1.0
  },
  "classb new": {
    "myclass": 1.0
  },
  "new myclass": {
    "explicitly": 0.5,
    "instantiate": 0.5
  },
  "myclass explicitly": {
    "instantiate": 1.0
  },
  "explicitly instantiate": {
    "object": 1.0
  },
  "instantiate object": {
    "execute": 1.0
  },
  "object execute": {
    "some": 1.0
  },
  "execute some": {
    "code": 1.0
  },
  "some code": {
    "dispose": 1.0
  },
  "code dispose": {
    "classb": 1.0
  },
  "dispose classb": {
    "destroy": 1.0
  },
  "classb destroy": {
    "object": 1.0
  },
  "destroy object": {
    "required": 1.0
  },
  "object required": {
    "return": 1.0
  },
  "required return": {
    "myclass": 1.0
  },
  "return myclass": {
    "and": 1.0
  },
  "automagically destroyed": {
    "objects": 0.5,
    "ok": 0.5
  },
  "destroyed objects": {
    "declared": 1.0
  },
  "objects declared": {
    "in": 1.0
  },
  "in any": {
    "module": 0.16666666666666666,
    "of": 0.3333333333333333,
    "access": 0.16666666666666666,
    "sort": 0.16666666666666666,
    "way": 0.16666666666666666
  },
  "are also": {
    "instantiated": 0.14285714285714285,
    "protected": 0.14285714285714285,
    "allowed": 0.14285714285714285,
    "referred": 0.14285714285714285,
    "many": 0.14285714285714285,
    "several": 0.14285714285714285,
    "fetched": 0.14285714285714285
  },
  "also instantiated": {
    "for": 1.0
  },
  "and automatically": {
    "destro": 0.5,
    "destroyed": 0.5
  },
  "automatically destro": {
    "yed": 1.0
  },
  "destro yed": {
    "for": 1.0
  },
  "yed for": {
    "you": 1.0
  },
  "system this": {
    "makes": 1.0
  },
  "makes their": {
    "lifetime": 1.0
  },
  "their lifetime": {
    "global": 0.5,
    "and": 0.5
  },
  "lifetime global": {
    "despite": 1.0
  },
  "global despite": {
    "the": 1.0
  },
  "despite the": {
    "fact": 0.6666666666666666,
    "get": 0.3333333333333333
  },
  "visible to": {
    "procedures": 1.0
  },
  "to procedures": {
    "within": 1.0
  },
  "module member": {
    "myapp": 1.0
  },
  "member myapp": {
    "module": 0.5,
    "a": 0.5
  },
  "myapp module": {
    "data": 1.0
  },
  "an o": {
    "bject": 1.0
  },
  "o bject": {
    "and": 1.0
  },
  "bject and": {
    "property": 1.0
  },
  "reference someproc": {
    "procedure": 1.0
  },
  "someproc procedure": {
    "myclass": 0.5,
    "local": 0.5
  },
  "procedure myclass": {
    "and": 0.5,
    "property": 0.5
  },
  "classa are": {
    "instantiated": 1.0
  },
  "instantiated and": {
    "destroyed": 0.6666666666666666,
    "is": 0.3333333333333333
  },
  "and destroyed": {
    "at": 0.5,
    "in": 0.5
  },
  "destroyed at": {
    "the": 1.0
  },
  "same time": {
    "as": 0.25,
    "a": 0.25,
    "user": 0.25,
    "concurrency": 0.25
  },
  "global objects": {
    "classb": 1.0
  },
  "objects classb": {
    "must": 1.0
  },
  "classb must": {
    "be": 1.0
  },
  "be explicitly": {
    "instantiated": 0.5,
    "called": 0.5
  },
  "explicitly instantiated": {
    "and": 0.5,
    "with": 0.5
  },
  "destroyed in": {
    "some": 1.0
  },
  "some procedure": {
    "in": 0.5,
    "allows": 0.5
  },
  "module objects": {
    "declared": 1.0
  },
  "this limits": {
    "their": 0.5,
    "you": 0.5
  },
  "limits their": {
    "lifetime": 1.0
  },
  "declared someproc": {
    "procedure": 1.0
  },
  "and c": {
    "ode": 1.0
  },
  "c ode": {
    "myclass": 1.0
  },
  "ode myclass": {
    "class": 1.0
  },
  "myclass instantiate": {
    "object": 1.0
  },
  "destroyed ok": {
    "a": 1.0
  },
  "ok a": {
    "ll": 1.0
  },
  "a ll": {
    "that": 1.0
  },
  "ll that": {
    "s": 1.0
  },
  "s pretty": {
    "straight": 1.0
  },
  "pretty straight": {
    "forward": 1.0
  },
  "straight forward": {
    "about": 0.5,
    "an": 0.5
  },
  "forward about": {
    "what": 1.0
  },
  "you expected": {
    "right": 1.0
  },
  "expected right": {
    "the": 1.0
  },
  "right the": {
    "ones": 1.0
  },
  "the ones": {
    "you": 1.0
  },
  "ones you": {
    "have": 1.0
  },
  "to keep": {
    "your": 0.3333333333333333,
    "in": 0.3333333333333333,
    "control": 0.3333333333333333
  },
  "keep your": {
    "eye": 1.0
  },
  "your eye": {
    "on": 1.0
  },
  "eye on": {
    "are": 1.0
  },
  "on are": {
    "the": 1.0
  },
  "the objects": {
    "that": 0.5,
    "derived": 0.5
  },
  "objects that": {
    "you": 0.25,
    "belong": 0.75
  },
  "you declare": {
    "as": 0.5,
    "an": 0.5
  },
  "declare as": {
    "reference": 1.0
  },
  "as reference": {
    "variables": 1.0
  },
  "variables these": {
    "objects": 1.0
  },
  "these objects": {
    "are": 1.0
  },
  "objects are": {
    "only": 1.0
  },
  "only instantiated": {
    "when": 1.0
  },
  "instantiated when": {
    "you": 1.0
  },
  "you execute": {
    "a": 0.5,
    "the": 0.5
  },
  "execute a": {
    "new": 0.25,
    "parent": 0.25,
    "derived": 0.25,
    "reference": 0.25
  },
  "new statement": {
    "and": 1.0
  },
  "statement and": {
    "now": 0.5,
    "the": 0.5
  },
  "and now": {
    "here": 0.5,
    "you": 0.5
  },
  "now here": {
    "s": 1.0
  },
  "th ing": {
    "to": 1.0
  },
  "ing to": {
    "watch": 1.0
  },
  "to watch": {
    "out": 1.0
  },
  "watch out": {
    "for": 1.0
  },
  "out for": {
    "they": 1.0
  },
  "for they": {
    "are": 1.0
  },
  "are never": {
    "automatically": 1.0
  },
  "never automatically": {
    "destroyed": 1.0
  },
  "you you": {
    "must": 1.0
  },
  "you must": {
    "use": 0.2,
    "also": 0.1,
    "write": 0.2,
    "prototype": 0.1,
    "detect": 0.1,
    "be": 0.1,
    "lock": 0.1,
    "explicitly": 0.1
  },
  "must use": {
    "dispose": 0.5,
    "the": 0.5
  },
  "use dispose": {
    "to": 1.0
  },
  "dispose to": {
    "get": 0.3333333333333333,
    "destroy": 0.3333333333333333,
    "dynamically": 0.3333333333333333
  },
  "to get": {
    "rid": 0.14285714285714285,
    "a": 0.2857142857142857,
    "it": 0.14285714285714285,
    "the": 0.2857142857142857,
    "that": 0.14285714285714285
  },
  "get rid": {
    "of": 1.0
  },
  "rid of": {
    "them": 1.0
  },
  "of them": {
    "yourself": 1.0
  },
  "them yourself": {
    "if": 1.0
  },
  "yourself if": {
    "you": 1.0
  },
  "you forget": {
    "to": 1.0
  },
  "forget to": {
    "do": 1.0
  },
  "do that": {
    "you": 0.3333333333333333,
    "is": 0.3333333333333333,
    "could": 0.3333333333333333
  },
  "can end": {
    "up": 1.0
  },
  "a memory": {
    "leak": 1.0
  },
  "memory leak": {
    "in": 1.0
  },
  "leak in": {
    "your": 1.0
  },
  "program so": {
    "the": 1.0
  },
  "so the": {
    "question": 0.2857142857142857,
    "answer": 0.14285714285714285,
    "derived": 0.14285714285714285,
    "methods": 0.14285714285714285,
    "sql": 0.14285714285714285,
    "client": 0.14285714285714285
  },
  "the question": {
    "now": 0.3333333333333333,
    "how": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "question now": {
    "comes": 1.0
  },
  "now comes": {
    "up": 1.0
  },
  "comes up": {
    "if": 0.5,
    "as": 0.5
  },
  "up if": {
    "each": 1.0
  },
  "if each": {
    "object": 1.0
  },
  "but shares": {
    "the": 1.0
  },
  "shares the": {
    "same": 0.6666666666666666,
    "common": 0.3333333333333333
  },
  "methods how": {
    "does": 1.0
  },
  "how does": {
    "the": 1.0
  },
  "does the": {
    "executable": 0.3333333333333333,
    "code": 0.3333333333333333,
    "first": 0.3333333333333333
  },
  "code inside": {
    "the": 0.75,
    "object": 0.25
  },
  "inside the": {
    "method": 0.3333333333333333,
    "applepie": 0.16666666666666666,
    "local": 0.16666666666666666,
    "procedure": 0.16666666666666666,
    "class": 0.16666666666666666
  },
  "method know": {
    "exactly": 1.0
  },
  "know exactly": {
    "which": 0.6,
    "what": 0.2,
    "how": 0.2
  },
  "exactly which": {
    "object": 0.6666666666666666,
    "position": 0.3333333333333333
  },
  "which object": {
    "s": 1.0
  },
  "object s": {
    "properties": 0.2222222222222222,
    "name": 0.1111111111111111,
    "instantiation": 0.1111111111111111,
    "virtuals": 0.1111111111111111,
    "one": 0.1111111111111111,
    "reference": 0.1111111111111111,
    "method": 0.1111111111111111,
    "methods": 0.1111111111111111
  },
  "s properties": {
    "to": 0.6666666666666666,
    "and": 0.3333333333333333
  },
  "properties to": {
    "affect": 1.0
  },
  "to affect": {
    "another": 0.5,
    "is": 0.5
  },
  "affect another": {
    "good": 1.0
  },
  "another good": {
    "question": 1.0
  },
  "answer lies": {
    "in": 1.0
  },
  "s field": {
    "qualification": 1.0
  },
  "syntax clarion": {
    "language": 1.0
  },
  "guide 14": {
    "field": 1.0
  },
  "14 field": {
    "qualification": 1.0
  },
  "syntax the": {
    "properties": 1.0
  },
  "object are": {
    "referenced": 0.5,
    "the": 0.5
  },
  "are referenced": {
    "in": 0.5,
    "using": 0.5
  },
  "referenced in": {
    "code": 0.5,
    "the": 0.5
  },
  "in code": {
    "by": 1.0
  },
  "code by": {
    "prepending": 0.5,
    "explicitly": 0.5
  },
  "by prepending": {
    "the": 1.0
  },
  "prepending the": {
    "name": 1.0
  },
  "object to": {
    "the": 0.16666666666666666,
    "self": 0.16666666666666666,
    "create": 0.16666666666666666,
    "effectively": 0.16666666666666666,
    "it": 0.16666666666666666,
    "somelocalproc": 0.16666666666666666
  },
  "the property": {
    "or": 1.0
  },
  "property or": {
    "method": 1.0
  },
  "or method": {
    "using": 0.1,
    "is": 0.3,
    "to": 0.1,
    "of": 0.1,
    "on": 0.2,
    "from": 0.1,
    "s": 0.1
  },
  "method using": {
    "what": 1.0
  },
  "using what": {
    "s": 1.0
  },
  "what s": {
    "come": 0.25,
    "a": 0.25,
    "called": 0.25,
    "the": 0.25
  },
  "s come": {
    "to": 1.0
  },
  "come to": {
    "be": 1.0
  },
  "be known": {
    "as": 1.0
  },
  "known as": {
    "dot": 0.3333333333333333,
    "composition": 0.3333333333333333,
    "concurrency": 0.3333333333333333
  },
  "as dot": {
    "syntax": 1.0
  },
  "dot syntax": {
    "this": 1.0
  },
  "syntax this": {
    "is": 1.0
  },
  "is pretty": {
    "standard": 1.0
  },
  "pretty standard": {
    "syntax": 0.3333333333333333,
    "the": 0.3333333333333333,
    "database": 0.3333333333333333
  },
  "standard syntax": {
    "in": 1.0
  },
  "syntax in": {
    "all": 1.0
  },
  "in all": {
    "the": 0.25,
    "executable": 0.25,
    "applications": 0.25,
    "rows": 0.25
  },
  "the various": {
    "languages": 0.5,
    "varieties": 0.5
  },
  "various languages": {
    "that": 1.0
  },
  "languages that": {
    "support": 1.0
  },
  "that support": {
    "oop": 1.0
  },
  "support oop": {
    "for": 1.0
  },
  "oop for": {
    "example": 1.0
  },
  "example assume": {
    "you": 0.5,
    "a": 0.5
  },
  "assume you": {
    "have": 1.0
  },
  "have an": {
    "object": 1.0
  },
  "object named": {
    "fred": 1.0
  },
  "named fred": {
    "and": 1.0
  },
  "fred and": {
    "it": 1.0
  },
  "it has": {
    "a": 0.14285714285714285,
    "been": 0.14285714285714285,
    "properties": 0.14285714285714285,
    "inherited": 0.14285714285714285,
    "probably": 0.14285714285714285,
    "no": 0.14285714285714285,
    "buffers": 0.14285714285714285
  },
  "a method": {
    "named": 0.2631578947368421,
    "of": 0.15789473684210525,
    "prototype": 0.05263157894736842,
    "in": 0.10526315789473684,
    "s": 0.10526315789473684,
    "from": 0.10526315789473684,
    "whose": 0.05263157894736842,
    "and": 0.05263157894736842,
    "that": 0.05263157894736842,
    "you": 0.05263157894736842
  },
  "method named": {
    "work": 0.2,
    "construct": 0.4,
    "destruct": 0.4
  },
  "named work": {
    "and": 1.0
  },
  "work and": {
    "two": 1.0
  },
  "and two": {
    "properties": 0.3333333333333333,
    "methods": 0.3333333333333333,
    "foreign": 0.3333333333333333
  },
  "two properties": {
    "named": 0.3333333333333333,
    "data": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "properties named": {
    "pay": 1.0
  },
  "named pay": {
    "and": 1.0
  },
  "pay and": {
    "hours": 1.0
  },
  "and hours": {
    "outside": 1.0
  },
  "hours outside": {
    "the": 1.0
  },
  "outside the": {
    "object": 0.25,
    "fred": 0.25,
    "class": 0.5
  },
  "object itself": {
    "you": 1.0
  },
  "itself you": {
    "might": 0.5,
    "can": 0.5
  },
  "might call": {
    "that": 1.0
  },
  "call that": {
    "method": 1.0
  },
  "that method": {
    "in": 0.5,
    "prepending": 0.5
  },
  "method in": {
    "an": 0.09090909090909091,
    "a": 0.18181818181818182,
    "the": 0.5454545454545454,
    "other": 0.09090909090909091,
    "both": 0.09090909090909091
  },
  "in an": {
    "assignment": 1.0
  },
  "an assignment": {
    "as": 1.0
  },
  "assignment as": {
    "fred": 1.0
  },
  "as fred": {
    "pay": 1.0
  },
  "fred pay": {
    "fred": 1.0
  },
  "pay fred": {
    "work": 1.0
  },
  "fred work": {
    "fred": 1.0
  },
  "work fred": {
    "hours": 1.0
  },
  "fred hours": {
    "now": 0.5,
    "code": 0.5
  },
  "hours now": {
    "within": 1.0
  },
  "now within": {
    "the": 1.0
  },
  "the methods": {
    "of": 0.38095238095238093,
    "by": 0.047619047619047616,
    "are": 0.047619047619047616,
    "that": 0.09523809523809523,
    "procedures": 0.047619047619047616,
    "in": 0.14285714285714285,
    "exist": 0.047619047619047616,
    "declared": 0.047619047619047616,
    "it": 0.047619047619047616,
    "must": 0.09523809523809523
  },
  "no way": {
    "to": 1.0
  },
  "way to": {
    "know": 0.1,
    "do": 0.1,
    "reference": 0.1,
    "see": 0.1,
    "the": 0.1,
    "steer": 0.1,
    "pass": 0.1,
    "specify": 0.1,
    "handle": 0.1,
    "write": 0.1
  },
  "exactly what": {
    "the": 0.3333333333333333,
    "method": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "what the": {
    "object": 0.3333333333333333,
    "protected": 0.3333333333333333,
    "file": 0.3333333333333333
  },
  "is currently": {
    "executing": 1.0
  },
  "currently executing": {
    "remember": 1.0
  },
  "executing remember": {
    "you": 1.0
  },
  "remember you": {
    "can": 1.0
  },
  "have many": {
    "separate": 1.0
  },
  "many separate": {
    "instances": 1.0
  },
  "separate instances": {
    "of": 1.0
  },
  "object which": {
    "all": 0.16666666666666666,
    "auto": 0.5,
    "calls": 0.3333333333333333
  },
  "which all": {
    "share": 1.0
  },
  "same se": {
    "t": 1.0
  },
  "se t": {
    "of": 1.0
  },
  "t of": {
    "methods": 1.0
  },
  "methods therefore": {
    "within": 1.0
  },
  "therefore within": {
    "the": 1.0
  },
  "object instead": {
    "of": 1.0
  },
  "of using": {
    "the": 0.25,
    "new": 0.25,
    "a": 0.25,
    "prop": 0.25
  },
  "s name": {
    "you": 1.0
  },
  "name you": {
    "use": 0.5,
    "must": 0.5
  },
  "you use": {
    "the": 0.8,
    "new": 0.2
  },
  "word self": {
    "that": 1.0
  },
  "self that": {
    "changes": 1.0
  },
  "that changes": {
    "the": 1.0
  },
  "changes the": {
    "previous": 0.2,
    "values": 0.2,
    "code": 0.4,
    "record": 0.2
  },
  "previous assignment": {
    "when": 1.0
  },
  "assignment when": {
    "made": 1.0
  },
  "when made": {
    "within": 1.0
  },
  "made within": {
    "a": 1.0
  },
  "method of": {
    "an": 0.125,
    "that": 0.125,
    "the": 0.25,
    "a": 0.125,
    "database": 0.125,
    "concurrency": 0.125,
    "working": 0.125
  },
  "to self": {
    "pay": 0.5,
    "createcrust": 0.5
  },
  "self pay": {
    "self": 1.0
  },
  "pay self": {
    "work": 1.0
  },
  "self work": {
    "self": 1.0
  },
  "work self": {
    "hours": 1.0
  },
  "self hours": {
    "because": 0.5,
    "code": 0.5
  },
  "hours because": {
    "t": 1.0
  },
  "because t": {
    "he": 1.0
  },
  "he code": {
    "at": 1.0
  },
  "code at": {
    "that": 1.0
  },
  "at that": {
    "point": 1.0
  },
  "that point": {
    "doesn": 1.0
  },
  "point doesn": {
    "t": 1.0
  },
  "t know": {
    "whether": 0.3333333333333333,
    "and": 0.3333333333333333,
    "exactly": 0.3333333333333333
  },
  "know whether": {
    "it": 1.0
  },
  "whether it": {
    "is": 0.5,
    "s": 0.5
  },
  "is referring": {
    "to": 1.0
  },
  "referring to": {
    "the": 1.0
  },
  "the fred": {
    "object": 1.0
  },
  "fred object": {
    "or": 0.5,
    "employee": 0.5
  },
  "object or": {
    "the": 1.0
  },
  "or the": {
    "barney": 0.14285714285714285,
    "bruce": 0.14285714285714285,
    "bicycle": 0.14285714285714285,
    "value": 0.14285714285714285,
    "primary": 0.2857142857142857,
    "field": 0.14285714285714285
  },
  "the barney": {
    "object": 1.0
  },
  "barney object": {
    "or": 1.0
  },
  "the bruce": {
    "or": 1.0
  },
  "bruce or": {
    "richard": 1.0
  },
  "or richard": {
    "objects": 1.0
  },
  "richard objects": {
    "it": 1.0
  },
  "objects it": {
    "doesn": 1.0
  },
  "know and": {
    "doesn": 1.0
  },
  "and doesn": {
    "t": 1.0
  },
  "t care": {
    "because": 0.5,
    "the": 0.5
  },
  "care because": {
    "self": 1.0
  },
  "because self": {
    "always": 1.0
  },
  "self always": {
    "means": 1.0
  },
  "always means": {
    "whatever": 1.0
  },
  "means whatever": {
    "the": 1.0
  },
  "whatever the": {
    "current": 1.0
  },
  "the current": {
    "object": 0.7142857142857143,
    "instance": 0.14285714285714285,
    "state": 0.07142857142857142,
    "clarion": 0.07142857142857142
  },
  "current object": {
    "is": 0.09090909090909091,
    "within": 0.09090909090909091,
    "to": 0.18181818181818182,
    "on": 0.09090909090909091,
    "self": 0.09090909090909091,
    "instance": 0.18181818181818182,
    "the": 0.09090909090909091,
    "someclass": 0.18181818181818182
  },
  "is program": {
    "employee": 1.0
  },
  "program employee": {
    "class": 1.0
  },
  "employee class": {
    "type": 1.0
  },
  "class type": {
    "declare": 0.2857142857142857,
    "preparepie": 0.07142857142857142,
    "creates": 0.07142857142857142,
    "propertya": 0.21428571428571427,
    "objectq": 0.07142857142857142,
    "base": 0.07142857142857142,
    "propertyc": 0.07142857142857142,
    "someclass": 0.07142857142857142,
    "module": 0.07142857142857142
  },
  "type declare": {
    "object": 0.2,
    "base": 0.6,
    "a": 0.2
  },
  "declare object": {
    "type": 0.5,
    "instances": 0.5
  },
  "type pay": {
    "decimal": 1.0
  },
  "pay decimal": {
    "7": 1.0
  },
  "decimal 7": {
    "2": 1.0
  },
  "7 2": {
    "hours": 0.25,
    "unit": 0.25,
    "code": 0.5
  },
  "2 hours": {
    "decimal": 1.0
  },
  "hours decimal": {
    "3": 1.0
  },
  "decimal 3": {
    "1": 1.0
  },
  "3 1": {
    "calcpay": 1.0
  },
  "1 calcpay": {
    "procedure": 1.0
  },
  "calcpay procedure": {
    "work": 0.5,
    "method": 0.5
  },
  "procedure work": {
    "procedure": 1.0
  },
  "work procedure": {
    "decimal": 1.0
  },
  "procedure decimal": {
    "decimal": 1.0
  },
  "decimal decimal": {
    "end": 1.0
  },
  "decimal end": {
    "fred": 1.0
  },
  "end fred": {
    "employee": 1.0
  },
  "fred employee": {
    "declare": 1.0
  },
  "employee declare": {
    "object": 1.0
  },
  "object instances": {
    "barney": 0.3333333333333333,
    "of": 0.6666666666666666
  },
  "instances barney": {
    "employee": 1.0
  },
  "barney employee": {
    "code": 1.0
  },
  "employee code": {
    "fred": 1.0
  },
  "code fred": {
    "pay": 1.0
  },
  "hours code": {
    "outside": 0.5,
    "inside": 0.5
  },
  "code outside": {
    "the": 0.5,
    "those": 0.5
  },
  "object employee": {
    "calcpay": 1.0
  },
  "employee calcpay": {
    "procedure": 1.0
  },
  "procedure method": {
    "definition": 0.5,
    "end": 0.5
  },
  "method definition": {
    "code": 0.5,
    "this": 0.5
  },
  "definition code": {
    "self": 1.0
  },
  "code self": {
    "pay": 0.08333333333333333,
    "mymethod": 0.08333333333333333,
    "myproperty": 0.08333333333333333,
    "aproperty": 0.08333333333333333,
    "createcrust": 0.08333333333333333,
    "queref": 0.08333333333333333,
    "objectq": 0.16666666666666666,
    "privatevar": 0.08333333333333333,
    "anotherclassref": 0.08333333333333333,
    "propertya": 0.16666666666666666
  },
  "inside object": {
    "method": 1.0
  },
  "method so": {
    "the": 0.6666666666666666,
    "what": 0.3333333333333333
  },
  "answer to": {
    "the": 0.5,
    "that": 0.5
  },
  "question how": {
    "does": 1.0
  },
  "affect is": {
    "the": 1.0
  },
  "of self": {
    "as": 1.0
  },
  "self as": {
    "the": 1.0
  },
  "object name": {
    "within": 0.5,
    "self": 0.5
  },
  "name within": {
    "the": 1.0
  },
  "method s": {
    "code": 0.2727272727272727,
    "prototype": 0.2727272727272727,
    "cod": 0.09090909090909091,
    "are": 0.09090909090909091,
    "functionality": 0.09090909090909091,
    "simply": 0.09090909090909091,
    "proto": 0.09090909090909091
  },
  "s code": {
    "constructors": 0.25,
    "is": 0.25,
    "wherever": 0.25,
    "by": 0.25
  },
  "code constructors": {
    "and": 1.0
  },
  "destructors there": {
    "are": 1.0
  },
  "are two": {
    "more": 0.14285714285714285,
    "ways": 0.2857142857142857,
    "benefits": 0.14285714285714285,
    "new": 0.14285714285714285,
    "forms": 0.14285714285714285,
    "major": 0.14285714285714285
  },
  "two more": {
    "things": 0.5,
    "oop": 0.5
  },
  "more things": {
    "to": 1.0
  },
  "things to": {
    "know": 1.0
  },
  "know about": {
    "what": 1.0
  },
  "what happens": {
    "at": 0.5,
    "when": 0.5
  },
  "happens at": {
    "an": 1.0
  },
  "at an": {
    "object": 1.0
  },
  "s instantiation": {
    "and": 1.0
  },
  "instantiation and": {
    "destruction": 1.0
  },
  "and destruction": {
    "those": 1.0
  },
  "destruction those": {
    "two": 1.0
  },
  "those two": {
    "thi": 1.0
  },
  "two thi": {
    "ngs": 1.0
  },
  "thi ngs": {
    "add": 1.0
  },
  "ngs add": {
    "two": 1.0
  },
  "add two": {
    "more": 1.0
  },
  "more oop": {
    "buzzwords": 1.0
  },
  "buzzwords to": {
    "our": 1.0
  },
  "to our": {
    "collection": 0.5,
    "applepie": 0.5
  },
  "our collection": {
    "constructors": 1.0
  },
  "collection constructors": {
    "and": 1.0
  },
  "destructors when": {
    "you": 1.0
  },
  "you talk": {
    "about": 1.0
  },
  "talk about": {
    "constructors": 1.0
  },
  "about constructors": {
    "and": 1.0
  },
  "destructors in": {
    "other": 0.6666666666666666,
    "a": 0.3333333333333333
  },
  "other oop": {
    "languages": 1.0
  },
  "oop languages": {
    "what": 0.14285714285714285,
    "however": 0.14285714285714285,
    "do": 0.14285714285714285,
    "if": 0.14285714285714285,
    "this": 0.14285714285714285,
    "most": 0.14285714285714285,
    "you": 0.14285714285714285
  },
  "languages what": {
    "you": 1.0
  },
  "re actually": {
    "talking": 1.0
  },
  "actually talking": {
    "about": 1.0
  },
  "talking about": {
    "are": 0.5,
    "when": 0.5
  },
  "about are": {
    "automatic": 1.0
  },
  "are automatic": {
    "constructors": 1.0
  },
  "automatic constructors": {
    "a": 0.09090909090909091,
    "and": 0.7272727272727273,
    "in": 0.09090909090909091,
    "are": 0.09090909090909091
  },
  "constructors a": {
    "nd": 1.0
  },
  "a nd": {
    "destructors": 0.5,
    "objects": 0.5
  },
  "nd destructors": {
    "clarion": 1.0
  },
  "destructors clarion": {
    "fully": 1.0
  },
  "clarion fully": {
    "supports": 1.0
  },
  "fully supports": {
    "automatic": 0.5,
    "this": 0.5
  },
  "supports automatic": {
    "constructors": 1.0
  },
  "destructors an": {
    "automatic": 1.0
  },
  "an automatic": {
    "constructor": 0.5,
    "destructor": 0.5
  },
  "automatic constructor": {
    "is": 0.3333333333333333,
    "in": 0.3333333333333333,
    "destruct": 0.3333333333333333
  },
  "constructor is": {
    "a": 1.0
  },
  "specific method": {
    "that": 1.0
  },
  "method that": {
    "is": 0.3333333333333333,
    "guess": 0.16666666666666666,
    "will": 0.16666666666666666,
    "operates": 0.16666666666666666,
    "overrides": 0.16666666666666666
  },
  "automatically called": {
    "for": 0.4,
    "when": 0.6
  },
  "called for": {
    "you": 0.6666666666666666,
    "example": 0.3333333333333333
  },
  "when an": {
    "object": 0.75,
    "experienced": 0.25
  },
  "instantiated no": {
    "matter": 1.0
  },
  "matter how": {
    "that": 1.0
  },
  "how that": {
    "object": 0.6666666666666666,
    "code": 0.3333333333333333
  },
  "instantiated either": {
    "declared": 1.0
  },
  "either declared": {
    "in": 1.0
  },
  "section or": {
    "explicitly": 0.5,
    "create": 0.5
  },
  "or explicitly": {
    "instantiated": 0.5,
    "destroyed": 0.5
  },
  "instantiated with": {
    "the": 1.0
  },
  "new procedure": {
    "to": 1.0
  },
  "constructor in": {
    "clarion": 1.0
  },
  "clarion all": {
    "you": 1.0
  },
  "all you": {
    "need": 1.0
  },
  "you need": {
    "to": 0.875,
    "it": 0.0625,
    "multiple": 0.0625
  },
  "do is": {
    "create": 0.5,
    "run": 0.5
  },
  "is create": {
    "a": 1.0
  },
  "create a": {
    "method": 0.1,
    "virtual": 0.1,
    "fairly": 0.1,
    "queue": 0.1,
    "someclass": 0.1,
    "anotherclass": 0.1,
    "new": 0.1,
    "second": 0.1,
    "complete": 0.1,
    "view": 0.1
  },
  "named construct": {
    "in": 0.3333333333333333,
    "which": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "construct in": {
    "your": 1.0
  },
  "your class": {
    "the": 1.0
  },
  "the construct": {
    "method": 0.3333333333333333,
    "or": 0.6666666666666666
  },
  "construct method": {
    "cannot": 0.2,
    "and": 0.2,
    "would": 0.2,
    "s": 0.2,
    "is": 0.2
  },
  "method cannot": {
    "receive": 0.5,
    "be": 0.5
  },
  "cannot receive": {
    "any": 1.0
  },
  "receive any": {
    "parameters": 0.5,
    "param": 0.5
  },
  "any parameters": {
    "and": 1.0
  },
  "and cannot": {
    "return": 0.5,
    "because": 0.5
  },
  "cannot return": {
    "a": 1.0
  },
  "a v": {
    "alue": 1.0
  },
  "v alue": {
    "the": 1.0
  },
  "alue the": {
    "most": 1.0
  },
  "the most": {
    "typical": 0.06451612903225806,
    "common": 0.5161290322580645,
    "derived": 0.06451612903225806,
    "general": 0.03225806451612903,
    "specific": 0.03225806451612903,
    "abstract": 0.03225806451612903,
    "important": 0.06451612903225806,
    "fundamental": 0.03225806451612903,
    "difficult": 0.03225806451612903,
    "commo": 0.03225806451612903,
    "efficient": 0.03225806451612903,
    "critical": 0.03225806451612903,
    "appropriate": 0.03225806451612903
  },
  "most typical": {
    "usage": 1.0
  },
  "typical usage": {
    "of": 1.0
  },
  "usage of": {
    "automatic": 1.0
  },
  "of automatic": {
    "constructors": 0.5,
    "destructors": 0.5
  },
  "constructors in": {
    "other": 0.5,
    "the": 0.5
  },
  "languages is": {
    "to": 1.0
  },
  "is to": {
    "allocate": 0.11764705882352941,
    "de": 0.058823529411764705,
    "override": 0.11764705882352941,
    "use": 0.058823529411764705,
    "provide": 0.058823529411764705,
    "ensure": 0.058823529411764705,
    "execute": 0.058823529411764705,
    "make": 0.11764705882352941,
    "specify": 0.058823529411764705,
    "reduce": 0.058823529411764705,
    "change": 0.058823529411764705,
    "perform": 0.058823529411764705,
    "call": 0.058823529411764705,
    "allow": 0.058823529411764705
  },
  "to allocate": {
    "memory": 1.0
  },
  "allocate memory": {
    "for": 1.0
  },
  "and initialize": {
    "them": 0.5,
    "data": 0.5
  },
  "initialize them": {
    "in": 1.0
  },
  "clarion since": {
    "memory": 0.3333333333333333,
    "automatically": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "since memory": {
    "is": 1.0
  },
  "allocated for": {
    "variables": 1.0
  },
  "for variables": {
    "the": 1.0
  },
  "variables the": {
    "most": 1.0
  },
  "most common": {
    "usage": 0.058823529411764705,
    "usa": 0.058823529411764705,
    "properties": 0.058823529411764705,
    "purpose": 0.058823529411764705,
    "use": 0.17647058823529413,
    "need": 0.058823529411764705,
    "method": 0.058823529411764705,
    "relationship": 0.058823529411764705,
    "answers": 0.058823529411764705,
    "they": 0.058823529411764705,
    "access": 0.058823529411764705,
    "type": 0.058823529411764705,
    "ri": 0.058823529411764705,
    "rules": 0.058823529411764705,
    "errors": 0.058823529411764705
  },
  "usage would": {
    "probably": 1.0
  },
  "would probably": {
    "be": 1.0
  },
  "probably be": {
    "to": 0.5,
    "a": 0.25,
    "in": 0.25
  },
  "be to": {
    "initialize": 0.4,
    "dispose": 0.2,
    "build": 0.2,
    "specify": 0.2
  },
  "to initialize": {
    "pr": 0.16666666666666666,
    "reference": 0.16666666666666666,
    "inherited": 0.16666666666666666,
    "a": 0.16666666666666666,
    "and": 0.16666666666666666,
    "the": 0.16666666666666666
  },
  "initialize pr": {
    "operties": 1.0
  },
  "pr operties": {
    "to": 1.0
  },
  "operties to": {
    "specific": 1.0
  },
  "to specific": {
    "starting": 1.0
  },
  "specific starting": {
    "values": 1.0
  },
  "starting values": {
    "and": 1.0
  },
  "values and": {
    "to": 0.5,
    "you": 0.5
  },
  "and to": {
    "initialize": 0.5,
    "consider": 0.5
  },
  "initialize reference": {
    "variable": 1.0
  },
  "reference variable": {
    "properties": 0.2222222222222222,
    "for": 0.2222222222222222,
    "naming": 0.1111111111111111,
    "that": 0.2222222222222222,
    "in": 0.1111111111111111,
    "the": 0.1111111111111111
  },
  "variable properties": {
    "an": 0.5,
    "that": 0.5
  },
  "properties an": {
    "automatic": 1.0
  },
  "automatic destructor": {
    "is": 0.3333333333333333,
    "as": 0.3333333333333333,
    "end": 0.3333333333333333
  },
  "destructor is": {
    "a": 1.0
  },
  "is destroyed": {
    "no": 0.2,
    "either": 0.2,
    "and": 0.2,
    "upon": 0.2,
    "since": 0.2
  },
  "destroyed no": {
    "matter": 1.0
  },
  "destroyed either": {
    "by": 1.0
  },
  "either by": {
    "return": 1.0
  },
  "by return": {
    "fr": 1.0
  },
  "return fr": {
    "om": 1.0
  },
  "fr om": {
    "the": 1.0
  },
  "om the": {
    "limit": 1.0
  },
  "the limit": {
    "of": 1.0
  },
  "limit of": {
    "its": 1.0
  },
  "its local": {
    "scope": 1.0
  },
  "local scope": {
    "or": 1.0
  },
  "scope or": {
    "explicitly": 1.0
  },
  "explicitly destroyed": {
    "with": 1.0
  },
  "destroyed with": {
    "the": 1.0
  },
  "the dispose": {
    "procedure": 1.0
  },
  "dispose procedure": {
    "similar": 1.0
  },
  "procedure similar": {
    "to": 1.0
  },
  "similar to": {
    "the": 0.6,
    "pascal": 0.2,
    "prop": 0.2
  },
  "the constructor": {
    "you": 0.3333333333333333,
    "for": 0.16666666666666666,
    "and": 0.16666666666666666,
    "end": 0.16666666666666666,
    "instantiates": 0.16666666666666666
  },
  "constructor you": {
    "declare": 0.5,
    "simply": 0.5
  },
  "destructor as": {
    "a": 1.0
  },
  "named destruct": {
    "in": 0.5,
    "also": 0.5
  },
  "destruct in": {
    "your": 1.0
  },
  "the destruct": {
    "method": 1.0
  },
  "destruct method": {
    "also": 0.2,
    "you": 0.2,
    "is": 0.2,
    "in": 0.2,
    "s": 0.2
  },
  "method also": {
    "cannot": 1.0
  },
  "also cannot": {
    "receive": 1.0
  },
  "any param": {
    "eters": 1.0
  },
  "param eters": {
    "and": 1.0
  },
  "eters and": {
    "cannot": 1.0
  },
  "value 15": {
    "easing": 1.0
  },
  "15 easing": {
    "into": 1.0
  },
  "oop the": {
    "most": 1.0
  },
  "automatic destructors": {
    "in": 0.5,
    "except": 0.5
  },
  "to de": {
    "allocate": 1.0
  },
  "de allocate": {
    "the": 1.0
  },
  "allocate the": {
    "memory": 1.0
  },
  "used for": {
    "properties": 0.2,
    "data": 0.2,
    "sort": 0.4,
    "ad": 0.2
  },
  "properties in": {
    "clarion": 1.0
  },
  "since automatically": {
    "allocated": 1.0
  },
  "also automatically": {
    "de": 0.5,
    "filter": 0.5
  },
  "allocated the": {
    "most": 1.0
  },
  "common usa": {
    "ge": 1.0
  },
  "usa ge": {
    "would": 1.0
  },
  "ge would": {
    "probably": 1.0
  },
  "to dispose": {
    "of": 1.0
  },
  "dispose of": {
    "any": 0.5,
    "an": 0.5
  },
  "any reference": {
    "variable": 1.0
  },
  "need destruction": {
    "myclass": 1.0
  },
  "destruction myclass": {
    "class": 1.0
  },
  "long method": {
    "procedure": 1.0
  },
  "procedure construct": {
    "procedure": 1.0
  },
  "construct procedure": {
    "automatic": 0.08333333333333333,
    "end": 0.16666666666666666,
    "replace": 0.16666666666666666,
    "code": 0.25,
    "constructor": 0.16666666666666666,
    "base": 0.08333333333333333,
    "and": 0.08333333333333333
  },
  "procedure automatic": {
    "constructor": 0.5,
    "destructor": 0.5
  },
  "constructor destruct": {
    "procedure": 1.0
  },
  "destruct procedure": {
    "automatic": 0.2,
    "destructor": 0.2,
    "code": 0.2,
    "destr": 0.2,
    "base": 0.2
  },
  "destructor end": {
    "there": 1.0
  },
  "end there": {
    "is": 1.0
  },
  "is more": {
    "about": 0.5,
    "commonly": 0.5
  },
  "about automatic": {
    "constructors": 1.0
  },
  "destructors and": {
    "is": 0.5,
    "while": 0.5
  },
  "is discussed": {
    "a": 1.0
  },
  "discussed a": {
    "little": 1.0
  },
  "little later": {
    "more": 1.0
  },
  "later more": {
    "about": 1.0
  },
  "encapsulation to": {
    "many": 1.0
  },
  "to many": {
    "oop": 0.058823529411764705,
    "also": 0.058823529411764705,
    "these": 0.058823529411764705,
    "one": 0.058823529411764705,
    "relation": 0.058823529411764705,
    "parent": 0.11764705882352941,
    "is": 0.058823529411764705,
    "relationships": 0.17647058823529413,
    "and": 0.058823529411764705,
    "this": 0.058823529411764705,
    "relationship": 0.11764705882352941,
    "looked": 0.058823529411764705,
    "file": 0.058823529411764705
  },
  "many oop": {
    "purists": 1.0
  },
  "purists encapsulation": {
    "is": 1.0
  },
  "encapsulation is": {
    "all": 0.5,
    "the": 0.5
  },
  "is all": {
    "about": 0.5,
    "pretty": 0.5
  },
  "all about": {
    "hiding": 1.0
  },
  "about hiding": {
    "the": 1.0
  },
  "hiding the": {
    "properties": 1.0
  },
  "class from": {
    "the": 0.3333333333333333,
    "a": 0.1111111111111111,
    "which": 0.4444444444444444,
    "another": 0.1111111111111111
  },
  "program not": {
    "just": 1.0
  },
  "not just": {
    "cont": 1.0
  },
  "just cont": {
    "ainerizing": 1.0
  },
  "cont ainerizing": {
    "them": 1.0
  },
  "ainerizing them": {
    "this": 1.0
  },
  "private property": {
    "and": 0.2,
    "method": 0.2,
    "of": 0.2,
    "or": 0.2,
    "baseproc": 0.2
  },
  "property and": {
    "the": 0.5,
    "end": 0.25,
    "one": 0.25
  },
  "language fully": {
    "supports": 1.0
  },
  "supports this": {
    "with": 1.0
  },
  "this with": {
    "the": 1.0
  },
  "the private": {
    "attribute": 0.42857142857142855,
    "property": 0.14285714285714285,
    "or": 0.14285714285714285,
    "properties": 0.14285714285714285,
    "data": 0.14285714285714285
  },
  "private attribute": {
    "the": 0.5,
    "on": 0.16666666666666666,
    "means": 0.16666666666666666,
    "specifies": 0.16666666666666666
  },
  "attribute the": {
    "private": 0.3333333333333333,
    "properties": 0.6666666666666666
  },
  "attribute on": {
    "a": 0.5,
    "the": 0.375,
    "both": 0.125
  },
  "on a": {
    "property": 0.08333333333333333,
    "method": 0.08333333333333333,
    "widespread": 0.08333333333333333,
    "field": 0.16666666666666666,
    "record": 0.08333333333333333,
    "client": 0.16666666666666666,
    "database": 0.08333333333333333,
    "network": 0.08333333333333333,
    "view": 0.16666666666666666
  },
  "a property": {
    "declaration": 0.14285714285714285,
    "of": 0.42857142857142855,
    "or": 0.2857142857142857,
    "using": 0.14285714285714285
  },
  "property declaration": {
    "or": 1.0
  },
  "declaration or": {
    "a": 1.0
  },
  "method prototype": {
    "means": 0.5,
    "without": 0.5
  },
  "prototype means": {
    "that": 1.0
  },
  "method is": {
    "visible": 0.05555555555555555,
    "only": 0.05555555555555555,
    "declared": 0.05555555555555555,
    "a": 0.16666666666666666,
    "the": 0.05555555555555555,
    "calling": 0.05555555555555555,
    "actually": 0.05555555555555555,
    "operating": 0.05555555555555555,
    "automatically": 0.1111111111111111,
    "appropriate": 0.1111111111111111,
    "virtual": 0.05555555555555555,
    "going": 0.05555555555555555,
    "to": 0.05555555555555555,
    "fairly": 0.05555555555555555
  },
  "is visible": {
    "only": 1.0
  },
  "visible only": {
    "to": 0.75,
    "in": 0.25
  },
  "the other": {
    "methods": 0.1,
    "in": 0.1,
    "standard": 0.1,
    "objects": 0.1,
    "class": 0.1,
    "hand": 0.1,
    "user": 0.2,
    "users": 0.1,
    "portion": 0.1
  },
  "other methods": {
    "within": 1.0
  },
  "methods within": {
    "that": 1.0
  },
  "that class": {
    "this": 0.5,
    "i": 0.25,
    "what": 0.25
  },
  "class this": {
    "hides": 0.2,
    "means": 0.2,
    "allows": 0.2,
    "provides": 0.2,
    "only": 0.2
  },
  "this hides": {
    "them": 1.0
  },
  "hides them": {
    "from": 1.0
  },
  "them from": {
    "everything": 0.3333333333333333,
    "any": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "from everything": {
    "outside": 1.0
  },
  "everything outside": {
    "the": 1.0
  },
  "class without": {
    "the": 0.5,
    "knowing": 0.5
  },
  "are public": {
    "and": 0.6666666666666666,
    "unless": 0.3333333333333333
  },
  "public and": {
    "the": 0.2,
    "private": 0.4,
    "visible": 0.2,
    "protected": 0.2
  },
  "program can": {
    "access": 1.0
  },
  "can access": {
    "them": 1.0
  },
  "access them": {
    "whenever": 0.5,
    "in": 0.5
  },
  "them whenever": {
    "the": 1.0
  },
  "whenever the": {
    "object": 1.0
  },
  "object has": {
    "been": 0.5,
    "its": 0.5
  },
  "has been": {
    "instantiated": 0.14285714285714285,
    "overridden": 0.14285714285714285,
    "moved": 0.14285714285714285,
    "coded": 0.14285714285714285,
    "added": 0.14285714285714285,
    "changed": 0.14285714285714285,
    "enhanced": 0.14285714285714285
  },
  "been instantiated": {
    "and": 1.0
  },
  "scope program": {
    "myclass": 1.0
  },
  "program myclass": {
    "class": 1.0
  },
  "class myproperty": {
    "long": 1.0
  },
  "myproperty long": {
    "private": 0.6666666666666666,
    "protect": 0.3333333333333333
  },
  "long private": {
    "private": 0.6666666666666666,
    "declare": 0.3333333333333333
  },
  "private private": {
    "property": 0.3333333333333333,
    "method": 0.3333333333333333,
    "no": 0.3333333333333333
  },
  "property method": {
    "procedure": 1.0
  },
  "procedure mymethod": {
    "procedure": 1.0
  },
  "mymethod procedure": {
    "private": 1.0
  },
  "procedure private": {
    "private": 1.0
  },
  "private method": {
    "end": 0.6666666666666666,
    "procedure": 0.3333333333333333
  },
  "method end": {
    "code": 0.1111111111111111,
    "one": 0.1111111111111111,
    "this": 0.1111111111111111,
    "classref": 0.1111111111111111,
    "twoclass": 0.1111111111111111,
    "anotherclass": 0.1111111111111111,
    "mclass": 0.1111111111111111,
    "differentclass": 0.1111111111111111,
    "object1": 0.1111111111111111
  },
  "end code": {
    "myclass": 0.1,
    "classa": 0.2,
    "dutch": 0.1,
    "do": 0.1,
    "to": 0.1,
    "open": 0.4
  },
  "myclass mymethod": {
    "invalid": 1.0
  },
  "mymethod invalid": {
    "here": 1.0
  },
  "invalid here": {
    "myclass": 1.0
  },
  "here myclass": {
    "method": 0.6666666666666666,
    "myproperty": 0.3333333333333333
  },
  "myclass method": {
    "valid": 0.3333333333333333,
    "procedure": 0.3333333333333333,
    "code": 0.3333333333333333
  },
  "method valid": {
    "here": 0.5,
    "method": 0.5
  },
  "valid here": {
    "myclass": 0.3333333333333333,
    "self": 0.3333333333333333,
    "there": 0.3333333333333333
  },
  "myclass myproperty": {
    "10": 1.0
  },
  "myproperty 10": {
    "invalid": 0.75,
    "valid": 0.25
  },
  "10 invalid": {
    "here": 0.25,
    "not": 0.25,
    "out": 0.25,
    "object": 0.25
  },
  "procedure code": {
    "self": 0.6363636363636364,
    "message": 0.09090909090909091,
    "free": 0.09090909090909091,
    "using": 0.09090909090909091,
    "as": 0.09090909090909091
  },
  "self mymethod": {
    "valid": 1.0
  },
  "mymethod valid": {
    "here": 1.0
  },
  "here self": {
    "myproperty": 1.0
  },
  "self myproperty": {
    "10": 0.5,
    "1": 0.5
  },
  "10 valid": {
    "here": 1.0
  },
  "here there": {
    "s": 1.0
  },
  "there s": {
    "even": 0.2,
    "another": 0.2,
    "one": 0.4,
    "virtually": 0.2
  },
  "s even": {
    "more": 1.0
  },
  "even more": {
    "to": 0.3333333333333333,
    "about": 0.3333333333333333,
    "difficult": 0.3333333333333333
  },
  "more to": {
    "say": 0.5,
    "tell": 0.5
  },
  "say about": {
    "encapsulation": 1.0
  },
  "encapsulation and": {
    "public": 1.0
  },
  "and public": {
    "versus": 1.0
  },
  "public versus": {
    "private": 1.0
  },
  "versus private": {
    "stuff": 1.0
  },
  "private stuff": {
    "in": 1.0
  },
  "stuff in": {
    "clarion": 1.0
  },
  "clarion but": {
    "first": 1.0
  },
  "but first": {
    "we": 1.0
  },
  "first we": {
    "need": 1.0
  },
  "to introduce": {
    "another": 1.0
  },
  "introduce another": {
    "oop": 1.0
  },
  "another oop": {
    "concept": 1.0
  },
  "oop concept": {
    "clarion": 1.0
  },
  "concept clarion": {
    "language": 1.0
  },
  "guide 16": {
    "inheritance": 1.0
  },
  "16 inheritance": {
    "ok": 1.0
  },
  "inheritance ok": {
    "so": 1.0
  },
  "so far": {
    "we": 1.0
  },
  "far we": {
    "ve": 1.0
  },
  "ve learned": {
    "some": 1.0
  },
  "learned some": {
    "major": 1.0
  },
  "some major": {
    "oop": 1.0
  },
  "methods objects": {
    "encapsulation": 0.5,
    "instantiation": 0.5
  },
  "objects encapsulation": {
    "instantiation": 1.0
  },
  "encapsulation instantiation": {
    "constructors": 1.0
  },
  "instantiation constructors": {
    "and": 1.0
  },
  "destructors the": {
    "next": 1.0
  },
  "next one": {
    "is": 1.0
  },
  "one is": {
    "inheritance": 1.0
  },
  "is inheritance": {
    "you": 1.0
  },
  "inheritance you": {
    "all": 0.5,
    "will": 0.5
  },
  "you all": {
    "know": 1.0
  },
  "know what": {
    "inheritance": 0.5,
    "classes": 0.5
  },
  "what inheritance": {
    "is": 1.0
  },
  "inheritance is": {
    "don": 0.125,
    "where": 0.125,
    "closely": 0.125,
    "to": 0.125,
    "the": 0.125,
    "also": 0.125,
    "one": 0.125,
    "achieved": 0.125
  },
  "is don": {
    "t": 1.0
  },
  "don t": {
    "you": 0.1,
    "have": 0.1,
    "want": 0.1,
    "worry": 0.1,
    "get": 0.1,
    "exist": 0.1,
    "need": 0.1,
    "n": 0.1,
    "and": 0.1,
    "overwrite": 0.1
  },
  "t you": {
    "inheritance": 1.0
  },
  "you inheritance": {
    "is": 1.0
  },
  "is where": {
    "someone": 1.0
  },
  "where someone": {
    "dies": 1.0
  },
  "someone dies": {
    "and": 1.0
  },
  "dies and": {
    "leaves": 1.0
  },
  "and leaves": {
    "you": 1.0
  },
  "leaves you": {
    "a": 1.0
  },
  "you a": {
    "million": 1.0
  },
  "a million": {
    "dollars": 1.0
  },
  "million dollars": {
    "right": 1.0
  },
  "dollars right": {
    "well": 1.0
  },
  "right well": {
    "almost": 1.0
  },
  "well almost": {
    "inheritance": 1.0
  },
  "almost inheritance": {
    "is": 1.0
  },
  "is closely": {
    "coupled": 1.0
  },
  "closely coupled": {
    "to": 1.0
  },
  "coupled to": {
    "another": 1.0
  },
  "another common": {
    "oop": 1.0
  },
  "common oop": {
    "term": 0.5,
    "terms": 0.25,
    "technique": 0.25
  },
  "oop term": {
    "to": 0.5,
    "that": 0.5
  },
  "term to": {
    "derive": 1.0
  },
  "to derive": {
    "my": 0.25,
    "a": 0.25,
    "from": 0.5
  },
  "derive my": {
    "tr": 1.0
  },
  "my tr": {
    "usty": 1.0
  },
  "tr usty": {
    "oxford": 1.0
  },
  "usty oxford": {
    "english": 1.0
  },
  "defines derive": {
    "as": 1.0
  },
  "derive as": {
    "to": 1.0
  },
  "to convey": {
    "from": 1.0
  },
  "convey from": {
    "one": 1.0
  },
  "from one": {
    "treated": 0.25,
    "class": 0.5,
    "of": 0.25
  },
  "one treated": {
    "as": 1.0
  },
  "treated as": {
    "a": 1.0
  },
  "source to": {
    "another": 1.0
  },
  "another as": {
    "by": 1.0
  },
  "as by": {
    "transmission": 1.0
  },
  "by transmission": {
    "descent": 1.0
  },
  "transmission descent": {
    "etc": 1.0
  },
  "descent etc": {
    "to": 1.0
  },
  "etc to": {
    "transmit": 1.0
  },
  "to transmit": {
    "impart": 1.0
  },
  "transmit impart": {
    "communicate": 1.0
  },
  "impart communicate": {
    "pass": 1.0
  },
  "communicate pass": {
    "on": 1.0
  },
  "pass on": {
    "hand": 1.0
  },
  "on hand": {
    "on": 1.0
  },
  "hand on": {
    "to": 1.0
  },
  "on to": {
    "derive": 0.5,
    "the": 0.5
  },
  "derive a": {
    "new": 0.25,
    "class": 0.25,
    "bicycle": 0.25,
    "car": 0.25
  },
  "new class": {
    "you": 0.2,
    "statement": 0.2,
    "declaration": 0.2,
    "is": 0.2,
    "the": 0.2
  },
  "class you": {
    "simply": 0.5,
    "can": 0.5
  },
  "you simply": {
    "name": 0.3333333333333333,
    "place": 0.3333333333333333,
    "put": 0.3333333333333333
  },
  "simply name": {
    "the": 1.0
  },
  "name the": {
    "parent": 0.3333333333333333,
    "class": 0.6666666666666666
  },
  "the parent": {
    "class": 0.3888888888888889,
    "clas": 0.05555555555555555,
    "each": 0.05555555555555555,
    "and": 0.05555555555555555,
    "method": 0.05555555555555555,
    "record": 0.2777777777777778,
    "of": 0.05555555555555555,
    "re": 0.05555555555555555
  },
  "parent class": {
    "as": 0.05,
    "had": 0.05,
    "notice": 0.05,
    "which": 0.05,
    "it": 0.05,
    "there": 0.05,
    "method": 0.2,
    "and": 0.05,
    "has": 0.05,
    "constructor": 0.15,
    "properties": 0.05,
    "even": 0.05,
    "s": 0.05,
    "methods": 0.1
  },
  "class as": {
    "the": 0.75,
    "a": 0.25
  },
  "the par": {
    "ameter": 0.5,
    "ent": 0.5
  },
  "par ameter": {
    "to": 1.0
  },
  "ameter to": {
    "the": 1.0
  },
  "class statement": {
    "and": 0.2,
    "meaning": 0.2,
    "names": 0.4,
    "specifies": 0.2
  },
  "declaration starts": {
    "out": 1.0
  },
  "starts out": {
    "with": 1.0
  },
  "out with": {
    "everything": 1.0
  },
  "with everything": {
    "the": 1.0
  },
  "everything the": {
    "parent": 1.0
  },
  "class had": {
    "the": 1.0
  },
  "had the": {
    "difference": 1.0
  },
  "the difference": {
    "here": 0.5,
    "between": 0.5
  },
  "difference here": {
    "is": 1.0
  },
  "oop no": {
    "one": 1.0
  },
  "no one": {
    "has": 0.5,
    "else": 0.5
  },
  "one has": {
    "to": 1.0
  },
  "to die": {
    "for": 1.0
  },
  "die for": {
    "the": 1.0
  },
  "the child": {
    "to": 0.16666666666666666,
    "file": 0.3333333333333333,
    "records": 0.3333333333333333,
    "record": 0.16666666666666666
  },
  "child to": {
    "inherit": 1.0
  },
  "to inherit": {
    "this": 1.0
  },
  "inherit this": {
    "brings": 1.0
  },
  "this brings": {
    "up": 1.0
  },
  "brings up": {
    "a": 1.0
  },
  "up a": {
    "couple": 0.5,
    "buffer": 0.5
  },
  "a couple": {
    "more": 1.0
  },
  "couple more": {
    "common": 1.0
  },
  "more common": {
    "oop": 1.0
  },
  "oop terms": {
    "base": 0.5,
    "properties": 0.5
  },
  "terms base": {
    "class": 1.0
  },
  "base class": {
    "and": 0.06349206349206349,
    "is": 0.015873015873015872,
    "it": 0.031746031746031744,
    "or": 0.015873015873015872,
    "property": 0.047619047619047616,
    "derived": 0.015873015873015872,
    "would": 0.015873015873015872,
    "apple": 0.015873015873015872,
    "apples": 0.015873015873015872,
    "flavor": 0.015873015873015872,
    "constructors": 0.015873015873015872,
    "destructor": 0.06349206349206349,
    "because": 0.015873015873015872,
    "preparepie": 0.031746031746031744,
    "including": 0.015873015873015872,
    "code": 0.047619047619047616,
    "tells": 0.015873015873015872,
    "this": 0.015873015873015872,
    "method": 0.14285714285714285,
    "without": 0.015873015873015872,
    "methods": 0.047619047619047616,
    "being": 0.015873015873015872,
    "can": 0.015873015873015872,
    "while": 0.015873015873015872,
    "to": 0.031746031746031744,
    "call": 0.015873015873015872,
    "the": 0.015873015873015872,
    "as": 0.015873015873015872,
    "propertya": 0.015873015873015872,
    "inheriting": 0.015873015873015872,
    "constructor": 0.031746031746031744,
    "objectq": 0.015873015873015872,
    "construct": 0.015873015873015872,
    "from": 0.015873015873015872,
    "virtual": 0.015873015873015872,
    "definition": 0.015873015873015872,
    "by": 0.015873015873015872,
    "constituents": 0.015873015873015872,
    "16": 0.015873015873015872
  },
  "and derived": {
    "classes": 0.6,
    "class": 0.4
  },
  "classes a": {
    "base": 0.3333333333333333,
    "derived": 0.3333333333333333,
    "class": 0.3333333333333333
  },
  "a base": {
    "class": 1.0
  },
  "class is": {
    "a": 0.2,
    "call": 0.2,
    "named": 0.2,
    "derived": 0.4
  },
  "class which": {
    "has": 0.25,
    "could": 0.25,
    "declares": 0.25,
    "contains": 0.25
  },
  "which has": {
    "no": 0.3333333333333333,
    "never": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "has no": {
    "parameter": 0.5,
    "user": 0.5
  },
  "no parameter": {
    "to": 1.0
  },
  "to its": {
    "class": 0.3333333333333333,
    "parent": 0.3333333333333333,
    "original": 0.3333333333333333
  },
  "its class": {
    "statement": 1.0
  },
  "statement meaning": {
    "it": 1.0
  },
  "meaning it": {
    "doesn": 1.0
  },
  "t inherit": {
    "anything": 1.0
  },
  "inherit anything": {
    "while": 1.0
  },
  "anything while": {
    "a": 1.0
  },
  "while a": {
    "derived": 1.0
  },
  "a derived": {
    "class": 0.95,
    "object": 0.05
  },
  "derived class": {
    "always": 0.024096385542168676,
    "statement": 0.024096385542168676,
    "this": 0.024096385542168676,
    "method": 0.060240963855421686,
    "aproperty": 0.03614457831325301,
    "inherits": 0.060240963855421686,
    "methods": 0.060240963855421686,
    "woul": 0.012048192771084338,
    "might": 0.03614457831325301,
    "crumbletop": 0.012048192771084338,
    "topcrust": 0.012048192771084338,
    "carameltop": 0.012048192771084338,
    "exactly": 0.012048192771084338,
    "if": 0.012048192771084338,
    "therefore": 0.024096385542168676,
    "full": 0.012048192771084338,
    "also": 0.012048192771084338,
    "construct": 0.03614457831325301,
    "constructors": 0.024096385542168676,
    "destructor": 0.03614457831325301,
    "before": 0.012048192771084338,
    "s": 0.024096385542168676,
    "structure": 0.04819277108433735,
    "and": 0.012048192771084338,
    "object": 0.012048192771084338,
    "can": 0.024096385542168676,
    "is": 0.012048192771084338,
    "the": 0.024096385542168676,
    "must": 0.012048192771084338,
    "with": 0.024096385542168676,
    "exists": 0.012048192771084338,
    "being": 0.012048192771084338,
    "for": 0.024096385542168676,
    "contains": 0.012048192771084338,
    "may": 0.024096385542168676,
    "does": 0.024096385542168676,
    "to": 0.024096385542168676,
    "someclass": 0.012048192771084338,
    "constructor": 0.04819277108433735,
    "has": 0.012048192771084338,
    "usually": 0.012048192771084338,
    "declaration": 0.012048192771084338,
    "using": 0.012048192771084338,
    "16": 0.012048192771084338
  },
  "class always": {
    "has": 0.5,
    "exec": 0.5
  },
  "always has": {
    "a": 1.0
  },
  "parameter naming": {
    "its": 1.0
  },
  "naming its": {
    "parent": 1.0
  },
  "its parent": {
    "class": 0.625,
    "clas": 0.125,
    "because": 0.125,
    "inheritance": 0.125
  },
  "class notice": {
    "that": 1.0
  },
  "that i": {
    "did": 1.0
  },
  "i did": {
    "n": 1.0
  },
  "did n": {
    "ot": 1.0
  },
  "n ot": {
    "say": 1.0
  },
  "ot say": {
    "that": 1.0
  },
  "the parameter": {
    "to": 0.5,
    "lists": 0.5
  },
  "the derived": {
    "class": 0.9117647058823529,
    "clas": 0.029411764705882353,
    "classes": 0.029411764705882353,
    "object": 0.029411764705882353
  },
  "statement names": {
    "a": 0.5,
    "its": 0.5
  },
  "names a": {
    "base": 1.0
  },
  "class it": {
    "doesn": 0.2,
    "also": 0.4,
    "kno": 0.2,
    "never": 0.2
  },
  "t the": {
    "parameter": 1.0
  },
  "names its": {
    "parent": 1.0
  },
  "which could": {
    "be": 1.0
  },
  "a either": {
    "base": 1.0
  },
  "either base": {
    "class": 1.0
  },
  "class or": {
    "another": 1.0
  },
  "or another": {
    "derived": 1.0
  },
  "another derived": {
    "class": 1.0
  },
  "multiple generations": {
    "of": 1.0
  },
  "generations of": {
    "inheritance": 1.0
  },
  "of inheritance": {
    "program": 1.0
  },
  "inheritance program": {
    "myclass": 1.0
  },
  "declare base": {
    "class": 0.8571428571428571,
    "method": 0.14285714285714285
  },
  "long myproperty": {
    "long": 1.0
  },
  "private no": {
    "access": 1.0
  },
  "no access": {
    "in": 1.0
  },
  "access in": {
    "derived": 1.0
  },
  "in derived": {
    "class": 0.25,
    "classes": 0.75
  },
  "class method": {
    "procedure": 0.05,
    "you": 0.05,
    "or": 0.05,
    "that": 0.1,
    "well": 0.05,
    "to": 0.1,
    "applepie": 0.05,
    "can": 0.1,
    "from": 0.1,
    "s": 0.1,
    "does": 0.15,
    "however": 0.05,
    "myroutine": 0.05
  },
  "classa class": {
    "myclass": 1.0
  },
  "class myclass": {
    "declare": 1.0
  },
  "declare derived": {
    "class": 1.0
  },
  "class aproperty": {
    "long": 1.0
  },
  "aproperty long": {
    "which": 0.3333333333333333,
    "amethod": 0.3333333333333333,
    "construct": 0.3333333333333333
  },
  "long which": {
    "inherits": 1.0
  },
  "which inherits": {
    "amethod": 1.0
  },
  "inherits amethod": {
    "procedure": 1.0
  },
  "amethod procedure": {
    "myclass": 0.3333333333333333,
    "end": 0.3333333333333333,
    "code": 0.3333333333333333
  },
  "myclass property": {
    "and": 1.0
  },
  "and end": {
    "myclass": 1.0
  },
  "end myclass": {
    "method": 0.5,
    "class": 0.5
  },
  "method code": {
    "classa": 0.3333333333333333,
    "message": 0.6666666666666666
  },
  "code classa": {
    "method": 0.3333333333333333,
    "myproperty": 0.3333333333333333,
    "instantiation": 0.3333333333333333
  },
  "classa method": {
    "valid": 1.0
  },
  "valid method": {
    "call": 1.0
  },
  "method call": {
    "classa": 0.25,
    "because": 0.25,
    "up": 0.25,
    "like": 0.25
  },
  "call classa": {
    "myproperty": 1.0
  },
  "classa myproperty": {
    "10": 1.0
  },
  "invalid not": {
    "accessible": 1.0
  },
  "not accessible": {
    "outside": 0.5,
    "by": 0.5
  },
  "accessible outside": {
    "myclass": 1.0
  },
  "outside myclass": {
    "myclass": 1.0
  },
  "myclass myclass": {
    "amethod": 1.0
  },
  "myclass amethod": {
    "invalid": 1.0
  },
  "amethod invalid": {
    "inheritance": 1.0
  },
  "invalid inheritance": {
    "only": 1.0
  },
  "inheritance only": {
    "is": 1.0
  },
  "only is": {
    "one": 1.0
  },
  "one way": {
    "so": 0.5,
    "there": 0.5
  },
  "way so": {
    "back": 1.0
  },
  "so back": {
    "to": 1.0
  },
  "to inheritance": {
    "a": 1.0
  },
  "inheritance a": {
    "derived": 1.0
  },
  "class inherits": {
    "all": 0.4,
    "it": 0.2,
    "the": 0.2,
    "properties": 0.2
  },
  "inherits all": {
    "the": 1.0
  },
  "the public": {
    "properties": 0.5,
    "and": 0.5
  },
  "public properties": {
    "and": 1.0
  },
  "also inherits": {
    "private": 1.0
  },
  "inherits private": {
    "properties": 1.0
  },
  "private properties": {
    "and": 0.6666666666666666,
    "of": 0.3333333333333333
  },
  "methods but": {
    "cannot": 1.0
  },
  "but cannot": {
    "access": 1.0
  },
  "cannot access": {
    "them": 1.0
  },
  "any of": {
    "th": 0.3333333333333333,
    "these": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "of th": {
    "e": 1.0
  },
  "e derived": {
    "class": 1.0
  },
  "methods because": {
    "they": 1.0
  },
  "because they": {
    "are": 1.0
  },
  "are truly": {
    "the": 1.0
  },
  "truly the": {
    "private": 1.0
  },
  "property of": {
    "the": 0.25,
    "your": 0.25,
    "a": 0.5
  },
  "declares them": {
    "what": 1.0
  },
  "them what": {
    "this": 1.0
  },
  "what this": {
    "all": 1.0
  },
  "this all": {
    "means": 1.0
  },
  "all means": {
    "is": 1.0
  },
  "means is": {
    "that": 1.0
  },
  "that when": {
    "you": 0.5,
    "the": 0.5
  },
  "you derive": {
    "a": 1.0
  },
  "a parent": {
    "class": 0.5555555555555556,
    "and": 0.2222222222222222,
    "child": 0.1111111111111111,
    "record": 0.1111111111111111
  },
  "class there": {
    "is": 0.5,
    "are": 0.5
  },
  "no need": {
    "to": 0.3333333333333333,
    "for": 0.6666666666666666
  },
  "to duplicate": {
    "all": 1.0
  },
  "duplicate all": {
    "the": 1.0
  },
  "the functionality": {
    "already": 0.5,
    "of": 0.5
  },
  "functionality already": {
    "in": 1.0
  },
  "already in": {
    "the": 1.0
  },
  "parent clas": {
    "s": 1.0
  },
  "clas s": {
    "because": 0.3333333333333333,
    "constructor": 0.3333333333333333,
    "that": 0.3333333333333333
  },
  "s because": {
    "the": 1.0
  },
  "because the": {
    "derived": 0.1111111111111111,
    "actual": 0.1111111111111111,
    "original": 0.1111111111111111,
    "cascade": 0.2222222222222222,
    "second": 0.1111111111111111,
    "record": 0.1111111111111111,
    "join": 0.1111111111111111,
    "sql": 0.1111111111111111
  },
  "inherits it": {
    "all": 1.0
  },
  "it all": {
    "so": 0.5,
    "works": 0.5
  },
  "all so": {
    "why": 0.5,
    "you": 0.5
  },
  "so why": {
    "derive": 0.5,
    "is": 0.5
  },
  "why derive": {
    "at": 1.0
  },
  "derive at": {
    "all": 1.0
  },
  "at all": {
    "so": 0.16666666666666666,
    "to": 0.3333333333333333,
    "what": 0.16666666666666666,
    "it": 0.16666666666666666,
    "the": 0.16666666666666666
  },
  "can re": {
    "use": 1.0
  },
  "use your": {
    "code": 1.0
  },
  "your code": {
    "and": 0.6666666666666666,
    "were": 0.3333333333333333
  },
  "and maintain": {
    "it": 1.0
  },
  "maintain it": {
    "in": 1.0
  },
  "it in": {
    "only": 0.16666666666666666,
    "a": 0.3333333333333333,
    "the": 0.16666666666666666,
    "others": 0.16666666666666666,
    "more": 0.16666666666666666
  },
  "in only": {
    "one": 1.0
  },
  "only one": {
    "place": 0.2,
    "more": 0.2,
    "foreign": 0.2,
    "clarion": 0.2,
    "portion": 0.2
  },
  "one place": {
    "because": 1.0
  },
  "place because": {
    "when": 1.0
  },
  "because when": {
    "properly": 1.0
  },
  "when properly": {
    "designed": 1.0
  },
  "properly designed": {
    "a": 0.5,
    "the": 0.5
  },
  "designed a": {
    "set": 1.0
  },
  "of classes": {
    "has": 0.2,
    "the": 0.2,
    "goes": 0.2,
    "a": 0.2,
    "derived": 0.2
  },
  "classes has": {
    "all": 1.0
  },
  "has all": {
    "the": 1.0
  },
  "common properties": {
    "and": 0.6666666666666666,
    "of": 0.3333333333333333
  },
  "methods for": {
    "objects": 0.3333333333333333,
    "each": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "for objects": {
    "of": 1.0
  },
  "objects of": {
    "the": 1.0
  },
  "same or": {
    "v": 1.0
  },
  "or v": {
    "ery": 1.0
  },
  "v ery": {
    "similar": 1.0
  },
  "ery similar": {
    "type": 1.0
  },
  "similar type": {
    "declared": 1.0
  },
  "type declared": {
    "in": 1.0
  },
  "the base": {
    "class": 0.9655172413793104,
    "and": 0.034482758620689655
  },
  "class derived": {
    "classes": 0.25,
    "from": 0.75
  },
  "classes then": {
    "only": 1.0
  },
  "then only": {
    "need": 1.0
  },
  "methods which": {
    "differentiate": 0.5,
    "you": 0.5
  },
  "which differentiate": {
    "them": 1.0
  },
  "differentiate them": {
    "from": 1.0
  },
  "from any": {
    "other": 0.5,
    "access": 0.5
  },
  "any other": {
    "classes": 0.1,
    "non": 0.1,
    "procedures": 0.1,
    "error": 0.3,
    "user": 0.1,
    "users": 0.1,
    "way": 0.1,
    "clarion": 0.1
  },
  "other classes": {
    "that": 0.2,
    "derived": 0.2,
    "someclass": 0.2,
    "not": 0.2,
    "within": 0.2
  },
  "classes that": {
    "might": 0.2,
    "you": 0.2,
    "have": 0.2,
    "fully": 0.2,
    "don": 0.2
  },
  "that might": {
    "be": 1.0
  },
  "might be": {
    "derived": 1.0
  },
  "be derived": {
    "from": 1.0
  },
  "same parent": {
    "as": 0.5,
    "an": 0.5
  },
  "parent as": {
    "easy": 1.0
  },
  "pie one": {
    "example": 1.0
  },
  "one example": {
    "of": 1.0
  },
  "example of": {
    "this": 0.2857142857142857,
    "well": 0.14285714285714285,
    "how": 0.42857142857142855,
    "a": 0.14285714285714285
  },
  "of d": {
    "esign": 1.0
  },
  "d esign": {
    "would": 1.0
  },
  "esign would": {
    "be": 1.0
  },
  "would be": {
    "designing": 0.05263157894736842,
    "useful": 0.05263157894736842,
    "wrong": 0.05263157894736842,
    "to": 0.15789473684210525,
    "very": 0.05263157894736842,
    "duplicated": 0.05263157894736842,
    "a": 0.05263157894736842,
    "added": 0.05263157894736842,
    "the": 0.10526315789473684,
    "too": 0.05263157894736842,
    "appropriate": 0.05263157894736842,
    "overwritten": 0.05263157894736842,
    "changed": 0.05263157894736842,
    "why": 0.05263157894736842,
    "held": 0.05263157894736842,
    "specific": 0.05263157894736842
  },
  "be designing": {
    "classes": 1.0
  },
  "designing classes": {
    "for": 1.0
  },
  "classes for": {
    "apple": 1.0
  },
  "for apple": {
    "pies": 1.0
  },
  "apple pies": {
    "the": 0.5,
    "such": 0.25,
    "for": 0.25
  },
  "pies the": {
    "base": 0.5,
    "derived": 0.5
  },
  "class would": {
    "contain": 1.0
  },
  "would contain": {
    "all": 0.5,
    "code": 0.5
  },
  "contain all": {
    "the": 1.0
  },
  "the standard": {
    "properties": 0.5,
    "tool": 0.5
  },
  "standard properties": {
    "common": 1.0
  },
  "properties common": {
    "to": 1.0
  },
  "common to": {
    "all": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "all apple": {
    "pies": 1.0
  },
  "pies such": {
    "as": 1.0
  },
  "such as": {
    "apple": 0.1,
    "the": 0.1,
    "copying": 0.1,
    "lotus": 0.1,
    "downsizing": 0.1,
    "oracle": 0.2,
    "c": 0.1,
    "deleting": 0.1,
    "an": 0.1
  },
  "apple and": {
    "crust": 1.0
  },
  "and crust": {
    "properties": 1.0
  },
  "crust properties": {
    "and": 1.0
  },
  "a bake": {
    "method": 1.0
  },
  "bake method": {
    "however": 1.0
  },
  "method however": {
    "for": 0.5,
    "the": 0.5
  },
  "however for": {
    "the": 1.0
  },
  "the individual": {
    "types": 0.25,
    "object": 0.25,
    "differences": 0.25,
    "foreign": 0.25
  },
  "individual types": {
    "of": 1.0
  },
  "of apple": {
    "pies": 0.6666666666666666,
    "pie": 0.3333333333333333
  },
  "class woul": {
    "d": 1.0
  },
  "woul d": {
    "contain": 0.5,
    "be": 0.5
  },
  "d contain": {
    "the": 1.0
  },
  "contain the": {
    "differences": 0.5,
    "data": 0.5
  },
  "the differences": {
    "between": 1.0
  },
  "differences between": {
    "the": 0.5,
    "classes": 0.5
  },
  "various varieties": {
    "of": 1.0
  },
  "varieties of": {
    "apple": 1.0
  },
  "pies for": {
    "example": 1.0
  },
  "the dutch": {
    "applepie": 0.2857142857142857,
    "object": 0.2857142857142857,
    "preparepie": 0.14285714285714285,
    "derived": 0.14285714285714285,
    "createcrust": 0.14285714285714285
  },
  "dutch applepie": {
    "derived": 0.5,
    "class": 0.5
  },
  "applepie derived": {
    "class": 1.0
  },
  "class might": {
    "contain": 1.0
  },
  "might contain": {
    "a": 1.0
  },
  "a crumbletop": {
    "property": 1.0
  },
  "crumbletop property": {
    "the": 1.0
  },
  "property the": {
    "traditional": 1.0
  },
  "the traditional": {
    "american": 1.0
  },
  "traditional american": {
    "applepie": 1.0
  },
  "american applepie": {
    "derived": 1.0
  },
  "a topcrust": {
    "property": 1.0
  },
  "topcrust property": {
    "and": 1.0
  },
  "the grandmas": {
    "a": 1.0
  },
  "grandmas a": {
    "pplepie": 1.0
  },
  "a pplepie": {
    "derived": 1.0
  },
  "pplepie derived": {
    "class": 1.0
  },
  "a carameltop": {
    "property": 1.0
  },
  "carameltop property": {
    "program": 1.0
  },
  "property program": {
    "applepie": 1.0
  },
  "program applepie": {
    "class": 1.0
  },
  "applepie class": {
    "type": 0.5,
    "ty": 0.25,
    "notice": 0.25
  },
  "class apple": {
    "string": 1.0
  },
  "apple string": {
    "20": 1.0
  },
  "string 20": {
    "crust": 0.2,
    "17": 0.1,
    "end": 0.3,
    "bake": 0.2,
    "scoop": 0.1,
    "createque": 0.1
  },
  "20 crust": {
    "string": 1.0
  },
  "crust string": {
    "20": 1.0
  },
  "20 17": {
    "easing": 1.0
  },
  "17 easing": {
    "into": 1.0
  },
  "oop bake": {
    "procedure": 1.0
  },
  "bake procedure": {
    "end": 0.6666666666666666,
    "overridden": 0.3333333333333333
  },
  "end dutch": {
    "class": 1.0
  },
  "dutch class": {
    "applepie": 1.0
  },
  "class applepie": {
    "declare": 0.6,
    "composition": 0.2,
    "createcrust": 0.2
  },
  "applepie declare": {
    "derived": 1.0
  },
  "class crumbletop": {
    "string": 1.0
  },
  "crumbletop string": {
    "20": 1.0
  },
  "20 end": {
    "american": 0.3333333333333333,
    "grandmas": 0.3333333333333333,
    "someclass": 0.3333333333333333
  },
  "end american": {
    "class": 1.0
  },
  "american class": {
    "applepie": 1.0
  },
  "class topcrust": {
    "string": 1.0
  },
  "topcrust string": {
    "20": 1.0
  },
  "end grandmas": {
    "class": 1.0
  },
  "grandmas class": {
    "applepie": 1.0
  },
  "class carameltop": {
    "string": 1.0
  },
  "carameltop string": {
    "20": 1.0
  },
  "20 bake": {
    "procedure": 1.0
  },
  "procedure overridden": {
    "method": 1.0
  },
  "overridden method": {
    "end": 1.0
  },
  "end one": {
    "other": 1.0
  },
  "one other": {
    "thing": 1.0
  },
  "other thing": {
    "that": 1.0
  },
  "thing that": {
    "you": 1.0
  },
  "can do": {
    "using": 0.5,
    "without": 0.5
  },
  "do using": {
    "inheritance": 1.0
  },
  "using inheritance": {
    "is": 1.0
  },
  "to override": {
    "the": 0.75,
    "an": 0.25
  },
  "override the": {
    "methods": 0.1111111111111111,
    "method": 0.2222222222222222,
    "parent": 0.1111111111111111,
    "constructor": 0.2222222222222222,
    "inherited": 0.3333333333333333
  },
  "methods by": {
    "giving": 0.5,
    "re": 0.5
  },
  "by giving": {
    "a": 1.0
  },
  "giving a": {
    "method": 1.0
  },
  "class exactly": {
    "the": 1.0
  },
  "exactly the": {
    "same": 1.0
  },
  "same prototype": {
    "name": 0.5,
    "in": 0.5
  },
  "prototype name": {
    "parameter": 1.0
  },
  "name parameter": {
    "list": 1.0
  },
  "list and": {
    "any": 1.0
  },
  "any return": {
    "data": 1.0
  },
  "return data": {
    "type": 1.0
  },
  "method you": {
    "override": 0.3333333333333333,
    "are": 0.3333333333333333,
    "use": 0.3333333333333333
  },
  "you override": {
    "the": 1.0
  },
  "to provide": {
    "slightly": 0.3333333333333333,
    "a": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "provide slightly": {
    "different": 1.0
  },
  "slightly different": {
    "functionality": 0.5,
    "algorithm": 0.5
  },
  "different functionality": {
    "in": 1.0
  },
  "functionality in": {
    "a": 0.5,
    "the": 0.5
  },
  "class if": {
    "you": 1.0
  },
  "to multiple": {
    "inheritance": 0.6,
    "order": 0.2,
    "records": 0.2
  },
  "you will": {
    "notice": 0.25,
    "have": 0.25,
    "mostly": 0.25,
    "only": 0.25
  },
  "will notice": {
    "that": 1.0
  },
  "that clarion": {
    "s": 1.0
  },
  "s inheritance": {
    "syntax": 1.0
  },
  "inheritance syntax": {
    "only": 1.0
  },
  "syntax only": {
    "allows": 1.0
  },
  "only allows": {
    "you": 0.3333333333333333,
    "exclusive": 0.3333333333333333,
    "each": 0.3333333333333333
  },
  "derive from": {
    "a": 0.3333333333333333,
    "those": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "a singl": {
    "e": 1.0
  },
  "singl e": {
    "parent": 1.0
  },
  "e parent": {
    "this": 1.0
  },
  "parent this": {
    "is": 1.0
  },
  "called single": {
    "inheritance": 1.0
  },
  "single inheritance": {
    "there": 0.25,
    "means": 0.25,
    "some": 0.25,
    "like": 0.25
  },
  "inheritance there": {
    "is": 0.5,
    "s": 0.5
  },
  "is such": {
    "a": 1.0
  },
  "a thing": {
    "as": 1.0
  },
  "thing as": {
    "multiple": 1.0
  },
  "as multiple": {
    "inheritance": 1.0
  },
  "inheritance in": {
    "oop": 1.0
  },
  "oop theory": {
    "but": 1.0
  },
  "theory but": {
    "you": 1.0
  },
  "but you": {
    "can": 1.0
  },
  "can thank": {
    "us": 1.0
  },
  "thank us": {
    "for": 1.0
  },
  "us for": {
    "not": 1.0
  },
  "for not": {
    "giving": 1.0
  },
  "not giving": {
    "it": 0.5,
    "you": 0.5
  },
  "giving it": {
    "to": 1.0
  },
  "it to": {
    "you": 0.125,
    "be": 0.125,
    "which": 0.125,
    "handle": 0.125,
    "directly": 0.125,
    "a": 0.125,
    "utilize": 0.125,
    "null": 0.125
  },
  "you by": {
    "not": 0.5,
    "the": 0.5
  },
  "by not": {
    "giving": 1.0
  },
  "giving you": {
    "multiple": 1.0
  },
  "you multiple": {
    "inheritance": 1.0
  },
  "s another": {
    "ten": 1.0
  },
  "another ten": {
    "dollar": 1.0
  },
  "dollar buzzword": {
    "that": 1.0
  },
  "buzzword that": {
    "you": 1.0
  },
  "you do": {
    "not": 0.4,
    "want": 0.2,
    "when": 0.4
  },
  "not have": {
    "to": 0.4,
    "this": 0.4,
    "a": 0.2
  },
  "to le": {
    "arn": 1.0
  },
  "le arn": {
    "anything": 1.0
  },
  "arn anything": {
    "about": 1.0
  },
  "anything about": {
    "disambiguate": 0.5,
    "it": 0.5
  },
  "about disambiguate": {
    "since": 1.0
  },
  "disambiguate since": {
    "you": 1.0
  },
  "since you": {
    "don": 1.0
  },
  "you don": {
    "t": 1.0
  },
  "know anything": {
    "about": 1.0
  },
  "about it": {
    "i": 0.5,
    "it": 0.5
  },
  "it i": {
    "m": 0.5,
    "s": 0.5
  },
  "m not": {
    "going": 1.0
  },
  "not going": {
    "to": 1.0
  },
  "to define": {
    "it": 1.0
  },
  "define it": {
    "for": 1.0
  },
  "those cases": {
    "where": 1.0
  },
  "cases where": {
    "multiple": 1.0
  },
  "where multiple": {
    "inheritance": 1.0
  },
  "inheritance would": {
    "be": 1.0
  },
  "be useful": {
    "there": 1.0
  },
  "useful there": {
    "is": 1.0
  },
  "an oop": {
    "technique": 1.0
  },
  "oop technique": {
    "called": 0.5,
    "late": 0.25,
    "known": 0.25
  },
  "technique called": {
    "composition": 0.3333333333333333,
    "local": 0.3333333333333333,
    "composit": 0.3333333333333333
  },
  "called composition": {
    "which": 1.0
  },
  "composition which": {
    "gives": 0.5,
    "provides": 0.5
  },
  "which gives": {
    "you": 0.5,
    "it": 0.5
  },
  "gives you": {
    "the": 0.6666666666666666,
    "recursive": 0.3333333333333333
  },
  "you the": {
    "benefits": 0.25,
    "advan": 0.25,
    "clarion": 0.25,
    "real": 0.25
  },
  "the benefits": {
    "of": 1.0
  },
  "benefits of": {
    "multiple": 1.0
  },
  "inheritance without": {
    "requiring": 0.5,
    "the": 0.5
  },
  "without requiring": {
    "you": 0.5,
    "that": 0.5
  },
  "requiring you": {
    "to": 1.0
  },
  "to disambiguate": {
    "anything": 0.5,
    "the": 0.5
  },
  "disambiguate anything": {
    "composition": 1.0
  },
  "anything composition": {
    "the": 1.0
  },
  "composition the": {
    "composition": 1.0
  },
  "the composition": {
    "technique": 1.0
  },
  "composition technique": {
    "simply": 1.0
  },
  "technique simply": {
    "means": 0.5,
    "overriding": 0.5
  },
  "simply means": {
    "inheriting": 1.0
  },
  "means inheriting": {
    "from": 1.0
  },
  "inheriting from": {
    "one": 1.0
  },
  "one class": {
    "and": 0.16666666666666666,
    "ontheside": 0.16666666666666666,
    "declaration": 0.16666666666666666,
    "structure": 0.16666666666666666,
    "within": 0.16666666666666666,
    "from": 0.16666666666666666
  },
  "and also": {
    "declaring": 0.25,
    "contains": 0.25,
    "offers": 0.25,
    "any": 0.25
  },
  "also declaring": {
    "a": 1.0
  },
  "declaring a": {
    "reference": 1.0
  },
  "another object": {
    "as": 0.6666666666666666,
    "this": 0.3333333333333333
  },
  "object as": {
    "a": 1.0
  },
  "your derived": {
    "class": 1.0
  },
  "class therefore": {
    "your": 0.5,
    "automatic": 0.5
  },
  "therefore your": {
    "derived": 1.0
  },
  "inherits the": {
    "properties": 0.5,
    "methods": 0.5
  },
  "methods from": {
    "its": 0.3333333333333333,
    "other": 0.3333333333333333,
    "several": 0.3333333333333333
  },
  "from its": {
    "parent": 0.6666666666666666,
    "base": 0.3333333333333333
  },
  "also contains": {
    "a": 0.3333333333333333,
    "its": 0.3333333333333333,
    "one": 0.3333333333333333
  },
  "second object": {
    "and": 1.0
  },
  "and implicitly": {
    "all": 1.0
  },
  "implicitly all": {
    "its": 1.0
  },
  "all its": {
    "properties": 1.0
  },
  "its properties": {
    "and": 1.0
  },
  "methods instead": {
    "of": 1.0
  },
  "of inheriting": {
    "them": 1.0
  },
  "inheriting them": {
    "this": 1.0
  },
  "this gives": {
    "the": 0.5,
    "you": 0.5
  },
  "gives the": {
    "derived": 1.0
  },
  "class full": {
    "and": 1.0
  },
  "full and": {
    "complete": 1.0
  },
  "and complete": {
    "ac": 1.0
  },
  "complete ac": {
    "cess": 1.0
  },
  "ac cess": {
    "to": 1.0
  },
  "cess to": {
    "all": 0.5,
    "databases": 0.5
  },
  "the inherited": {
    "properties": 0.14285714285714285,
    "parent": 0.14285714285714285,
    "move": 0.14285714285714285,
    "data": 0.14285714285714285,
    "method": 0.42857142857142855
  },
  "inherited properties": {
    "and": 0.5,
    "would": 0.5
  },
  "the referenced": {
    "object": 1.0
  },
  "referenced object": {
    "it": 1.0
  },
  "object it": {
    "contains": 0.5,
    "is": 0.5
  },
  "it contains": {
    "the": 0.5,
    "two": 0.5
  },
  "the abc": {
    "library": 0.6666666666666666,
    "templates": 0.3333333333333333
  },
  "abc library": {
    "classes": 0.3333333333333333,
    "is": 0.3333333333333333,
    "all": 0.3333333333333333
  },
  "library classes": {
    "use": 1.0
  },
  "classes use": {
    "composition": 1.0
  },
  "use composition": {
    "in": 1.0
  },
  "composition in": {
    "several": 0.5,
    "clarion": 0.5
  },
  "in several": {
    "places": 0.5,
    "different": 0.5
  },
  "several places": {
    "where": 1.0
  },
  "places where": {
    "it": 1.0
  },
  "where it": {
    "s": 0.5,
    "determined": 0.5
  },
  "s appropriate": {
    "to": 1.0
  },
  "appropriate to": {
    "them": 0.125,
    "what": 0.125,
    "the": 0.5,
    "a": 0.125,
    "have": 0.125
  },
  "to them": {
    "program": 0.5,
    "then": 0.5
  },
  "them program": {
    "applepie": 1.0
  },
  "class ty": {
    "pe": 1.0
  },
  "ty pe": {
    "declare": 1.0
  },
  "pe declare": {
    "base": 1.0
  },
  "class apples": {
    "string": 1.0
  },
  "apples string": {
    "20": 1.0
  },
  "end icecream": {
    "class": 1.0
  },
  "icecream class": {
    "type": 1.0
  },
  "class flavor": {
    "string": 1.0
  },
  "flavor string": {
    "20": 1.0
  },
  "20 scoop": {
    "procedure": 1.0
  },
  "scoop procedure": {
    "end": 1.0
  },
  "end alamode": {
    "class": 1.0
  },
  "alamode class": {
    "applepie": 1.0
  },
  "applepie composition": {
    "der": 1.0
  },
  "composition der": {
    "ive": 1.0
  },
  "der ive": {
    "from": 1.0
  },
  "ive from": {
    "one": 1.0
  },
  "class ontheside": {
    "icecream": 1.0
  },
  "ontheside icecream": {
    "and": 1.0
  },
  "icecream and": {
    "contain": 1.0
  },
  "to serve": {
    "procedure": 0.5,
    "some": 0.5
  },
  "serve procedure": {
    "an": 1.0
  },
  "of another": {
    "class": 0.3333333333333333,
    "object": 0.16666666666666666,
    "related": 0.16666666666666666,
    "file": 0.16666666666666666,
    "child": 0.16666666666666666
  },
  "another class": {
    "end": 0.5,
    "s": 0.5
  },
  "class end": {
    "clarion": 1.0
  },
  "end clarion": {
    "language": 1.0
  },
  "guide 18": {
    "and": 1.0
  },
  "and even": {
    "more": 1.0
  },
  "encapsulation in": {
    "addition": 1.0
  },
  "to public": {
    "and": 1.0
  },
  "and private": {
    "properties": 0.5,
    "protected": 0.5
  },
  "methods there": {
    "are": 1.0
  },
  "also protected": {
    "properties": 1.0
  },
  "protected properties": {
    "and": 1.0
  },
  "methods you": {
    "recall": 1.0
  },
  "attribute means": {
    "that": 1.0
  },
  "is only": {
    "visible": 0.25,
    "allowed": 0.5,
    "one": 0.25
  },
  "class in": {
    "which": 0.5714285714285714,
    "college": 0.14285714285714285,
    "the": 0.2857142857142857
  },
  "is declared": {
    "and": 0.3333333333333333,
    "or": 0.3333333333333333,
    "to": 0.3333333333333333
  },
  "declared and": {
    "is": 1.0
  },
  "accessible by": {
    "any": 1.0
  },
  "by any": {
    "de": 0.3333333333333333,
    "derived": 0.3333333333333333,
    "application": 0.3333333333333333
  },
  "any de": {
    "rived": 1.0
  },
  "de rived": {
    "class": 1.0
  },
  "rived class": {
    "and": 1.0
  },
  "and without": {
    "the": 1.0
  },
  "and visible": {
    "and": 1.0
  },
  "visible and": {
    "available": 1.0
  },
  "and available": {
    "to": 0.25,
    "inside": 0.25,
    "for": 0.5
  },
  "any code": {
    "whether": 0.5,
    "outside": 0.5
  },
  "code whether": {
    "that": 1.0
  },
  "whether that": {
    "code": 1.0
  },
  "that code": {
    "is": 0.25,
    "that": 0.25,
    "into": 0.25,
    "will": 0.25
  },
  "method or": {
    "not": 0.5,
    "the": 0.5
  },
  "or not": {
    "well": 0.14285714285714285,
    "the": 0.2857142857142857,
    "for": 0.2857142857142857,
    "there": 0.14285714285714285,
    "process": 0.14285714285714285
  },
  "not well": {
    "sometimes": 1.0
  },
  "well sometimes": {
    "you": 1.0
  },
  "sometimes you": {
    "don": 0.5,
    "only": 0.5
  },
  "t want": {
    "either": 1.0
  },
  "want either": {
    "private": 1.0
  },
  "either private": {
    "or": 1.0
  },
  "private or": {
    "public": 0.3333333333333333,
    "p": 0.3333333333333333,
    "protected": 0.3333333333333333
  },
  "or public": {
    "sometimes": 1.0
  },
  "public sometimes": {
    "you": 1.0
  },
  "only want": {
    "a": 1.0
  },
  "method to": {
    "be": 0.125,
    "repeat": 0.125,
    "the": 0.125,
    "call": 0.25,
    "steer": 0.125,
    "provide": 0.125,
    "instantiate": 0.125
  },
  "be available": {
    "within": 1.0
  },
  "available within": {
    "the": 1.0
  },
  "declared or": {
    "any": 1.0
  },
  "or any": {
    "class": 0.6666666666666666,
    "other": 0.3333333333333333
  },
  "any class": {
    "derived": 1.0
  },
  "from it": {
    "that": 0.5,
    "to": 0.5
  },
  "it that": {
    "s": 0.5,
    "separate": 0.5
  },
  "s what": {
    "the": 1.0
  },
  "the protected": {
    "attribute": 0.75,
    "properties": 0.25
  },
  "protected attribute": {
    "is": 0.5,
    "specifies": 0.25,
    "inheritance": 0.25
  },
  "attribute is": {
    "for": 0.2,
    "to": 0.4,
    "specified": 0.4
  },
  "is for": {
    "program": 0.5,
    "example": 0.5
  },
  "for program": {
    "myclass": 1.0
  },
  "long protect": {
    "ed": 1.0
  },
  "protect ed": {
    "semi": 1.0
  },
  "ed semi": {
    "private": 1.0
  },
  "semi private": {
    "method": 0.5,
    "19": 0.5
  },
  "long amethod": {
    "procedure": 1.0
  },
  "invalid out": {
    "of": 1.0
  },
  "of method": {
    "classa": 1.0
  },
  "method classa": {
    "amethod": 1.0
  },
  "classa amethod": {
    "procedure": 1.0
  },
  "myproperty 1": {
    "valid": 1.0
  },
  "1 valid": {
    "within": 1.0
  },
  "valid within": {
    "method": 1.0
  },
  "within method": {
    "private": 1.0
  },
  "method private": {
    "properties": 1.0
  },
  "methods cannot": {
    "be": 1.0
  },
  "cannot be": {
    "accessed": 0.25,
    "resolved": 0.25,
    "directly": 0.25,
    "allowed": 0.25
  },
  "accessed by": {
    "derived": 1.0
  },
  "by derived": {
    "classes": 1.0
  },
  "classes but": {
    "protected": 0.5,
    "not": 0.5
  },
  "but protected": {
    "properties": 1.0
  },
  "methods can": {
    "be": 0.2,
    "cause": 0.2,
    "act": 0.2,
    "execute": 0.2,
    "call": 0.2
  },
  "be protected": {
    "properties": 1.0
  },
  "not visible": {
    "outside": 1.0
  },
  "visible outside": {
    "the": 1.0
  },
  "class within": {
    "which": 0.5,
    "another": 0.5
  },
  "from that": {
    "class": 0.75,
    "file": 0.25
  },
  "class i": {
    "d": 1.0
  },
  "i d": {
    "guess": 1.0
  },
  "d guess": {
    "this": 1.0
  },
  "guess this": {
    "makes": 1.0
  },
  "makes the": {
    "protected": 0.5,
    "join": 0.5
  },
  "methods sort": {
    "of": 1.0
  },
  "sort of": {
    "semi": 0.5,
    "re": 0.5
  },
  "of semi": {
    "private": 1.0
  },
  "private 19": {
    "easing": 1.0
  },
  "19 easing": {
    "into": 1.0
  },
  "and while": {
    "we": 1.0
  },
  "while we": {
    "re": 1.0
  },
  "re going": {
    "backwards": 1.0
  },
  "going backwards": {
    "remember": 1.0
  },
  "backwards remember": {
    "a": 1.0
  },
  "remember a": {
    "while": 1.0
  },
  "a while": {
    "back": 1.0
  },
  "while back": {
    "i": 1.0
  },
  "back i": {
    "said": 1.0
  },
  "i said": {
    "there": 1.0
  },
  "said there": {
    "was": 1.0
  },
  "there was": {
    "more": 1.0
  },
  "was more": {
    "to": 1.0
  },
  "to tell": {
    "you": 1.0
  },
  "tell you": {
    "about": 1.0
  },
  "you about": {
    "automatic": 0.3333333333333333,
    "inheritance": 0.3333333333333333,
    "this": 0.3333333333333333
  },
  "destructors well": {
    "now": 1.0
  },
  "well now": {
    "s": 1.0
  },
  "now s": {
    "a": 1.0
  },
  "a good": {
    "time": 0.5,
    "idea": 0.5
  },
  "good time": {
    "to": 1.0
  },
  "time to": {
    "tell": 0.3333333333333333,
    "a": 0.3333333333333333,
    "time": 0.3333333333333333
  },
  "about inheritance": {
    "and": 1.0
  },
  "inheritance and": {
    "how": 0.25,
    "polymorphism": 0.75
  },
  "how it": {
    "affects": 0.3333333333333333,
    "all": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "it affects": {
    "automatic": 1.0
  },
  "affects automatic": {
    "constructors": 1.0
  },
  "destructors what": {
    "happens": 1.0
  },
  "happens when": {
    "a": 1.0
  },
  "class has": {
    "a": 0.5,
    "on": 0.5
  },
  "a construct": {
    "method": 1.0
  },
  "method and": {
    "the": 0.16666666666666666,
    "know": 0.16666666666666666,
    "at": 0.16666666666666666,
    "connected": 0.16666666666666666,
    "name": 0.16666666666666666,
    "calls": 0.16666666666666666
  },
  "class also": {
    "needs": 0.5,
    "called": 0.5
  },
  "also needs": {
    "one": 1.0
  },
  "needs one": {
    "we": 1.0
  },
  "one we": {
    "already": 1.0
  },
  "we already": {
    "talked": 1.0
  },
  "already talked": {
    "about": 1.0
  },
  "talked about": {
    "overriding": 1.0
  },
  "about overriding": {
    "methods": 1.0
  },
  "overriding methods": {
    "in": 1.0
  },
  "methods in": {
    "derived": 0.2727272727272727,
    "clarion": 0.18181818181818182,
    "a": 0.2727272727272727,
    "other": 0.09090909090909091,
    "this": 0.09090909090909091,
    "two": 0.09090909090909091
  },
  "classes so": {
    "you": 1.0
  },
  "might guess": {
    "that": 1.0
  },
  "guess that": {
    "the": 1.0
  },
  "class construct": {
    "method": 0.5,
    "procedure": 0.25,
    "or": 0.25
  },
  "method would": {
    "simply": 1.0
  },
  "would simply": {
    "override": 1.0
  },
  "simply override": {
    "the": 1.0
  },
  "that guess": {
    "would": 1.0
  },
  "guess would": {
    "be": 1.0
  },
  "be wrong": {
    "of": 1.0
  },
  "wrong of": {
    "course": 1.0
  },
  "of course": {
    "so": 0.14285714285714285,
    "both": 0.14285714285714285,
    "there": 0.14285714285714285,
    "it": 0.14285714285714285,
    "the": 0.14285714285714285,
    "if": 0.14285714285714285,
    "which": 0.14285714285714285
  },
  "course so": {
    "why": 1.0
  },
  "is it": {
    "wrong": 1.0
  },
  "it wrong": {
    "because": 1.0
  },
  "wrong because": {
    "overriding": 1.0
  },
  "because overriding": {
    "the": 1.0
  },
  "overriding the": {
    "parent": 1.0
  },
  "class constructor": {
    "might": 0.1111111111111111,
    "executes": 0.3333333333333333,
    "automatically": 0.1111111111111111,
    "first": 0.1111111111111111,
    "dispose": 0.1111111111111111,
    "code": 0.1111111111111111,
    "mystring": 0.1111111111111111
  },
  "constructor might": {
    "mean": 1.0
  },
  "might mean": {
    "that": 1.0
  },
  "mean that": {
    "code": 0.3333333333333333,
    "you": 0.6666666666666666
  },
  "code that": {
    "s": 0.16666666666666666,
    "executes": 0.16666666666666666,
    "is": 0.16666666666666666,
    "resolves": 0.16666666666666666,
    "cascades": 0.16666666666666666,
    "tests": 0.16666666666666666
  },
  "s required": {
    "to": 1.0
  },
  "required to": {
    "initialize": 0.5,
    "write": 0.5
  },
  "initialize inherited": {
    "properties": 1.0
  },
  "properties would": {
    "not": 1.0
  },
  "would not": {
    "execute": 0.16666666666666666,
    "have": 0.16666666666666666,
    "read": 0.16666666666666666,
    "need": 0.16666666666666666,
    "be": 0.16666666666666666,
    "normally": 0.16666666666666666
  },
  "not execute": {
    "if": 1.0
  },
  "execute if": {
    "the": 1.0
  },
  "inherited parent": {
    "class": 1.0
  },
  "properties were": {
    "not": 1.0
  },
  "were not": {
    "properly": 0.5,
    "a": 0.5
  },
  "not properly": {
    "initialized": 1.0
  },
  "properly initialized": {
    "you": 1.0
  },
  "initialized you": {
    "might": 1.0
  },
  "might end": {
    "up": 1.0
  },
  "with une": {
    "xpected": 1.0
  },
  "une xpected": {
    "behavior": 1.0
  },
  "xpected behavior": {
    "in": 1.0
  },
  "behavior in": {
    "your": 1.0
  },
  "therefore automatic": {
    "constructors": 1.0
  },
  "constructors are": {
    "not": 1.0
  },
  "not automatically": {
    "overridden": 0.4,
    "destroyed": 0.2,
    "mean": 0.2,
    "call": 0.2
  },
  "automatically overridden": {
    "instead": 0.5,
    "in": 0.5
  },
  "overridden instead": {
    "by": 1.0
  },
  "instead by": {
    "default": 1.0
  },
  "by default": {
    "they": 0.3333333333333333,
    "in": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "default they": {
    "all": 1.0
  },
  "all execute": {
    "in": 1.0
  },
  "execute in": {
    "order": 0.5,
    "the": 0.5
  },
  "in order": {
    "when": 0.5,
    "random": 0.5
  },
  "order when": {
    "the": 1.0
  },
  "instantiated first": {
    "the": 1.0
  },
  "first the": {
    "parent": 1.0
  },
  "constructor executes": {
    "then": 0.2,
    "they": 0.2,
    "the": 0.2,
    "when": 0.2,
    "and": 0.2
  },
  "executes then": {
    "the": 1.0
  },
  "derived clas": {
    "s": 1.0
  },
  "s constructor": {
    "executes": 1.0
  },
  "executes they": {
    "execute": 1.0
  },
  "they execute": {
    "in": 1.0
  },
  "the order": {
    "of": 0.1111111111111111,
    "in": 0.05555555555555555,
    "file": 0.4444444444444444,
    "this": 0.05555555555555555,
    "number": 0.1111111111111111,
    "record": 0.05555555555555555,
    "is": 0.05555555555555555,
    "and": 0.05555555555555555,
    "attribute": 0.05555555555555555
  },
  "order of": {
    "their": 0.2857142857142857,
    "your": 0.14285714285714285,
    "the": 0.42857142857142855,
    "course": 0.14285714285714285
  },
  "their derivation": {
    "base": 1.0
  },
  "derivation base": {
    "class": 1.0
  },
  "class constructors": {
    "always": 0.3333333333333333,
    "in": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "constructors always": {
    "execute": 1.0
  },
  "always execute": {
    "first": 1.0
  },
  "execute first": {
    "followed": 1.0
  },
  "first followed": {
    "by": 1.0
  },
  "followed by": {
    "any": 1.0
  },
  "any derived": {
    "class": 0.5,
    "classes": 0.5
  },
  "order in": {
    "which": 1.0
  },
  "they were": {
    "derived": 1.0
  },
  "were derived": {
    "the": 1.0
  },
  "derived the": {
    "constructor": 0.5,
    "reverse": 0.5
  },
  "constructor for": {
    "the": 1.0
  },
  "most derived": {
    "class": 1.0
  },
  "always exec": {
    "utes": 1.0
  },
  "exec utes": {
    "last": 1.0
  },
  "utes last": {
    "the": 1.0
  },
  "last the": {
    "same": 1.0
  },
  "same reasoning": {
    "is": 1.0
  },
  "reasoning is": {
    "true": 1.0
  },
  "true for": {
    "automatic": 1.0
  },
  "for automatic": {
    "destructors": 1.0
  },
  "destructors except": {
    "the": 1.0
  },
  "except the": {
    "order": 0.5,
    "odbc": 0.5
  },
  "their execution": {
    "is": 1.0
  },
  "execution is": {
    "reversed": 1.0
  },
  "is reversed": {
    "the": 1.0
  },
  "reversed the": {
    "most": 1.0
  },
  "class destructor": {
    "automatically": 0.2857142857142857,
    "executes": 0.2857142857142857,
    "last": 0.14285714285714285,
    "someclass": 0.14285714285714285,
    "code": 0.14285714285714285
  },
  "destructor automatically": {
    "executes": 0.5,
    "calls": 0.5
  },
  "automatically executes": {
    "first": 1.0
  },
  "executes first": {
    "when": 1.0
  },
  "first when": {
    "the": 1.0
  },
  "destroyed and": {
    "on": 0.5,
    "may": 0.5
  },
  "and on": {
    "down": 1.0
  },
  "on down": {
    "the": 1.0
  },
  "down the": {
    "chain": 1.0
  },
  "the chain": {
    "of": 1.0
  },
  "chain of": {
    "derivation": 1.0
  },
  "of derivation": {
    "until": 0.5,
    "to": 0.5
  },
  "derivation until": {
    "the": 1.0
  },
  "until the": {
    "base": 1.0
  },
  "destructor executes": {
    "last": 0.3333333333333333,
    "when": 0.3333333333333333,
    "if": 0.3333333333333333
  },
  "executes last": {
    "in": 1.0
  },
  "last in": {
    "other": 0.5,
    "first": 0.5
  },
  "words lifo": {
    "last": 1.0
  },
  "lifo last": {
    "in": 1.0
  },
  "in first": {
    "out": 1.0
  },
  "first out": {
    "this": 1.0
  },
  "out this": {
    "is": 1.0
  },
  "all pretty": {
    "standard": 1.0
  },
  "standard the": {
    "way": 1.0
  },
  "way automatic": {
    "constructors": 1.0
  },
  "destructors work": {
    "by": 1.0
  },
  "work by": {
    "default": 1.0
  },
  "default in": {
    "the": 1.0
  },
  "language is": {
    "the": 1.0
  },
  "same way": {
    "they": 1.0
  },
  "way they": {
    "work": 1.0
  },
  "they work": {
    "in": 1.0
  },
  "work in": {
    "most": 1.0
  },
  "in most": {
    "other": 0.3333333333333333,
    "cases": 0.3333333333333333,
    "sql": 0.3333333333333333
  },
  "most other": {
    "oop": 1.0
  },
  "languages however": {
    "cl": 1.0
  },
  "however cl": {
    "arion": 1.0
  },
  "cl arion": {
    "does": 1.0
  },
  "arion does": {
    "give": 1.0
  },
  "does give": {
    "you": 1.0
  },
  "give you": {
    "some": 1.0
  },
  "you some": {
    "flexibility": 1.0
  },
  "some flexibility": {
    "that": 1.0
  },
  "flexibility that": {
    "some": 1.0
  },
  "some other": {
    "oop": 0.3333333333333333,
    "common": 0.16666666666666666,
    "advantages": 0.16666666666666666,
    "file": 0.16666666666666666,
    "user": 0.16666666666666666
  },
  "languages do": {
    "not": 1.0
  },
  "not i": {
    "told": 1.0
  },
  "i told": {
    "you": 1.0
  },
  "told you": {
    "that": 1.0
  },
  "you that": {
    "automatic": 1.0
  },
  "that automatic": {
    "constructors": 1.0
  },
  "destructors are": {
    "not": 0.5,
    "a": 0.5
  },
  "overridden in": {
    "clarion": 0.5,
    "the": 0.5
  },
  "clarion the": {
    "key": 0.3333333333333333,
    "entire": 0.3333333333333333,
    "properties": 0.3333333333333333
  },
  "key word": {
    "here": 1.0
  },
  "word here": {
    "is": 1.0
  },
  "automatically you": {
    "can": 1.0
  },
  "can override": {
    "them": 0.5,
    "inherited": 0.5
  },
  "override them": {
    "in": 0.5,
    "but": 0.5
  },
  "clarion if": {
    "you": 1.0
  },
  "you wan": {
    "t": 1.0
  },
  "wan t": {
    "to": 1.0
  },
  "t to": {
    "something": 1.0
  },
  "to something": {
    "you": 1.0
  },
  "something you": {
    "can": 1.0
  },
  "can t": {
    "do": 1.0
  },
  "t do": {
    "in": 1.0
  },
  "do in": {
    "some": 1.0
  },
  "languages if": {
    "you": 1.0
  },
  "add the": {
    "replace": 0.25,
    "properties": 0.25,
    "first": 0.25,
    "changed": 0.25
  },
  "the replace": {
    "attribute": 0.8333333333333334,
    "attribu": 0.16666666666666666
  },
  "replace attribute": {
    "to": 0.2,
    "on": 0.4,
    "is": 0.2,
    "a": 0.2
  },
  "attribute to": {
    "the": 0.6666666666666666,
    "allow": 0.3333333333333333
  },
  "your construct": {
    "or": 1.0
  },
  "construct or": {
    "destruct": 0.5,
    "parent": 0.3333333333333333,
    "loop": 0.16666666666666666
  },
  "or destruct": {
    "method": 1.0
  },
  "you are": {
    "telling": 0.125,
    "asking": 0.125,
    "overloading": 0.125,
    "going": 0.125,
    "writing": 0.125,
    "using": 0.125,
    "dealing": 0.125,
    "covered": 0.125
  },
  "are telling": {
    "the": 1.0
  },
  "telling the": {
    "compiler": 1.0
  },
  "compiler that": {
    "you": 1.0
  },
  "do want": {
    "to": 1.0
  },
  "want to": {
    "override": 0.25,
    "tell": 0.25,
    "deal": 0.25,
    "extend": 0.25
  },
  "what does": {
    "that": 1.0
  },
  "that buy": {
    "you": 1.0
  },
  "buy you": {
    "suppose": 1.0
  },
  "you suppose": {
    "tha": 1.0
  },
  "suppose tha": {
    "t": 1.0
  },
  "tha t": {
    "for": 0.5,
    "don": 0.5
  },
  "t for": {
    "some": 1.0
  },
  "for some": {
    "reason": 0.3333333333333333,
    "speci": 0.3333333333333333,
    "kind": 0.3333333333333333
  },
  "some reason": {
    "you": 1.0
  },
  "reason you": {
    "need": 1.0
  },
  "initialize a": {
    "variable": 1.0
  },
  "variable in": {
    "your": 0.5,
    "the": 0.5
  },
  "class before": {
    "the": 1.0
  },
  "before the": {
    "parent": 0.2,
    "derived": 0.2,
    "loop": 0.2,
    "first": 0.2,
    "build": 0.2
  },
  "the only": {
    "way": 0.2,
    "purpose": 0.2,
    "difference": 0.2,
    "network": 0.2,
    "four": 0.2
  },
  "only way": {
    "to": 1.0
  },
  "simply place": {
    "the": 1.0
  },
  "place the": {
    "replace": 0.5,
    "reference": 0.5
  },
  "prototype then": {
    "write": 0.3333333333333333,
    "in": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "then write": {
    "your": 1.0
  },
  "write your": {
    "code": 0.3333333333333333,
    "embed": 0.3333333333333333,
    "applications": 0.3333333333333333
  },
  "ll ask": {
    "what": 1.0
  },
  "ask what": {
    "about": 1.0
  },
  "what about": {
    "your": 1.0
  },
  "about your": {
    "great": 1.0
  },
  "your great": {
    "argument": 1.0
  },
  "great argument": {
    "against": 1.0
  },
  "argument against": {
    "automatically": 1.0
  },
  "against automatically": {
    "overriding": 1.0
  },
  "automatically overriding": {
    "constructors": 1.0
  },
  "overriding constructors": {
    "and": 1.0
  },
  "destructors have": {
    "you": 1.0
  },
  "have you": {
    "forgotten": 1.0
  },
  "you forgotten": {
    "that": 1.0
  },
  "forgotten that": {
    "the": 1.0
  },
  "the argument": {
    "against": 1.0
  },
  "destructors is": {
    "still": 1.0
  },
  "is still": {
    "valid": 0.25,
    "the": 0.25,
    "needed": 0.25,
    "examining": 0.25
  },
  "still valid": {
    "and": 1.0
  },
  "valid and": {
    "needs": 1.0
  },
  "and needs": {
    "to": 1.0
  },
  "needs to": {
    "be": 0.25,
    "resolve": 0.125,
    "store": 0.125,
    "go": 0.125,
    "null": 0.125,
    "know": 0.125,
    "perform": 0.125
  },
  "be considered": {
    "carefully": 1.0
  },
  "considered carefully": {
    "when": 1.0
  },
  "carefully when": {
    "you": 1.0
  },
  "you decide": {
    "to": 1.0
  },
  "decide to": {
    "explicitly": 1.0
  },
  "explicitly override": {
    "them": 1.0
  },
  "them but": {
    "we": 1.0
  },
  "but we": {
    "have": 1.0
  },
  "we have": {
    "thought": 0.3333333333333333,
    "two": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "have thought": {
    "of": 1.0
  },
  "that parent": {
    "you": 1.0
  },
  "parent you": {
    "recall": 1.0
  },
  "to reference": {
    "the": 0.3333333333333333,
    "in": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "reference the": {
    "current": 0.5,
    "primary": 0.5
  },
  "object within": {
    "a": 1.0
  },
  "use self": {
    "instead": 1.0
  },
  "self instead": {
    "of": 1.0
  },
  "the objec": {
    "t": 1.0
  },
  "objec t": {
    "name": 1.0
  },
  "t name": {
    "well": 1.0
  },
  "name well": {
    "we": 1.0
  },
  "well we": {
    "ve": 1.0
  },
  "ve provided": {
    "another": 1.0
  },
  "provided another": {
    "tool": 1.0
  },
  "another tool": {
    "in": 1.0
  },
  "tool in": {
    "clarion": 1.0
  },
  "oop syntax": {
    "that": 1.0
  },
  "syntax that": {
    "allows": 1.0
  },
  "that allows": {
    "you": 0.6666666666666666,
    "us": 0.3333333333333333
  },
  "method from": {
    "a": 0.2,
    "one": 0.2,
    "other": 0.2,
    "within": 0.2,
    "the": 0.2
  },
  "class even": {
    "when": 1.0
  },
  "even when": {
    "you": 0.5,
    "the": 0.5
  },
  "you ve": {
    "overridden": 0.2,
    "gotten": 0.2,
    "probably": 0.2,
    "now": 0.2,
    "also": 0.2
  },
  "ve overridden": {
    "that": 1.0
  },
  "overridden that": {
    "method": 1.0
  },
  "method prepending": {
    "parent": 1.0
  },
  "prepending parent": {
    "to": 1.0
  },
  "parent to": {
    "the": 1.0
  },
  "method name": {
    "explicitly": 1.0
  },
  "name explicitly": {
    "calls": 1.0
  },
  "explicitly calls": {
    "the": 1.0
  },
  "class s": {
    "method": 0.25,
    "code": 0.25,
    "createcrust": 0.25,
    "properties": 0.25
  },
  "s method": {
    "even": 0.5,
    "anotherclass": 0.5
  },
  "method even": {
    "though": 1.0
  },
  "even though": {
    "it": 1.0
  },
  "though it": {
    "has": 1.0
  },
  "been overridden": {
    "this": 1.0
  },
  "overridden this": {
    "technique": 1.0
  },
  "this technique": {
    "holds": 0.25,
    "simply": 0.25,
    "the": 0.25,
    "grossly": 0.25
  },
  "technique holds": {
    "true": 1.0
  },
  "holds true": {
    "not": 1.0
  },
  "true not": {
    "only": 1.0
  },
  "not only": {
    "for": 1.0
  },
  "only for": {
    "constructors": 1.0
  },
  "for constructors": {
    "and": 1.0
  },
  "destructors but": {
    "also": 1.0
  },
  "but also": {
    "for": 1.0
  },
  "also for": {
    "any": 1.0
  },
  "for any": {
    "overridden": 0.16666666666666666,
    "kind": 0.16666666666666666,
    "requested": 0.16666666666666666,
    "sql": 0.16666666666666666,
    "particular": 0.16666666666666666,
    "field": 0.16666666666666666
  },
  "any overridden": {
    "methods": 1.0
  },
  "overridden methods": {
    "program": 1.0
  },
  "methods program": {
    "myclass": 1.0
  },
  "long construct": {
    "procedure": 1.0
  },
  "procedure replace": {
    "end": 0.5,
    "override": 0.5
  },
  "replace end": {
    "code": 1.0
  },
  "classa instantiation": {
    "here": 1.0
  },
  "instantiation here": {
    "clarion": 1.0
  },
  "here clarion": {
    "language": 1.0
  },
  "guide 20": {
    "classa": 1.0
  },
  "20 classa": {
    "construct": 1.0
  },
  "classa construct": {
    "procedure": 1.0
  },
  "self aproperty": {
    "1": 1.0
  },
  "aproperty 1": {
    "initialize": 1.0
  },
  "1 initialize": {
    "then": 1.0
  },
  "initialize then": {
    "call": 1.0
  },
  "then call": {
    "parent": 1.0
  },
  "call parent": {
    "construct": 1.0
  },
  "parent construct": {
    "parent": 0.3333333333333333,
    "or": 0.3333333333333333,
    "call": 0.3333333333333333
  },
  "construct parent": {
    "constructor": 1.0
  },
  "parent constructor": {
    "therefore": 1.0
  },
  "constructor therefore": {
    "when": 1.0
  },
  "therefore when": {
    "you": 1.0
  },
  "explicitly control": {
    "the": 1.0
  },
  "control the": {
    "execution": 1.0
  },
  "the execution": {
    "order": 1.0
  },
  "execution order": {
    "of": 1.0
  },
  "your constructors": {
    "or": 1.0
  },
  "constructors or": {
    "destructors": 1.0
  },
  "or destructors": {
    "you": 0.5,
    "without": 0.5
  },
  "destructors you": {
    "simply": 1.0
  },
  "simply put": {
    "the": 1.0
  },
  "put the": {
    "replace": 0.25,
    "record": 0.75
  },
  "then in": {
    "your": 1.0
  },
  "your constructor": {
    "or": 1.0
  },
  "constructor or": {
    "destructor": 1.0
  },
  "or destructor": {
    "method": 1.0
  },
  "destructor method": {
    "s": 0.5,
    "end": 0.25,
    "someclass": 0.25
  },
  "s cod": {
    "e": 1.0
  },
  "e directly": {
    "call": 1.0
  },
  "directly call": {
    "parent": 1.0
  },
  "or parent": {
    "destruct": 1.0
  },
  "parent destruct": {
    "at": 0.5,
    "this": 0.5
  },
  "destruct at": {
    "the": 1.0
  },
  "the exact": {
    "point": 0.3333333333333333,
    "same": 0.3333333333333333,
    "error": 0.3333333333333333
  },
  "exact point": {
    "within": 1.0
  },
  "point within": {
    "your": 1.0
  },
  "within your": {
    "logic": 1.0
  },
  "your logic": {
    "that": 1.0
  },
  "logic that": {
    "is": 1.0
  },
  "is most": {
    "appropriate": 0.25,
    "often": 0.25,
    "commonly": 0.5
  },
  "most appropriate": {
    "to": 0.5,
    "way": 0.5
  },
  "to what": {
    "you": 0.3333333333333333,
    "other": 0.3333333333333333,
    "values": 0.3333333333333333
  },
  "be before": {
    "after": 1.0
  },
  "before after": {
    "or": 1.0
  },
  "after or": {
    "in": 1.0
  },
  "or in": {
    "the": 1.0
  },
  "the middle": {
    "of": 0.5,
    "man": 0.5
  },
  "middle of": {
    "your": 1.0
  },
  "code wherever": {
    "you": 1.0
  },
  "wherever you": {
    "need": 1.0
  },
  "be polymorphism": {
    "ok": 1.0
  },
  "polymorphism ok": {
    "there": 0.5,
    "right": 0.5
  },
  "ok there": {
    "s": 1.0
  },
  "s one": {
    "last": 0.3333333333333333,
    "more": 0.3333333333333333,
    "specific": 0.3333333333333333
  },
  "one last": {
    "really": 1.0
  },
  "last really": {
    "major": 1.0
  },
  "really major": {
    "oop": 1.0
  },
  "buzzword you": {
    "have": 1.0
  },
  "to learn": {
    "polymorphism": 0.3333333333333333,
    "disambiguate": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "learn polymorphism": {
    "this": 1.0
  },
  "polymorphism this": {
    "is": 1.0
  },
  "a really": {
    "big": 1.0
  },
  "really big": {
    "one": 1.0
  },
  "big one": {
    "and": 1.0
  },
  "one and": {
    "it": 0.3333333333333333,
    "many": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "key that": {
    "makes": 1.0
  },
  "that makes": {
    "object": 1.0
  },
  "makes object": {
    "oriented": 1.0
  },
  "so powerful": {
    "so": 1.0
  },
  "powerful so": {
    "let": 1.0
  },
  "so let": {
    "s": 1.0
  },
  "start with": {
    "the": 1.0
  },
  "dictionary definitio": {
    "n": 1.0
  },
  "definitio n": {
    "of": 1.0
  },
  "n of": {
    "polymorphism": 1.0
  },
  "of polymorphism": {
    "the": 0.16666666666666666,
    "for": 0.16666666666666666,
    "ok": 0.16666666666666666,
    "is": 0.3333333333333333,
    "virtual": 0.16666666666666666
  },
  "polymorphism the": {
    "condition": 0.3333333333333333,
    "clarion": 0.3333333333333333,
    "class": 0.3333333333333333
  },
  "the condition": {
    "or": 1.0
  },
  "condition or": {
    "character": 1.0
  },
  "or character": {
    "of": 1.0
  },
  "character of": {
    "being": 1.0
  },
  "of being": {
    "polymorphous": 1.0
  },
  "being polymorphous": {
    "the": 1.0
  },
  "polymorphous the": {
    "occurrence": 1.0
  },
  "the occurrence": {
    "of": 1.0
  },
  "occurrence of": {
    "something": 1.0
  },
  "of something": {
    "in": 1.0
  },
  "something in": {
    "several": 1.0
  },
  "several different": {
    "forms": 1.0
  },
  "different forms": {
    "now": 1.0
  },
  "forms now": {
    "the": 1.0
  },
  "now the": {
    "clarion": 1.0
  },
  "language has": {
    "had": 0.3333333333333333,
    "the": 0.3333333333333333,
    "been": 0.3333333333333333
  },
  "has had": {
    "some": 0.5,
    "these": 0.5
  },
  "had some": {
    "forms": 1.0
  },
  "some forms": {
    "of": 1.0
  },
  "forms of": {
    "polymorphism": 0.2,
    "the": 0.4,
    "set": 0.2,
    "deadly": 0.2
  },
  "polymorphism for": {
    "a": 1.0
  },
  "a long": {
    "time": 0.5,
    "and": 0.5
  },
  "long time": {
    "already": 1.0
  },
  "time already": {
    "for": 1.0
  },
  "already for": {
    "example": 1.0
  },
  "the and": {
    "parameter": 1.0
  },
  "and parameter": {
    "types": 1.0
  },
  "parameter types": {
    "whic": 1.0
  },
  "types whic": {
    "h": 1.0
  },
  "whic h": {
    "indicate": 0.3333333333333333,
    "returns": 0.3333333333333333,
    "interface": 0.3333333333333333
  },
  "h indicate": {
    "an": 1.0
  },
  "indicate an": {
    "unknown": 1.0
  },
  "an unknown": {
    "data": 1.0
  },
  "unknown data": {
    "type": 1.0
  },
  "type for": {
    "parameter": 1.0
  },
  "for parameter": {
    "passing": 1.0
  },
  "parameter passing": {
    "allow": 1.0
  },
  "passing allow": {
    "you": 1.0
  },
  "allow you": {
    "to": 1.0
  },
  "to write": {
    "polymorphic": 0.08333333333333333,
    "your": 0.16666666666666666,
    "applications": 0.16666666666666666,
    "to": 0.16666666666666666,
    "his": 0.08333333333333333,
    "the": 0.08333333333333333,
    "efficient": 0.08333333333333333,
    "sql": 0.08333333333333333,
    "a": 0.08333333333333333
  },
  "write polymorphic": {
    "procedures": 1.0
  },
  "polymorphic procedures": {
    "clarion": 1.0
  },
  "procedures clarion": {
    "has": 1.0
  },
  "clarion has": {
    "had": 1.0
  },
  "had these": {
    "since": 1.0
  },
  "these since": {
    "the": 1.0
  },
  "since the": {
    "dos": 0.2,
    "base": 0.2,
    "clarion": 0.2,
    "database": 0.2,
    "file": 0.2
  },
  "the dos": {
    "days": 0.5,
    "access": 0.5
  },
  "dos days": {
    "in": 1.0
  },
  "days in": {
    "clarion": 1.0
  },
  "clarion for": {
    "windows": 1.0
  },
  "for windows": {
    "version": 0.5,
    "product": 0.5
  },
  "windows version": {
    "2": 1.0
  },
  "version 2": {
    "0": 1.0
  },
  "2 0": {
    "we": 1.0
  },
  "0 we": {
    "introduced": 1.0
  },
  "we introduced": {
    "procedure": 1.0
  },
  "introduced procedure": {
    "overloading": 1.0
  },
  "procedure overloading": {
    "which": 0.2,
    "is": 0.2,
    "in": 0.2,
    "permits": 0.2,
    "20": 0.2
  },
  "overloading which": {
    "allows": 1.0
  },
  "allows yo": {
    "u": 1.0
  },
  "yo u": {
    "to": 1.0
  },
  "u to": {
    "create": 1.0
  },
  "to create": {
    "multiple": 0.1,
    "its": 0.1,
    "an": 0.2,
    "derived": 0.1,
    "the": 0.1,
    "business": 0.1,
    "a": 0.2,
    "new": 0.1
  },
  "create multiple": {
    "procedures": 1.0
  },
  "multiple procedures": {
    "using": 1.0
  },
  "procedures using": {
    "the": 1.0
  },
  "same name": {
    "but": 0.5,
    "you": 0.25,
    "from": 0.25
  },
  "name but": {
    "taking": 0.5,
    "different": 0.5
  },
  "but taking": {
    "different": 1.0
  },
  "taking different": {
    "parameter": 1.0
  },
  "different parameter": {
    "lists": 1.0
  },
  "parameter lists": {
    "another": 0.2,
    "see": 0.2,
    "are": 0.2,
    "must": 0.2,
    "of": 0.2
  },
  "lists another": {
    "form": 1.0
  },
  "another form": {
    "of": 1.0
  },
  "form of": {
    "polymorphism": 0.4,
    "index": 0.2,
    "set": 0.2,
    "deadly": 0.2
  },
  "ok right": {
    "about": 1.0
  },
  "right about": {
    "now": 1.0
  },
  "about now": {
    "all": 1.0
  },
  "now all": {
    "the": 1.0
  },
  "the oop": {
    "purists": 1.0
  },
  "purists in": {
    "the": 1.0
  },
  "the audience": {
    "are": 1.0
  },
  "audience are": {
    "saying": 1.0
  },
  "are saying": {
    "to": 1.0
  },
  "saying to": {
    "themselves": 1.0
  },
  "to themselves": {
    "that": 1.0
  },
  "themselves that": {
    "s": 1.0
  },
  "s got": {
    "nothing": 1.0
  },
  "got nothing": {
    "to": 1.0
  },
  "nothing to": {
    "do": 1.0
  },
  "with polymorphism": {
    "in": 0.5,
    "virtual": 0.5
  },
  "polymorphism in": {
    "oop": 0.5,
    "object": 0.5
  },
  "and they": {
    "re": 1.0
  },
  "they re": {
    "right": 1.0
  },
  "right all": {
    "that": 1.0
  },
  "that polymorphic": {
    "functionality": 1.0
  },
  "polymorphic functionality": {
    "that": 1.0
  },
  "functionality that": {
    "we": 1.0
  },
  "ve given": {
    "you": 1.0
  },
  "given you": {
    "in": 1.0
  },
  "you in": {
    "previous": 1.0
  },
  "in previous": {
    "versions": 1.0
  },
  "previous versions": {
    "of": 1.0
  },
  "versions of": {
    "clarion": 1.0
  },
  "clarion going": {
    "all": 1.0
  },
  "going all": {
    "the": 1.0
  },
  "way back": {
    "to": 1.0
  },
  "the origin": {
    "al": 1.0
  },
  "origin al": {
    "dos": 1.0
  },
  "al dos": {
    "1": 1.0
  },
  "dos 1": {
    "0": 1.0
  },
  "1 0": {
    "version": 1.0
  },
  "0 version": {
    "has": 1.0
  },
  "version has": {
    "nothing": 1.0
  },
  "has nothing": {
    "at": 1.0
  },
  "nothing at": {
    "all": 1.0
  },
  "all to": {
    "do": 0.5,
    "write": 0.5
  },
  "with what": {
    "oop": 1.0
  },
  "what oop": {
    "means": 0.5,
    "purists": 0.5
  },
  "oop means": {
    "when": 1.0
  },
  "means when": {
    "it": 1.0
  },
  "when it": {
    "talks": 0.16666666666666666,
    "goes": 0.3333333333333333,
    "was": 0.16666666666666666,
    "is": 0.3333333333333333
  },
  "it talks": {
    "about": 1.0
  },
  "talks about": {
    "polymorphism": 1.0
  },
  "about polymorphism": {
    "virtual": 1.0
  },
  "polymorphism virtual": {
    "me": 0.3333333333333333,
    "methods": 0.6666666666666666
  },
  "virtual me": {
    "thods": 0.5,
    "thod": 0.5
  },
  "me thods": {
    "there": 1.0
  },
  "thods there": {
    "s": 1.0
  },
  "one more": {
    "common": 0.3333333333333333,
    "extra": 0.3333333333333333,
    "fundamental": 0.3333333333333333
  },
  "term that": {
    "is": 1.0
  },
  "is virtually": {
    "synonymous": 1.0
  },
  "virtually synonymous": {
    "with": 1.0
  },
  "synonymous with": {
    "polymorphism": 1.0
  },
  "methods now": {
    "this": 1.0
  },
  "now this": {
    "is": 1.0
  },
  "point where": {
    "oop": 1.0
  },
  "where oop": {
    "starts": 1.0
  },
  "oop starts": {
    "to": 1.0
  },
  "starts to": {
    "get": 1.0
  },
  "get a": {
    "little": 0.5,
    "related": 0.5
  },
  "little tricky": {
    "so": 1.0
  },
  "tricky so": {
    "you": 1.0
  },
  "you guys": {
    "that": 1.0
  },
  "guys that": {
    "are": 1.0
  },
  "that are": {
    "new": 0.07692307692307693,
    "unique": 0.07692307692307693,
    "not": 0.15384615384615385,
    "appropriate": 0.07692307692307693,
    "all": 0.07692307692307693,
    "related": 0.07692307692307693,
    "frequently": 0.07692307692307693,
    "infrequently": 0.07692307692307693,
    "written": 0.07692307692307693,
    "left": 0.07692307692307693,
    "used": 0.07692307692307693,
    "explicitly": 0.07692307692307693
  },
  "are new": {
    "to": 1.0
  },
  "new to": {
    "oop": 0.3333333333333333,
    "declare": 0.3333333333333333,
    "instantiate": 0.3333333333333333
  },
  "to oop": {
    "don": 1.0
  },
  "oop don": {
    "t": 1.0
  },
  "t worry": {
    "if": 1.0
  },
  "worry if": {
    "you": 1.0
  },
  "t get": {
    "it": 1.0
  },
  "get it": {
    "right": 0.5,
    "in": 0.5
  },
  "it right": {
    "away": 1.0
  },
  "right away": {
    "from": 1.0
  },
  "away from": {
    "this": 1.0
  },
  "from this": {
    "morning": 1.0
  },
  "morning s": {
    "talk": 1.0
  },
  "s talk": {
    "this": 1.0
  },
  "talk this": {
    "is": 1.0
  },
  "the part": {
    "that": 1.0
  },
  "part that": {
    "causes": 1.0
  },
  "that causes": {
    "people": 1.0
  },
  "causes people": {
    "to": 1.0
  },
  "people to": {
    "say": 1.0
  },
  "it takes": {
    "at": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "takes at": {
    "least": 1.0
  },
  "at least": {
    "six": 1.0
  },
  "least six": {
    "months": 1.0
  },
  "six months": {
    "to": 1.0
  },
  "months to": {
    "reall": 1.0
  },
  "to reall": {
    "y": 1.0
  },
  "reall y": {
    "get": 1.0
  },
  "y get": {
    "oop": 1.0
  },
  "get oop": {
    "and": 1.0
  },
  "to program": {
    "in": 1.0
  },
  "in it": {
    "whether": 1.0
  },
  "it whether": {
    "you": 1.0
  },
  "whether you": {
    "already": 1.0
  },
  "you already": {
    "understand": 1.0
  },
  "already understand": {
    "oop": 1.0
  },
  "understand oop": {
    "or": 1.0
  },
  "oop or": {
    "not": 1.0
  },
  "not the": {
    "abc": 0.16666666666666666,
    "class": 0.16666666666666666,
    "private": 0.16666666666666666,
    "same": 0.3333333333333333,
    "target": 0.16666666666666666
  },
  "library is": {
    "an": 1.0
  },
  "an excellent": {
    "example": 1.0
  },
  "excellent example": {
    "of": 1.0
  },
  "of well": {
    "designed": 1.0
  },
  "well designed": {
    "classes": 1.0
  },
  "designed classes": {
    "that": 1.0
  },
  "can study": {
    "and": 1.0
  },
  "study and": {
    "learn": 1.0
  },
  "and learn": {
    "from": 1.0
  },
  "learn from": {
    "virtual": 1.0
  },
  "from virtual": {
    "methods": 1.0
  },
  "are what": {
    "oop": 1.0
  },
  "purists are": {
    "really": 1.0
  },
  "are really": {
    "talking": 1.0
  },
  "really talking": {
    "about": 1.0
  },
  "about when": {
    "they": 1.0
  },
  "when they": {
    "say": 1.0
  },
  "they say": {
    "polymorphism": 1.0
  },
  "say polymorphism": {
    "what": 1.0
  },
  "polymorphism what": {
    "s": 1.0
  },
  "a virtual": {
    "method": 1.0
  },
  "virtual method": {
    "the": 0.043478260869565216,
    "is": 0.17391304347826086,
    "call": 0.043478260869565216,
    "cannot": 0.043478260869565216,
    "table": 0.13043478260869565,
    "executes": 0.043478260869565216,
    "type": 0.043478260869565216,
    "to": 0.043478260869565216,
    "appropriate": 0.043478260869565216,
    "for": 0.043478260869565216,
    "in": 0.08695652173913043,
    "this": 0.043478260869565216,
    "end": 0.08695652173913043,
    "code": 0.08695652173913043,
    "with": 0.043478260869565216
  },
  "method the": {
    "simple": 0.25,
    "first": 0.25,
    "inherited": 0.25,
    "manipulateaandb": 0.25
  },
  "the simple": {
    "answer": 0.5,
    "data": 0.5
  },
  "simple answer": {
    "to": 1.0
  },
  "method whose": {
    "prototype": 1.0
  },
  "whose prototype": {
    "is": 1.0
  },
  "prototype is": {
    "present": 1.0
  },
  "is present": {
    "in": 0.5,
    "on": 0.5
  },
  "present in": {
    "b": 0.5,
    "these": 0.5
  },
  "in b": {
    "oth": 1.0
  },
  "b oth": {
    "a": 1.0
  },
  "oth a": {
    "parent": 1.0
  },
  "parent and": {
    "derived": 0.6666666666666666,
    "from": 0.3333333333333333
  },
  "structure and": {
    "has": 0.5,
    "the": 0.5
  },
  "and has": {
    "the": 1.0
  },
  "the virtual": {
    "attribute": 0.3076923076923077,
    "method": 0.5384615384615384,
    "methods": 0.15384615384615385
  },
  "virtual attribute": {
    "on": 0.5,
    "that": 0.25,
    "now": 0.25
  },
  "on both": {
    "this": 1.0
  },
  "both this": {
    "means": 1.0
  },
  "that virtual": {
    "methods": 1.0
  },
  "methods must": {
    "have": 0.3333333333333333,
    "be": 0.3333333333333333,
    "come": 0.3333333333333333
  },
  "must have": {
    "the": 0.75,
    "some": 0.25
  },
  "exact same": {
    "prototype": 1.0
  },
  "prototype in": {
    "both": 0.5,
    "the": 0.5
  },
  "in both": {
    "a": 0.16666666666666666,
    "the": 0.6666666666666666,
    "your": 0.16666666666666666
  },
  "they both": {
    "must": 1.0
  },
  "both must": {
    "have": 1.0
  },
  "attribute that": {
    "s": 1.0
  },
  "the mechanics": {
    "of": 1.0
  },
  "mechanics of": {
    "virtual": 1.0
  },
  "of virtual": {
    "methods": 1.0
  },
  "methods so": {
    "now": 1.0
  },
  "now that": {
    "you": 1.0
  },
  "ve gotten": {
    "the": 1.0
  },
  "gotten the": {
    "mechanics": 1.0
  },
  "methods down": {
    "we": 1.0
  },
  "down we": {
    "can": 1.0
  },
  "can go": {
    "on": 1.0
  },
  "go on": {
    "to": 1.0
  },
  "the really": {
    "important": 1.0
  },
  "really important": {
    "stuff": 1.0
  },
  "important stuff": {
    "like": 1.0
  },
  "stuff like": {
    "what": 1.0
  },
  "like what": {
    "good": 1.0
  },
  "good are": {
    "they": 1.0
  },
  "are they": {
    "and": 1.0
  },
  "they and": {
    "what": 1.0
  },
  "and what": {
    "do": 0.5,
    "it": 0.5
  },
  "what do": {
    "they": 0.3333333333333333,
    "you": 0.6666666666666666
  },
  "do they": {
    "do": 1.0
  },
  "they do": {
    "you": 1.0
  },
  "do you": {
    "recall": 0.25,
    "tell": 0.25,
    "do": 0.5
  },
  "class object": {
    "inherits": 1.0
  },
  "object inherits": {
    "the": 1.0
  },
  "that effectively": {
    "means": 1.0
  },
  "effectively means": {
    "that": 1.0
  },
  "class can": {
    "call": 0.3333333333333333,
    "add": 0.3333333333333333,
    "never": 0.3333333333333333
  },
  "can call": {
    "down": 0.3333333333333333,
    "to": 0.3333333333333333,
    "their": 0.3333333333333333
  },
  "call down": {
    "to": 1.0
  },
  "down to": {
    "execute": 0.25,
    "its": 0.25,
    "the": 0.25,
    "this": 0.25
  },
  "to execute": {
    "a": 0.2857142857142857,
    "derived": 0.14285714285714285,
    "will": 0.14285714285714285,
    "as": 0.14285714285714285,
    "when": 0.14285714285714285,
    "the": 0.14285714285714285
  },
  "method well": {
    "virtual": 1.0
  },
  "well virtual": {
    "methods": 1.0
  },
  "the opposite": {
    "they": 1.0
  },
  "opposite they": {
    "allow": 1.0
  },
  "they allow": {
    "parent": 0.3333333333333333,
    "a": 0.3333333333333333,
    "you": 0.3333333333333333
  },
  "allow parent": {
    "class": 1.0
  },
  "call up": {
    "to": 0.75,
    "for": 0.25
  },
  "up to": {
    "execute": 0.16666666666666666,
    "the": 0.5,
    "derived": 0.16666666666666666,
    "methods": 0.16666666666666666
  },
  "to repeat": {
    "virtual": 1.0
  },
  "repeat virtual": {
    "methods": 1.0
  },
  "methods allow": {
    "the": 0.5,
    "standard": 0.5
  },
  "allow the": {
    "code": 0.14285714285714285,
    "methods": 0.14285714285714285,
    "programmer": 0.14285714285714285,
    "user": 0.14285714285714285,
    "delete": 0.14285714285714285,
    "end": 0.14285714285714285,
    "where": 0.14285714285714285
  },
  "in parent": {
    "class": 1.0
  },
  "execute derived": {
    "class": 1.0
  },
  "methods 21": {
    "easing": 1.0
  },
  "21 easing": {
    "into": 1.0
  },
  "oop more": {
    "apple": 1.0
  },
  "pie the": {
    "easiest": 1.0
  },
  "the easiest": {
    "way": 1.0
  },
  "easiest way": {
    "to": 1.0
  },
  "to see": {
    "how": 0.5,
    "that": 0.5
  },
  "see how": {
    "this": 0.5,
    "it": 0.5
  },
  "how this": {
    "works": 1.0
  },
  "this works": {
    "is": 1.0
  },
  "works is": {
    "with": 1.0
  },
  "is with": {
    "an": 1.0
  },
  "with an": {
    "example": 1.0
  },
  "an example": {
    "let": 0.2,
    "of": 0.8
  },
  "example let": {
    "s": 1.0
  },
  "s go": {
    "back": 1.0
  },
  "go back": {
    "to": 0.5,
    "across": 0.5
  },
  "our applepie": {
    "classes": 1.0
  },
  "applepie classes": {
    "we": 1.0
  },
  "classes we": {
    "ll": 1.0
  },
  "ll add": {
    "a": 1.0
  },
  "a preparepie": {
    "method": 1.0
  },
  "preparepie method": {
    "to": 0.16666666666666666,
    "and": 0.16666666666666666,
    "this": 0.16666666666666666,
    "the": 0.16666666666666666,
    "is": 0.3333333333333333
  },
  "class because": {
    "every": 1.0
  },
  "because every": {
    "type": 1.0
  },
  "every type": {
    "of": 1.0
  },
  "pie needs": {
    "preparation": 1.0
  },
  "needs preparation": {
    "some": 1.0
  },
  "preparation some": {
    "other": 1.0
  },
  "other common": {
    "tasks": 1.0
  },
  "common tasks": {
    "that": 1.0
  },
  "tasks that": {
    "the": 1.0
  },
  "in preparepie": {
    "will": 1.0
  },
  "preparepie will": {
    "need": 0.5,
    "call": 0.5
  },
  "will need": {
    "to": 1.0
  },
  "execute will": {
    "be": 1.0
  },
  "be createcrust": {
    "and": 1.0
  },
  "createcrust and": {
    "makefilling": 1.0
  },
  "and makefilling": {
    "so": 0.5,
    "are": 0.5
  },
  "makefilling so": {
    "we": 1.0
  },
  "ll prototype": {
    "methods": 1.0
  },
  "prototype methods": {
    "for": 1.0
  },
  "for each": {
    "of": 0.5,
    "type": 0.25,
    "item": 0.25
  },
  "these tasks": {
    "applepie": 1.0
  },
  "tasks applepie": {
    "class": 1.0
  },
  "type preparepie": {
    "procedure": 1.0
  },
  "preparepie procedure": {
    "createcrust": 0.5,
    "code": 0.5
  },
  "procedure createcrust": {
    "procedure": 1.0
  },
  "createcrust procedure": {
    "virtual": 1.0
  },
  "procedure virtual": {
    "virtual": 0.18181818181818182,
    "end": 0.36363636363636365,
    "declare": 0.09090909090909091,
    "re": 0.09090909090909091,
    "method": 0.2727272727272727
  },
  "virtual virtual": {
    "methods": 1.0
  },
  "methods makefilling": {
    "procedure": 1.0
  },
  "makefilling procedure": {
    "virtual": 1.0
  },
  "virtual end": {
    "dutch": 0.2,
    "code": 0.4,
    "anotherclass": 0.2,
    "myproc": 0.2
  },
  "applepie createcrust": {
    "procedure": 1.0
  },
  "code dutch": {
    "preparepie": 1.0
  },
  "dutch preparepie": {
    "will": 0.5,
    "method": 0.5
  },
  "will call": {
    "the": 1.0
  },
  "call the": {
    "dutch": 0.07142857142857142,
    "procedure": 0.07142857142857142,
    "constructor": 0.07142857142857142,
    "friend": 0.07142857142857142,
    "object": 0.14285714285714285,
    "base": 0.21428571428571427,
    "parent": 0.07142857142857142,
    "anotherclass": 0.07142857142857142,
    "differentclass": 0.07142857142857142,
    "method": 0.07142857142857142,
    "update": 0.07142857142857142
  },
  "dutch object": {
    "s": 0.5,
    "the": 0.5
  },
  "s virtuals": {
    "applepie": 1.0
  },
  "virtuals applepie": {
    "preparepie": 1.0
  },
  "applepie preparepie": {
    "procedure": 0.3333333333333333,
    "that": 0.3333333333333333,
    "method": 0.3333333333333333
  },
  "self createcrust": {
    "self": 0.5,
    "so": 0.5
  },
  "createcrust self": {
    "makefilling": 1.0
  },
  "self makefilling": {
    "these": 1.0
  },
  "makefilling these": {
    "two": 1.0
  },
  "these two": {
    "methods": 0.5,
    "values": 0.5
  },
  "two methods": {
    "are": 0.25,
    "given": 0.25,
    "named": 0.25,
    "used": 0.25
  },
  "are virtual": {
    "because": 1.0
  },
  "virtual because": {
    "the": 1.0
  },
  "the actual": {
    "code": 0.3333333333333333,
    "method": 0.3333333333333333,
    "effect": 0.16666666666666666,
    "implementation": 0.16666666666666666
  },
  "actual code": {
    "to": 0.6666666666666666,
    "will": 0.3333333333333333
  },
  "code to": {
    "accomplish": 0.1111111111111111,
    "refer": 0.1111111111111111,
    "see": 0.1111111111111111,
    "disambiguate": 0.1111111111111111,
    "handle": 0.2222222222222222,
    "check": 0.2222222222222222,
    "perform": 0.1111111111111111
  },
  "to accomplish": {
    "them": 0.2,
    "in": 0.2,
    "this": 0.2,
    "any": 0.2,
    "a": 0.2
  },
  "accomplish them": {
    "will": 1.0
  },
  "them will": {
    "probably": 1.0
  },
  "will probably": {
    "be": 1.0
  },
  "little different": {
    "for": 1.0
  },
  "different for": {
    "each": 1.0
  },
  "each type": {
    "of": 1.0
  },
  "of pie": {
    "we": 1.0
  },
  "pie we": {
    "derive": 1.0
  },
  "we derive": {
    "however": 1.0
  },
  "derive however": {
    "we": 1.0
  },
  "however we": {
    "do": 1.0
  },
  "we do": {
    "know": 1.0
  },
  "do know": {
    "that": 1.0
  },
  "that these": {
    "are": 0.5,
    "keys": 0.5
  },
  "are always": {
    "the": 0.5,
    "some": 0.5
  },
  "always the": {
    "steps": 1.0
  },
  "the steps": {
    "you": 1.0
  },
  "steps you": {
    "need": 1.0
  },
  "to take": {
    "to": 0.5,
    "when": 0.5
  },
  "take to": {
    "prepare": 1.0
  },
  "to prepare": {
    "any": 1.0
  },
  "prepare any": {
    "apple": 1.0
  },
  "any apple": {
    "pie": 1.0
  },
  "pie so": {
    "we": 1.0
  },
  "can write": {
    "that": 1.0
  },
  "write that": {
    "code": 0.5,
    "execute": 0.5
  },
  "into the": {
    "base": 0.14285714285714285,
    "virtual": 0.14285714285714285,
    "theory": 0.14285714285714285,
    "item": 0.14285714285714285,
    "file": 0.14285714285714285,
    "record": 0.14285714285714285,
    "field": 0.14285714285714285
  },
  "class preparepie": {
    "method": 1.0
  },
  "and know": {
    "that": 1.0
  },
  "it won": {
    "t": 1.0
  },
  "won t": {
    "change": 1.0
  },
  "t change": {
    "now": 1.0
  },
  "change now": {
    "we": 1.0
  },
  "ll derive": {
    "the": 1.0
  },
  "derive the": {
    "dutch": 1.0
  },
  "for createcrust": {
    "and": 1.0
  },
  "makefilling are": {
    "exactly": 1.0
  },
  "are exactly": {
    "the": 1.0
  },
  "class including": {
    "the": 1.0
  },
  "including the": {
    "virtual": 1.0
  },
  "attribute now": {
    "you": 1.0
  },
  "execute the": {
    "dutch": 0.5,
    "watch": 0.5
  },
  "method this": {
    "is": 0.3333333333333333,
    "may": 0.3333333333333333,
    "attribute": 0.3333333333333333
  },
  "an inherited": {
    "method": 1.0
  },
  "inherited method": {
    "so": 0.14285714285714285,
    "to": 0.14285714285714285,
    "someclass": 0.14285714285714285,
    "manipulateandc": 0.14285714285714285,
    "doubleproduct": 0.14285714285714285,
    "and": 0.14285714285714285,
    "unless": 0.14285714285714285
  },
  "is call": {
    "ing": 1.0
  },
  "call ing": {
    "down": 1.0
  },
  "ing down": {
    "to": 1.0
  },
  "method applepie": {
    "preparepie": 1.0
  },
  "preparepie that": {
    "means": 1.0
  },
  "that means": {
    "the": 0.5,
    "that": 0.5
  },
  "that executes": {
    "is": 0.5,
    "in": 0.5
  },
  "executes is": {
    "the": 1.0
  },
  "the applepie": {
    "preparepie": 0.25,
    "base": 0.75
  },
  "statement that": {
    "executes": 0.5,
    "requires": 0.5
  },
  "the preparepie": {
    "method": 1.0
  },
  "the call": {
    "to": 1.0
  },
  "createcrust so": {
    "the": 1.0
  },
  "question is": {
    "which": 1.0
  },
  "is which": {
    "createcrust": 1.0
  },
  "which createcrust": {
    "method": 1.0
  },
  "createcrust method": {
    "will": 0.3333333333333333,
    "because": 0.3333333333333333,
    "ok": 0.3333333333333333
  },
  "method will": {
    "actually": 1.0
  },
  "will actually": {
    "execute": 0.5,
    "be": 0.5
  },
  "actually execute": {
    "at": 1.0
  },
  "execute at": {
    "this": 1.0
  },
  "at this": {
    "point": 1.0
  },
  "this point": {
    "we": 0.5,
    "would": 0.5
  },
  "point we": {
    "have": 1.0
  },
  "have two": {
    "defined": 0.5,
    "properties": 0.5
  },
  "two defined": {
    "the": 1.0
  },
  "defined the": {
    "one": 1.0
  },
  "the one": {
    "in": 0.3333333333333333,
    "you": 0.3333333333333333,
    "second": 0.3333333333333333
  },
  "one in": {
    "the": 1.0
  },
  "applepie base": {
    "class": 1.0
  },
  "other in": {
    "the": 1.0
  },
  "dutch derived": {
    "class": 1.0
  },
  "answer is": {
    "the": 0.3333333333333333,
    "using": 0.3333333333333333,
    "probably": 0.3333333333333333
  },
  "actual method": {
    "that": 0.3333333333333333,
    "to": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "that will": {
    "execute": 1.0
  },
  "will execute": {
    "is": 1.0
  },
  "execute is": {
    "the": 1.0
  },
  "dutch createcrust": {
    "method": 1.0
  },
  "method because": {
    "the": 1.0
  },
  "the original": {
    "call": 0.16666666666666666,
    "record": 0.5,
    "saved": 0.16666666666666666,
    "crc": 0.16666666666666666
  },
  "original call": {
    "to": 1.0
  },
  "to preparepie": {
    "referenced": 1.0
  },
  "preparepie referenced": {
    "the": 1.0
  },
  "referenced the": {
    "dutch": 1.0
  },
  "is calling": {
    "up": 1.0
  },
  "calling up": {
    "the": 1.0
  },
  "up the": {
    "chain": 0.5,
    "key": 0.5
  },
  "derivation to": {
    "the": 1.0
  },
  "s createcrust": {
    "method": 1.0
  },
  "method ok": {
    "so": 1.0
  },
  "you see": {
    "how": 1.0
  },
  "all works": {
    "virtual": 1.0
  },
  "works virtual": {
    "methods": 1.0
  },
  "are sort": {
    "of": 1.0
  },
  "of re": {
    "verse": 0.5,
    "cords": 0.5
  },
  "re verse": {
    "inheritance": 1.0
  },
  "verse inheritance": {
    "clarion": 1.0
  },
  "inheritance clarion": {
    "language": 0.5,
    "supports": 0.5
  },
  "guide 22": {
    "the": 1.0
  },
  "22 the": {
    "base": 1.0
  },
  "class code": {
    "calls": 0.25,
    "the": 0.25,
    "in": 0.25,
    "myqueue": 0.25
  },
  "code calls": {
    "a": 1.0
  },
  "calls a": {
    "method": 1.0
  },
  "and at": {
    "the": 1.0
  },
  "the time": {
    "the": 0.4,
    "factor": 0.2,
    "it": 0.2,
    "comes": 0.2
  },
  "time the": {
    "code": 0.25,
    "answer": 0.25,
    "get": 0.25,
    "set": 0.25
  },
  "is compiled": {
    "it": 1.0
  },
  "compiled it": {
    "doesn": 1.0
  },
  "have any": {
    "idea": 1.0
  },
  "any idea": {
    "at": 1.0
  },
  "idea at": {
    "all": 1.0
  },
  "all what": {
    "actual": 1.0
  },
  "what actual": {
    "code": 1.0
  },
  "code will": {
    "need": 0.3333333333333333,
    "do": 0.3333333333333333,
    "ev": 0.3333333333333333
  },
  "execute as": {
    "a": 1.0
  },
  "a result": {
    "of": 0.5,
    "set": 0.5
  },
  "result of": {
    "the": 1.0
  },
  "call because": {
    "of": 1.0
  },
  "because of": {
    "the": 1.0
  },
  "it kno": {
    "ws": 1.0
  },
  "kno ws": {
    "there": 1.0
  },
  "ws there": {
    "is": 1.0
  },
  "that name": {
    "that": 1.0
  },
  "name that": {
    "it": 1.0
  },
  "to perform": {
    "a": 0.14285714285714285,
    "their": 0.14285714285714285,
    "the": 0.42857142857142855,
    "its": 0.14285714285714285,
    "sql": 0.14285714285714285
  },
  "perform a": {
    "specified": 1.0
  },
  "a specified": {
    "task": 1.0
  },
  "specified task": {
    "it": 1.0
  },
  "task it": {
    "just": 1.0
  },
  "it just": {
    "doesn": 0.3333333333333333,
    "tells": 0.3333333333333333,
    "like": 0.3333333333333333
  },
  "just doesn": {
    "t": 1.0
  },
  "exactly how": {
    "that": 1.0
  },
  "will do": {
    "its": 1.0
  },
  "do its": {
    "task": 1.0
  },
  "its task": {
    "and": 1.0
  },
  "task and": {
    "it": 1.0
  },
  "care the": {
    "applepie": 1.0
  },
  "class tells": {
    "the": 1.0
  },
  "create its": {
    "crust": 1.0
  },
  "its crust": {
    "and": 1.0
  },
  "crust and": {
    "it": 1.0
  },
  "it goes": {
    "away": 0.3333333333333333,
    "out": 0.6666666666666666
  },
  "goes away": {
    "and": 1.0
  },
  "away and": {
    "does": 1.0
  },
  "and does": {
    "it": 1.0
  },
  "does it": {
    "now": 1.0
  },
  "now i": {
    "know": 1.0
  },
  "know some": {
    "you": 1.0
  },
  "some you": {
    "are": 1.0
  },
  "are asking": {
    "yourselves": 1.0
  },
  "asking yourselves": {
    "how": 1.0
  },
  "yourselves how": {
    "can": 1.0
  },
  "how can": {
    "this": 1.0
  },
  "can this": {
    "kind": 1.0
  },
  "this kind": {
    "of": 1.0
  },
  "kind of": {
    "code": 0.16666666666666666,
    "stuff": 0.16666666666666666,
    "meaningful": 0.16666666666666666,
    "concurrency": 0.16666666666666666,
    "scr": 0.16666666666666666,
    "service": 0.16666666666666666
  },
  "of code": {
    "compile": 1.0
  },
  "code compile": {
    "i": 1.0
  },
  "compile i": {
    "remember": 1.0
  },
  "i remember": {
    "my": 1.0
  },
  "remember my": {
    "compiler": 1.0
  },
  "my compiler": {
    "class": 1.0
  },
  "compiler class": {
    "in": 1.0
  },
  "in college": {
    "and": 1.0
  },
  "college and": {
    "the": 1.0
  },
  "compiler needs": {
    "to": 1.0
  },
  "to resolve": {
    "all": 0.5,
    "which": 0.5
  },
  "resolve all": {
    "procedure": 1.0
  },
  "procedure calls": {
    "at": 0.5,
    "are": 0.5
  },
  "calls at": {
    "compile": 1.0
  },
  "at compile": {
    "time": 1.0
  },
  "is using": {
    "another": 1.0
  },
  "using another": {
    "common": 1.0
  },
  "technique late": {
    "bi": 1.0
  },
  "late bi": {
    "nding": 1.0
  },
  "bi nding": {
    "late": 1.0
  },
  "nding late": {
    "binding": 1.0
  },
  "binding early": {
    "binding": 1.0
  },
  "early binding": {
    "is": 0.25,
    "does": 0.25,
    "when": 0.25,
    "the": 0.25
  },
  "binding is": {
    "the": 1.0
  },
  "the kind": {
    "of": 1.0
  },
  "of stuff": {
    "you": 1.0
  },
  "stuff you": {
    "were": 1.0
  },
  "you were": {
    "taught": 1.0
  },
  "were taught": {
    "in": 1.0
  },
  "taught in": {
    "your": 1.0
  },
  "your compiler": {
    "theory": 1.0
  },
  "compiler theory": {
    "class": 1.0
  },
  "theory class": {
    "where": 1.0
  },
  "class where": {
    "all": 1.0
  },
  "where all": {
    "procedure": 1.0
  },
  "calls are": {
    "resolved": 1.0
  },
  "are resolved": {
    "at": 1.0
  },
  "resolved at": {
    "compile": 1.0
  },
  "time however": {
    "since": 1.0
  },
  "however since": {
    "calls": 1.0
  },
  "since calls": {
    "to": 1.0
  },
  "calls to": {
    "virtual": 1.0
  },
  "to virtual": {
    "method": 1.0
  },
  "be resolved": {
    "at": 0.25,
    "in": 0.5,
    "what": 0.25
  },
  "time t": {
    "he": 1.0
  },
  "he compiler": {
    "must": 1.0
  },
  "compiler must": {
    "build": 0.25,
    "implement": 0.25,
    "at": 0.25,
    "deal": 0.25
  },
  "must build": {
    "what": 1.0
  },
  "build what": {
    "s": 1.0
  },
  "s called": {
    "a": 1.0
  },
  "called a": {
    "virtual": 0.5,
    "constructor": 0.5
  },
  "method table": {
    "at": 0.3333333333333333,
    "i": 0.3333333333333333,
    "vmt": 0.3333333333333333
  },
  "table at": {
    "compile": 1.0
  },
  "time and": {
    "set": 0.5,
    "the": 0.5
  },
  "and set": {
    "the": 0.125,
    "to": 0.5,
    "t": 0.125,
    "previous": 0.125,
    "a": 0.125
  },
  "set the": {
    "method": 0.25,
    "set": 0.25,
    "same": 0.25,
    "back": 0.25
  },
  "up for": {
    "late": 1.0
  },
  "for late": {
    "binding": 1.0
  },
  "binding at": {
    "run": 1.0
  },
  "at run": {
    "time": 1.0
  },
  "time when": {
    "the": 1.0
  },
  "method executes": {
    "late": 1.0
  },
  "executes late": {
    "binding": 1.0
  },
  "binding means": {
    "that": 1.0
  },
  "call is": {
    "determined": 1.0
  },
  "is determined": {
    "by": 1.0
  },
  "determined by": {
    "a": 0.5,
    "the": 0.5
  },
  "a looku": {
    "p": 1.0
  },
  "looku p": {
    "into": 1.0
  },
  "p into": {
    "the": 1.0
  },
  "table i": {
    "m": 1.0
  },
  "m sure": {
    "that": 1.0
  },
  "sure that": {
    "all": 0.3333333333333333,
    "nobody": 0.3333333333333333,
    "no": 0.3333333333333333
  },
  "that all": {
    "of": 0.2,
    "the": 0.4,
    "foreign": 0.2,
    "data": 0.2
  },
  "you know": {
    "a": 0.3333333333333333,
    "exactly": 0.3333333333333333,
    "how": 0.3333333333333333
  },
  "know a": {
    "lot": 1.0
  },
  "lot about": {
    "lookups": 1.0
  },
  "about lookups": {
    "since": 1.0
  },
  "lookups since": {
    "it": 1.0
  },
  "since it": {
    "s": 1.0
  },
  "a pretty": {
    "standard": 1.0
  },
  "standard database": {
    "application": 1.0
  },
  "database application": {
    "design": 0.3333333333333333,
    "this": 0.3333333333333333,
    "if": 0.3333333333333333
  },
  "application design": {
    "technique": 1.0
  },
  "design technique": {
    "now": 1.0
  },
  "technique now": {
    "in": 1.0
  },
  "now in": {
    "many": 0.5,
    "virtual": 0.5
  },
  "in many": {
    "other": 1.0
  },
  "many other": {
    "oop": 0.6666666666666666,
    "object": 0.3333333333333333
  },
  "languages this": {
    "late": 1.0
  },
  "this late": {
    "binding": 1.0
  },
  "binding for": {
    "virtual": 1.0
  },
  "for virtual": {
    "methods": 1.0
  },
  "can cause": {
    "a": 1.0
  },
  "cause a": {
    "real": 1.0
  },
  "a real": {
    "performance": 0.5,
    "world": 0.5
  },
  "real performance": {
    "hit": 1.0
  },
  "performance hit": {
    "however": 0.3333333333333333,
    "with": 0.3333333333333333,
    "but": 0.3333333333333333
  },
  "hit however": {
    "in": 1.0
  },
  "however in": {
    "clarion": 1.0
  },
  "entire late": {
    "binding": 1.0
  },
  "binding process": {
    "takes": 1.0
  },
  "process takes": {
    "only": 1.0
  },
  "takes only": {
    "one": 1.0
  },
  "more extra": {
    "reference": 1.0
  },
  "extra reference": {
    "at": 1.0
  },
  "reference at": {
    "runtime": 1.0
  },
  "at runtime": {
    "than": 0.5,
    "it": 0.5
  },
  "runtime than": {
    "early": 1.0
  },
  "than early": {
    "binding": 1.0
  },
  "binding does": {
    "so": 1.0
  },
  "does so": {
    "there": 1.0
  },
  "so there": {
    "s": 1.0
  },
  "s virtually": {
    "no": 1.0
  },
  "virtually no": {
    "performance": 1.0
  },
  "no performance": {
    "hit": 1.0
  },
  "hit with": {
    "using": 1.0
  },
  "with using": {
    "virtual": 0.5,
    "hold": 0.5
  },
  "using virtual": {
    "methods": 1.0
  },
  "clarion as": {
    "a": 1.0
  },
  "a matter": {
    "of": 1.0
  },
  "matter of": {
    "fact": 0.3333333333333333,
    "looking": 0.3333333333333333,
    "specific": 0.3333333333333333
  },
  "of fact": {
    "virtual": 1.0
  },
  "fact virtual": {
    "methods": 1.0
  },
  "clarion ar": {
    "e": 1.0
  },
  "ar e": {
    "so": 0.5,
    "contained": 0.5
  },
  "e so": {
    "efficient": 1.0
  },
  "so efficient": {
    "that": 1.0
  },
  "efficient that": {
    "when": 1.0
  },
  "you look": {
    "at": 1.0
  },
  "look at": {
    "the": 0.6666666666666666,
    "inheritance": 0.16666666666666666,
    "virtual": 0.16666666666666666
  },
  "code generated": {
    "by": 0.5,
    "is": 0.5
  },
  "generated by": {
    "the": 1.0
  },
  "new abc": {
    "templates": 1.0
  },
  "abc templates": {
    "you": 0.5,
    "and": 0.5
  },
  "templates you": {
    "ll": 1.0
  },
  "ll find": {
    "that": 1.0
  },
  "find that": {
    "almost": 1.0
  },
  "that almost": {
    "all": 1.0
  },
  "almost all": {
    "the": 0.5,
    "these": 0.5
  },
  "generated is": {
    "now": 0.5,
    "the": 0.5
  },
  "is now": {
    "in": 1.0
  },
  "in virtual": {
    "methods": 1.0
  },
  "methods this": {
    "means": 0.4,
    "meant": 0.2,
    "seems": 0.2,
    "allows": 0.2
  },
  "means you": {
    "ve": 0.3333333333333333,
    "retrieve": 0.6666666666666666
  },
  "ve probably": {
    "seen": 1.0
  },
  "probably seen": {
    "the": 1.0
  },
  "seen the": {
    "last": 1.0
  },
  "the last": {
    "of": 0.25,
    "oop": 0.25,
    "executable": 0.25,
    "record": 0.25
  },
  "last of": {
    "any": 1.0
  },
  "any pool": {
    "limit": 1.0
  },
  "pool limit": {
    "errors": 1.0
  },
  "limit errors": {
    "that": 1.0
  },
  "errors that": {
    "brings": 1.0
  },
  "that brings": {
    "me": 1.0
  },
  "brings me": {
    "to": 1.0
  },
  "me to": {
    "the": 1.0
  },
  "last oop": {
    "is": 1.0
  },
  "oop is": {
    "sue": 1.0
  },
  "is sue": {
    "i": 1.0
  },
  "sue i": {
    "want": 1.0
  },
  "i want": {
    "to": 1.0
  },
  "about this": {
    "morning": 1.0
  },
  "morning scoping": {
    "in": 1.0
  },
  "scoping in": {
    "older": 1.0
  },
  "in older": {
    "version": 0.5,
    "versions": 0.5
  },
  "older version": {
    "of": 1.0
  },
  "version of": {
    "clarion": 1.0
  },
  "clarion you": {
    "will": 1.0
  },
  "will have": {
    "noticed": 0.5,
    "a": 0.5
  },
  "have noticed": {
    "that": 1.0
  },
  "noticed that": {
    "some": 1.0
  },
  "the biggest": {
    "conversion": 0.3333333333333333,
    "reaso": 0.3333333333333333,
    "consideration": 0.3333333333333333
  },
  "biggest conversion": {
    "problems": 1.0
  },
  "conversion problems": {
    "lay": 1.0
  },
  "problems lay": {
    "in": 1.0
  },
  "lay in": {
    "the": 1.0
  },
  "that many": {
    "of": 1.0
  },
  "many of": {
    "the": 1.0
  },
  "the template": {
    "embed": 1.0
  },
  "template embed": {
    "points": 1.0
  },
  "embed points": {
    "were": 0.3333333333333333,
    "out": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "points were": {
    "moved": 1.0
  },
  "were moved": {
    "into": 1.0
  },
  "moved into": {
    "virtual": 0.5,
    "local": 0.5
  },
  "into virtual": {
    "methods": 1.0
  },
  "this meant": {
    "you": 1.0
  },
  "meant you": {
    "had": 1.0
  },
  "you had": {
    "two": 0.5,
    "to": 0.5
  },
  "had two": {
    "workarounds": 1.0
  },
  "two workarounds": {
    "available": 1.0
  },
  "workarounds available": {
    "to": 1.0
  },
  "you move": {
    "any": 1.0
  },
  "move any": {
    "procedure": 1.0
  },
  "reference in": {
    "those": 1.0
  },
  "in those": {
    "embed": 0.3333333333333333,
    "virtual": 0.3333333333333333,
    "records": 0.3333333333333333
  },
  "those embed": {
    "points": 1.0
  },
  "points out": {
    "of": 1.0
  },
  "procedure itself": {
    "and": 0.3333333333333333,
    "by": 0.3333333333333333,
    "summary": 0.3333333333333333
  },
  "itself and": {
    "into": 0.25,
    "the": 0.25,
    "it": 0.5
  },
  "and into": {
    "module": 1.0
  },
  "into module": {
    "data": 1.0
  },
  "data or": {
    "jump": 0.2,
    "method": 0.4,
    "an": 0.2,
    "a": 0.2
  },
  "or jump": {
    "through": 1.0
  },
  "jump through": {
    "some": 0.5,
    "in": 0.5
  },
  "through some": {
    "even": 1.0
  },
  "some even": {
    "more": 1.0
  },
  "more difficult": {
    "hoops": 1.0
  },
  "difficult hoops": {
    "by": 1.0
  },
  "hoops by": {
    "creating": 1.0
  },
  "by creating": {
    "reference": 1.0
  },
  "creating reference": {
    "variables": 1.0
  },
  "variables for": {
    "each": 1.0
  },
  "variables you": {
    "wanted": 1.0
  },
  "reference and": {
    "reference": 1.0
  },
  "reference assigning": {
    "to": 1.0
  },
  "assigning to": {
    "them": 1.0
  },
  "them then": {
    "changing": 1.0
  },
  "then changing": {
    "your": 1.0
  },
  "changing your": {
    "embed": 1.0
  },
  "your embed": {
    "code": 1.0
  },
  "embed code": {
    "to": 0.5,
    "as": 0.5
  },
  "to refer": {
    "to": 1.0
  },
  "refer to": {
    "those": 0.5,
    "the": 0.5
  },
  "to those": {
    "reference": 0.5,
    "records": 0.5
  },
  "those reference": {
    "variables": 1.0
  },
  "variables needless": {
    "to": 1.0
  },
  "needless to": {
    "say": 1.0
  },
  "say this": {
    "was": 1.0
  },
  "this was": {
    "a": 0.5,
    "simply": 0.5
  },
  "was a": {
    "lot": 1.0
  },
  "more work": {
    "than": 1.0
  },
  "work than": {
    "clarion": 1.0
  },
  "than clarion": {
    "programmers": 1.0
  },
  "clarion programmers": {
    "have": 1.0
  },
  "have grown": {
    "accustomed": 1.0
  },
  "grown accustomed": {
    "to": 1.0
  },
  "accustomed to": {
    "so": 1.0
  },
  "so to": {
    "solve": 1.0
  },
  "to solve": {
    "that": 0.5,
    "a": 0.5
  },
  "solve that": {
    "probl": 1.0
  },
  "that probl": {
    "em": 1.0
  },
  "probl em": {
    "clarion": 1.0
  },
  "em clarion": {
    "supports": 1.0
  },
  "clarion supports": {
    "a": 0.5,
    "inheritance": 0.5
  },
  "supports a": {
    "technique": 1.0
  },
  "a technique": {
    "called": 1.0
  },
  "23 easing": {
    "into": 1.0
  },
  "oop local": {
    "derived": 1.0
  },
  "methods local": {
    "derived": 1.0
  },
  "derived method": {
    "definitions": 1.0
  },
  "method definitions": {
    "their": 1.0
  },
  "definitions their": {
    "executable": 1.0
  },
  "their executable": {
    "code": 1.0
  },
  "is must": {
    "immediately": 1.0
  },
  "the end": {
    "of": 0.5,
    "user": 0.5
  },
  "end of": {
    "the": 0.3076923076923077,
    "cust": 0.3076923076923077,
    "order": 0.07692307692307693,
    "file": 0.23076923076923078,
    "group": 0.07692307692307693
  },
  "declared so": {
    "what": 1.0
  },
  "advantage you": {
    "get": 1.0
  },
  "you get": {
    "from": 0.5,
    "all": 0.5
  },
  "get from": {
    "these": 1.0
  },
  "from these": {
    "things": 1.0
  },
  "things local": {
    "derived": 1.0
  },
  "methods inherit": {
    "the": 1.0
  },
  "inherit the": {
    "scope": 1.0
  },
  "the scope": {
    "of": 1.0
  },
  "scope of": {
    "the": 1.0
  },
  "declared that": {
    "means": 1.0
  },
  "are visible": {
    "and": 1.0
  },
  "available inside": {
    "the": 1.0
  },
  "that eliminates": {
    "all": 1.0
  },
  "eliminates all": {
    "the": 1.0
  },
  "the hoops": {
    "you": 1.0
  },
  "hoops you": {
    "had": 1.0
  },
  "had to": {
    "jump": 1.0
  },
  "to jump": {
    "through": 1.0
  },
  "through in": {
    "older": 1.0
  },
  "older versions": {
    "to": 1.0
  },
  "versions to": {
    "access": 1.0
  },
  "to access": {
    "your": 0.1111111111111111,
    "all": 0.1111111111111111,
    "the": 0.3333333333333333,
    "and": 0.1111111111111111,
    "records": 0.2222222222222222,
    "on": 0.1111111111111111
  },
  "access your": {
    "local": 1.0
  },
  "your local": {
    "data": 1.0
  },
  "those virtual": {
    "embed": 1.0
  },
  "virtual embed": {
    "points": 1.0
  },
  "points and": {
    "it": 1.0
  },
  "also enables": {
    "you": 1.0
  },
  "enables you": {
    "to": 1.0
  },
  "s routines": {
    "from": 1.0
  },
  "routines from": {
    "within": 1.0
  },
  "from within": {
    "them": 0.3333333333333333,
    "derived": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "within them": {
    "too": 1.0
  },
  "them too": {
    "just": 1.0
  },
  "too just": {
    "as": 1.0
  },
  "as if": {
    "your": 0.3333333333333333,
    "it": 0.3333333333333333,
    "they": 0.3333333333333333
  },
  "if your": {
    "code": 0.3333333333333333,
    "application": 0.3333333333333333,
    "file": 0.3333333333333333
  },
  "code were": {
    "still": 1.0
  },
  "were still": {
    "within": 1.0
  },
  "still within": {
    "the": 1.0
  },
  "itself by": {
    "the": 1.0
  },
  "way for": {
    "those": 0.5,
    "the": 0.5
  },
  "those of": {
    "you": 1.0
  },
  "who still": {
    "remember": 1.0
  },
  "still remember": {
    "some": 1.0
  },
  "remember some": {
    "pascal": 1.0
  },
  "some pascal": {
    "from": 1.0
  },
  "pascal from": {
    "college": 1.0
  },
  "from college": {
    "this": 1.0
  },
  "college this": {
    "concept": 1.0
  },
  "this concept": {
    "is": 1.0
  },
  "concept is": {
    "very": 1.0
  },
  "is very": {
    "similar": 0.5,
    "effici": 0.5
  },
  "very similar": {
    "to": 0.5,
    "therefore": 0.5
  },
  "to pascal": {
    "s": 1.0
  },
  "pascal s": {
    "nested": 1.0
  },
  "s nested": {
    "procedures": 1.0
  },
  "nested procedures": {
    "this": 1.0
  },
  "procedures this": {
    "new": 1.0
  },
  "this new": {
    "implementation": 1.0
  },
  "new implementation": {
    "of": 1.0
  },
  "implementation of": {
    "scoping": 0.3333333333333333,
    "private": 0.3333333333333333,
    "hold": 0.3333333333333333
  },
  "of scoping": {
    "for": 1.0
  },
  "scoping for": {
    "local": 1.0
  },
  "for local": {
    "derived": 1.0
  },
  "methods is": {
    "what": 1.0
  },
  "is what": {
    "allowed": 1.0
  },
  "what allowed": {
    "great": 1.0
  },
  "allowed great": {
    "flexibility": 1.0
  },
  "great flexibility": {
    "and": 1.0
  },
  "flexibility and": {
    "functionality": 1.0
  },
  "and functionality": {
    "in": 1.0
  },
  "templates and": {
    "abc": 1.0
  },
  "and abc": {
    "library": 1.0
  },
  "library all": {
    "you": 1.0
  },
  "is run": {
    "the": 0.5,
    "based": 0.5
  },
  "run the": {
    "app": 1.0
  },
  "the app": {
    "wizard": 1.0
  },
  "app wizard": {
    "on": 1.0
  },
  "wizard on": {
    "any": 1.0
  },
  "on any": {
    "dictionary": 0.25,
    "other": 0.75
  },
  "any dictionary": {
    "then": 1.0
  },
  "dictionary then": {
    "look": 1.0
  },
  "then look": {
    "at": 0.5,
    "in": 0.5
  },
  "the generated": {
    "code": 0.2,
    "sql": 0.6,
    "where": 0.2
  },
  "generated code": {
    "to": 1.0
  },
  "see that": {
    "mos": 0.5,
    "the": 0.5
  },
  "that mos": {
    "t": 1.0
  },
  "mos t": {
    "generated": 1.0
  },
  "t generated": {
    "procedures": 1.0
  },
  "generated procedures": {
    "now": 1.0
  },
  "procedures now": {
    "contain": 1.0
  },
  "now contain": {
    "very": 1.0
  },
  "contain very": {
    "little": 1.0
  },
  "very little": {
    "code": 1.0
  },
  "little code": {
    "everything": 1.0
  },
  "code everything": {
    "has": 1.0
  },
  "everything has": {
    "been": 1.0
  },
  "been moved": {
    "into": 1.0
  },
  "into local": {
    "derived": 1.0
  },
  "will mostly": {
    "still": 1.0
  },
  "mostly still": {
    "be": 1.0
  },
  "still be": {
    "able": 1.0
  },
  "be able": {
    "to": 1.0
  },
  "code as": {
    "if": 0.5,
    "in": 0.5
  },
  "it were": {
    "inside": 1.0
  },
  "were inside": {
    "the": 1.0
  },
  "itself summary": {
    "you": 1.0
  },
  "summary you": {
    "ve": 1.0
  },
  "now been": {
    "exposed": 1.0
  },
  "been exposed": {
    "to": 1.0
  },
  "exposed to": {
    "the": 1.0
  },
  "the three": {
    "m": 0.2,
    "most": 0.6,
    "common": 0.2
  },
  "three m": {
    "ajor": 1.0
  },
  "m ajor": {
    "oop": 0.5,
    "benefit": 0.5
  },
  "ajor oop": {
    "buzzwords": 1.0
  },
  "encapsulation inheritance": {
    "and": 1.0
  },
  "and polymorphism": {
    "and": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "polymorphism and": {
    "how": 1.0
  },
  "ve also": {
    "heard": 1.0
  },
  "also heard": {
    "most": 1.0
  },
  "heard most": {
    "of": 1.0
  },
  "most of": {
    "the": 0.5,
    "these": 0.5
  },
  "other standard": {
    "oop": 1.0
  },
  "terms properties": {
    "methods": 1.0
  },
  "objects instantiation": {
    "base": 1.0
  },
  "instantiation base": {
    "classes": 1.0
  },
  "base classes": {
    "derived": 0.5,
    "starts": 0.5
  },
  "classes derived": {
    "classes": 0.25,
    "from": 0.75
  },
  "classes s": {
    "elf": 1.0
  },
  "s elf": {
    "parent": 1.0
  },
  "elf parent": {
    "constructors": 1.0
  },
  "parent constructors": {
    "and": 1.0
  },
  "destructors virtual": {
    "methods": 1.0
  },
  "methods late": {
    "binding": 1.0
  },
  "binding and": {
    "let": 1.0
  },
  "and let": {
    "s": 1.0
  },
  "s not": {
    "forget": 1.0
  },
  "not forget": {
    "the": 1.0
  },
  "forget the": {
    "one": 1.0
  },
  "one you": {
    "do": 1.0
  },
  "learn disambiguate": {
    "clarion": 1.0
  },
  "disambiguate clarion": {
    "language": 1.0
  },
  "guide 24": {
    "25": 1.0
  },
  "24 25": {
    "object": 1.0
  },
  "programming 3": {
    "object": 1.0
  },
  "oop object": {
    "overview": 1.0
  },
  "overview wha": {
    "t": 1.0
  },
  "wha t": {
    "are": 1.0
  },
  "t are": {
    "objects": 1.0
  },
  "objects an": {
    "object": 1.0
  },
  "single thing": {
    "we": 0.5,
    "why": 0.5
  },
  "thing we": {
    "humans": 1.0
  },
  "we humans": {
    "tend": 1.0
  },
  "humans tend": {
    "to": 1.0
  },
  "tend to": {
    "group": 0.5,
    "divide": 0.5
  },
  "to group": {
    "what": 1.0
  },
  "group what": {
    "we": 1.0
  },
  "what we": {
    "see": 1.0
  },
  "we see": {
    "in": 0.3333333333333333,
    "into": 0.3333333333333333,
    "two": 0.3333333333333333
  },
  "see in": {
    "the": 1.0
  },
  "the world": {
    "into": 0.5,
    "of": 0.5
  },
  "world into": {
    "classes": 1.0
  },
  "into classes": {
    "of": 1.0
  },
  "classes of": {
    "things": 1.0
  },
  "of things": {
    "we": 0.5,
    "generally": 0.25,
    "in": 0.25
  },
  "things we": {
    "group": 0.3333333333333333,
    "see": 0.3333333333333333,
    "can": 0.3333333333333333
  },
  "we group": {
    "them": 1.0
  },
  "group them": {
    "according": 1.0
  },
  "them according": {
    "to": 1.0
  },
  "and behaviors": {
    "that": 0.75,
    "common": 0.25
  },
  "behaviors that": {
    "they": 0.3333333333333333,
    "describe": 0.3333333333333333,
    "define": 0.3333333333333333
  },
  "they have": {
    "in": 1.0
  },
  "have in": {
    "common": 0.5,
    "a": 0.5
  },
  "common therefore": {
    "things": 1.0
  },
  "therefore things": {
    "that": 1.0
  },
  "that belong": {
    "to": 1.0
  },
  "belong to": {
    "a": 0.4,
    "oneclass": 0.2,
    "someclass": 0.2,
    "anotherclass": 0.2
  },
  "single class": {
    "have": 0.5,
    "reside": 0.5
  },
  "class have": {
    "p": 1.0
  },
  "have p": {
    "roperties": 1.0
  },
  "p roperties": {
    "and": 1.0
  },
  "roperties and": {
    "behaviors": 1.0
  },
  "that describe": {
    "the": 1.0
  },
  "describe the": {
    "type": 0.5,
    "set": 0.5
  },
  "of thing": {
    "it": 1.0
  },
  "thing it": {
    "is": 1.0
  },
  "is and": {
    "what": 1.0
  },
  "what it": {
    "does": 0.5,
    "is": 0.5
  },
  "it does": {
    "we": 0.14285714285714285,
    "not": 0.5714285714285714,
    "clarion": 0.14285714285714285,
    "mean": 0.14285714285714285
  },
  "does we": {
    "also": 1.0
  },
  "we also": {
    "tend": 1.0
  },
  "also tend": {
    "to": 1.0
  },
  "to divide": {
    "the": 1.0
  },
  "divide the": {
    "classes": 0.5,
    "living": 0.5
  },
  "the classes": {
    "of": 0.5,
    "from": 0.5
  },
  "see into": {
    "a": 1.0
  },
  "a tree": {
    "shaped": 1.0
  },
  "tree shaped": {
    "hierarchy": 1.0
  },
  "shaped hierarchy": {
    "of": 1.0
  },
  "hierarchy of": {
    "classes": 1.0
  },
  "classes the": {
    "hierarchy": 0.3333333333333333,
    "specific": 0.3333333333333333,
    "parameter": 0.3333333333333333
  },
  "the hierarchy": {
    "tree": 1.0
  },
  "hierarchy tree": {
    "starts": 0.5,
    "it": 0.5
  },
  "tree starts": {
    "with": 1.0
  },
  "starts with": {
    "the": 1.0
  },
  "most general": {
    "at": 1.0
  },
  "general at": {
    "the": 1.0
  },
  "the bottom": {
    "and": 1.0
  },
  "bottom and": {
    "grows": 1.0
  },
  "and grows": {
    "up": 1.0
  },
  "grows up": {
    "to": 1.0
  },
  "most specific": {
    "each": 1.0
  },
  "specific each": {
    "branch": 1.0
  },
  "each branch": {
    "of": 1.0
  },
  "branch of": {
    "the": 1.0
  },
  "the tree": {
    "is": 1.0
  },
  "tree is": {
    "a": 1.0
  },
  "separate class": {
    "that": 1.0
  },
  "class that": {
    "shares": 1.0
  },
  "that shares": {
    "the": 1.0
  },
  "the common": {
    "properties": 1.0
  },
  "class above": {
    "it": 1.0
  },
  "above it": {
    "to": 1.0
  },
  "is attached": {
    "its": 1.0
  },
  "attached its": {
    "parent": 1.0
  },
  "parent because": {
    "it": 1.0
  },
  "because it": {
    "is": 0.4,
    "performs": 0.2,
    "i": 0.2,
    "involves": 0.2
  },
  "is derived": {
    "from": 0.3333333333333333,
    "its": 0.16666666666666666,
    "is": 0.16666666666666666,
    "the": 0.16666666666666666,
    "contain": 0.16666666666666666
  },
  "parent each": {
    "derived": 1.0
  },
  "each derived": {
    "class": 1.0
  },
  "class must": {
    "also": 1.0
  },
  "also have": {
    "characteristics": 0.5,
    "a": 0.5
  },
  "have characteristics": {
    "that": 1.0
  },
  "characteristics that": {
    "are": 1.0
  },
  "are unique": {
    "to": 1.0
  },
  "to it": {
    "that": 0.25,
    "end": 0.25,
    "returns": 0.25,
    "in": 0.25
  },
  "that separate": {
    "it": 1.0
  },
  "separate it": {
    "from": 1.0
  },
  "it from": {
    "the": 0.5,
    "its": 0.5
  },
  "and from": {
    "other": 1.0
  },
  "from other": {
    "classes": 1.0
  },
  "parent an": {
    "object": 1.0
  },
  "one instance": {
    "of": 0.5,
    "all": 0.5
  },
  "class of": {
    "things": 0.3333333333333333,
    "objects": 0.3333333333333333,
    "object": 0.3333333333333333
  },
  "things generally": {
    "from": 1.0
  },
  "generally from": {
    "the": 1.0
  },
  "the lowest": {
    "level": 1.0
  },
  "lowest level": {
    "of": 1.0
  },
  "tree it": {
    "has": 1.0
  },
  "has properties": {
    "and": 1.0
  },
  "that define": {
    "what": 1.0
  },
  "define what": {
    "it": 1.0
  },
  "example we": {
    "see": 1.0
  },
  "see two": {
    "major": 1.0
  },
  "two major": {
    "classes": 0.5,
    "categories": 0.5
  },
  "major classes": {
    "of": 1.0
  },
  "things in": {
    "our": 1.0
  },
  "in our": {
    "world": 1.0
  },
  "our world": {
    "living": 1.0
  },
  "world living": {
    "things": 1.0
  },
  "living things": {
    "and": 0.3333333333333333,
    "we": 0.3333333333333333,
    "class": 0.3333333333333333
  },
  "things and": {
    "non": 1.0
  },
  "and non": {
    "living": 0.5,
    "null": 0.5
  },
  "non living": {
    "things": 1.0
  },
  "can divide": {
    "the": 1.0
  },
  "the living": {
    "things": 1.0
  },
  "things class": {
    "into": 1.0
  },
  "class into": {
    "two": 1.0
  },
  "into two": {
    "sub": 0.5,
    "categories": 0.5
  },
  "two sub": {
    "classes": 1.0
  },
  "sub classes": {
    "plants": 0.25,
    "mammals": 0.25,
    "are": 0.25,
    "this": 0.25
  },
  "classes plants": {
    "and": 1.0
  },
  "plants and": {
    "animals": 1.0
  },
  "and animals": {
    "within": 1.0
  },
  "animals within": {
    "the": 1.0
  },
  "the animal": {
    "class": 1.0
  },
  "animal class": {
    "we": 1.0
  },
  "class we": {
    "can": 1.0
  },
  "can see": {
    "many": 0.5,
    "that": 0.5
  },
  "see many": {
    "sub": 1.0
  },
  "many sub": {
    "classes": 1.0
  },
  "classes mammals": {
    "birds": 1.0
  },
  "mammals birds": {
    "fish": 1.0
  },
  "birds fish": {
    "etc": 1.0
  },
  "fish etc": {
    "then": 1.0
  },
  "etc then": {
    "these": 1.0
  },
  "then these": {
    "sub": 1.0
  },
  "these sub": {
    "classes": 1.0
  },
  "classes are": {
    "further": 1.0
  },
  "are further": {
    "sub": 1.0
  },
  "further sub": {
    "divided": 1.0
  },
  "sub divided": {
    "into": 1.0
  },
  "divided into": {
    "sub": 1.0
  },
  "into sub": {
    "sub": 1.0
  },
  "sub sub": {
    "classes": 1.0
  },
  "classes this": {
    "sub": 0.5,
    "has": 0.5
  },
  "this sub": {
    "division": 1.0
  },
  "sub division": {
    "of": 1.0
  },
  "division of": {
    "classes": 1.0
  },
  "classes goes": {
    "on": 1.0
  },
  "goes on": {
    "until": 1.0
  },
  "on until": {
    "you": 1.0
  },
  "until you": {
    "get": 0.3333333333333333,
    "create": 0.3333333333333333,
    "unlock": 0.3333333333333333
  },
  "get all": {
    "the": 1.0
  },
  "individual object": {
    "a": 1.0
  },
  "object a": {
    "single": 1.0
  },
  "thing why": {
    "objects": 1.0
  },
  "objects object": {
    "oriented": 1.0
  },
  "oop techniques": {
    "w": 1.0
  },
  "techniques w": {
    "ere": 1.0
  },
  "w ere": {
    "developed": 1.0
  },
  "ere developed": {
    "to": 1.0
  },
  "developed to": {
    "let": 1.0
  },
  "to let": {
    "us": 1.0
  },
  "let us": {
    "more": 1.0
  },
  "us more": {
    "closely": 1.0
  },
  "more closely": {
    "model": 1.0
  },
  "closely model": {
    "the": 1.0
  },
  "model the": {
    "programs": 0.5,
    "hierarchical": 0.5
  },
  "the programs": {
    "we": 0.5,
    "that": 0.5
  },
  "programs we": {
    "write": 1.0
  },
  "we write": {
    "on": 1.0
  },
  "write on": {
    "the": 1.0
  },
  "way we": {
    "look": 1.0
  },
  "we look": {
    "at": 1.0
  },
  "real world": {
    "designing": 0.5,
    "problem": 0.5
  },
  "world designing": {
    "a": 1.0
  },
  "designing a": {
    "class": 1.0
  },
  "class hierarchy": {
    "to": 1.0
  },
  "hierarchy to": {
    "solve": 1.0
  },
  "solve a": {
    "real": 1.0
  },
  "world problem": {
    "is": 1.0
  },
  "problem is": {
    "a": 0.5,
    "during": 0.5
  },
  "of looking": {
    "at": 1.0
  },
  "looking at": {
    "the": 1.0
  },
  "the problem": {
    "from": 0.25,
    "one": 0.25,
    "is": 0.25,
    "and": 0.25
  },
  "problem from": {
    "the": 1.0
  },
  "same perspective": {
    "that": 1.0
  },
  "perspective that": {
    "we": 1.0
  },
  "the natural": {
    "wor": 1.0
  },
  "natural wor": {
    "ld": 1.0
  },
  "wor ld": {
    "we": 1.0
  },
  "ld we": {
    "start": 1.0
  },
  "we start": {
    "at": 1.0
  },
  "start at": {
    "the": 0.5,
    "10": 0.5
  },
  "most abstract": {
    "general": 1.0
  },
  "abstract general": {
    "classes": 1.0
  },
  "general classes": {
    "that": 1.0
  },
  "behaviors common": {
    "to": 1.0
  },
  "all members": {
    "of": 1.0
  },
  "members of": {
    "the": 1.0
  },
  "then derive": {
    "from": 1.0
  },
  "from those": {
    "abstract": 1.0
  },
  "those abstract": {
    "classes": 1.0
  },
  "abstract classes": {
    "the": 1.0
  },
  "the specific": {
    "classes": 0.16666666666666666,
    "code": 0.16666666666666666,
    "derived": 0.16666666666666666,
    "clarion": 0.16666666666666666,
    "action": 0.3333333333333333
  },
  "specific classes": {
    "that": 0.5,
    "31": 0.5
  },
  "that fully": {
    "describe": 1.0
  },
  "fully describe": {
    "the": 1.0
  },
  "the set": {
    "of": 0.1111111111111111,
    "statement": 0.6666666666666666,
    "you": 0.1111111111111111,
    "next": 0.1111111111111111
  },
  "of individual": {
    "objects": 1.0
  },
  "individual objects": {
    "in": 1.0
  },
  "objects in": {
    "the": 1.0
  },
  "problem one": {
    "m": 1.0
  },
  "one m": {
    "ajor": 1.0
  },
  "ajor benefit": {
    "of": 1.0
  },
  "benefit of": {
    "object": 0.3333333333333333,
    "encapsulation": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "is extensive": {
    "code": 1.0
  },
  "extensive code": {
    "re": 1.0
  },
  "use once": {
    "a": 1.0
  },
  "once a": {
    "behavior": 1.0
  },
  "a behavior": {
    "method": 1.0
  },
  "behavior method": {
    "has": 1.0
  },
  "method has": {
    "been": 1.0
  },
  "been coded": {
    "for": 1.0
  },
  "coded for": {
    "the": 1.0
  },
  "the more": {
    "general": 0.6666666666666666,
    "commonly": 0.3333333333333333
  },
  "more general": {
    "class": 0.3333333333333333,
    "abstract": 0.3333333333333333,
    "purpose": 0.3333333333333333
  },
  "general class": {
    "it": 1.0
  },
  "it never": {
    "needs": 1.0
  },
  "never needs": {
    "to": 1.0
  },
  "be re": {
    "written": 1.0
  },
  "re written": {
    "for": 1.0
  },
  "written for": {
    "the": 0.5,
    "lan": 0.5
  },
  "classes in": {
    "which": 1.0
  },
  "not need": {
    "to": 1.0
  },
  "to change": {
    "therefore": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "change therefore": {
    "it": 1.0
  },
  "is written": {
    "once": 1.0
  },
  "written once": {
    "and": 1.0
  },
  "once and": {
    "the": 1.0
  },
  "same code": {
    "is": 1.0
  },
  "is shared": {
    "amongst": 1.0
  },
  "shared amongst": {
    "all": 1.0
  },
  "amongst all": {
    "the": 1.0
  },
  "objects derived": {
    "from": 1.0
  },
  "class what": {
    "makes": 1.0
  },
  "three major": {
    "concepts": 1.0
  },
  "major concepts": {
    "in": 1.0
  },
  "concepts in": {
    "object": 1.0
  },
  "in object": {
    "orientation": 0.6666666666666666,
    "oriented": 0.3333333333333333
  },
  "object orientation": {
    "encapsulation": 0.3333333333333333,
    "that": 0.3333333333333333,
    "are": 0.3333333333333333
  },
  "orientation encapsulation": {
    "inheritance": 1.0
  },
  "language contains": {
    "object": 1.0
  },
  "contains object": {
    "oriented": 1.0
  },
  "oriented extens": {
    "ions": 1.0
  },
  "extens ions": {
    "that": 1.0
  },
  "ions that": {
    "cover": 1.0
  },
  "that cover": {
    "all": 1.0
  },
  "cover all": {
    "these": 1.0
  },
  "all these": {
    "concepts": 0.25,
    "complex": 0.25,
    "operations": 0.25,
    "attributes": 0.25
  },
  "concepts encapsulation": {
    "encapsulation": 1.0
  },
  "means bundling": {
    "the": 1.0
  },
  "bundling the": {
    "properties": 1.0
  },
  "class its": {
    "data": 1.0
  },
  "its data": {
    "members": 1.0
  },
  "data members": {
    "together": 0.07692307692307693,
    "into": 0.07692307692307693,
    "declared": 0.07692307692307693,
    "propertya": 0.07692307692307693,
    "that": 0.07692307692307693,
    "for": 0.07692307692307693,
    "to": 0.07692307692307693,
    "passing": 0.07692307692307693,
    "and": 0.3076923076923077,
    "properties": 0.07692307692307693
  },
  "members together": {
    "with": 1.0
  },
  "together with": {
    "its": 1.0
  },
  "with its": {
    "methods": 0.3333333333333333,
    "own": 0.6666666666666666
  },
  "its methods": {
    "the": 0.5,
    "can": 0.5
  },
  "methods the": {
    "procedures": 0.14285714285714285,
    "compiler": 0.14285714285714285,
    "methods": 0.14285714285714285,
    "same": 0.14285714285714285,
    "class": 0.14285714285714285,
    "most": 0.14285714285714285,
    "data": 0.14285714285714285
  },
  "procedures that": {
    "operate": 0.5,
    "may": 0.5
  },
  "members into": {
    "one": 1.0
  },
  "into one": {
    "coherent": 1.0
  },
  "one coherent": {
    "unit": 1.0
  },
  "coherent unit": {
    "the": 1.0
  },
  "unit the": {
    "most": 1.0
  },
  "most important": {
    "benefit": 0.3333333333333333,
    "concepts": 0.3333333333333333,
    "aspect": 0.3333333333333333
  },
  "important benefit": {
    "of": 1.0
  },
  "of encapsulation": {
    "is": 0.5,
    "between": 0.5
  },
  "to treat": {
    "the": 1.0
  },
  "treat the": {
    "object": 1.0
  },
  "single comp": {
    "lete": 1.0
  },
  "comp lete": {
    "entity": 1.0
  },
  "lete entity": {
    "this": 1.0
  },
  "entity this": {
    "lets": 1.0
  },
  "this lets": {
    "us": 0.5,
    "a": 0.5
  },
  "lets us": {
    "use": 0.5,
    "change": 0.5
  },
  "us use": {
    "the": 1.0
  },
  "object without": {
    "knowing": 0.5,
    "affecting": 0.5
  },
  "without knowing": {
    "everything": 0.3333333333333333,
    "at": 0.3333333333333333,
    "which": 0.3333333333333333
  },
  "knowing everything": {
    "about": 1.0
  },
  "everything about": {
    "it": 1.0
  },
  "it it": {
    "also": 1.0
  },
  "also lets": {
    "us": 1.0
  },
  "us change": {
    "one": 1.0
  },
  "change one": {
    "object": 1.0
  },
  "one object": {
    "without": 0.5,
    "to": 0.5
  },
  "without affecting": {
    "other": 1.0
  },
  "affecting other": {
    "unrelated": 1.0
  },
  "other unrelated": {
    "objects": 1.0
  },
  "unrelated objects": {
    "the": 1.0
  },
  "objects the": {
    "properties": 1.0
  },
  "the things": {
    "the": 1.0
  },
  "things the": {
    "object": 1.0
  },
  "object knows": {
    "about": 1.0
  },
  "knows about": {
    "itself": 1.0
  },
  "about itself": {
    "and": 1.0
  },
  "are its": {
    "beh": 1.0
  },
  "its beh": {
    "aviors": 1.0
  },
  "beh aviors": {
    "the": 1.0
  },
  "aviors the": {
    "operations": 1.0
  },
  "the operations": {
    "it": 1.0
  },
  "operations it": {
    "can": 1.0
  },
  "can perform": {
    "each": 0.5,
    "exclusive": 0.5
  },
  "perform each": {
    "object": 1.0
  },
  "has its": {
    "own": 1.0
  },
  "own properties": {
    "unique": 1.0
  },
  "properties unique": {
    "to": 1.0
  },
  "to itself": {
    "and": 1.0
  },
  "it shares": {
    "the": 1.0
  },
  "same methods": {
    "with": 1.0
  },
  "methods with": {
    "all": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "with all": {
    "the": 0.5,
    "other": 0.5
  },
  "other objects": {
    "of": 1.0
  },
  "type other": {
    "object": 1.0
  },
  "other object": {
    "instances": 0.25,
    "oriented": 0.75
  },
  "same class": {
    "for": 0.5,
    "in": 0.5
  },
  "class for": {
    "example": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "example objects": {
    "that": 1.0
  },
  "class such": {
    "as": 1.0
  },
  "class normal": {
    "healthy": 1.0
  },
  "normal healthy": {
    "human": 1.0
  },
  "healthy human": {
    "beings": 1.0
  },
  "human beings": {
    "each": 1.0
  },
  "beings each": {
    "have": 1.0
  },
  "each have": {
    "their": 1.0
  },
  "have their": {
    "own": 1.0
  },
  "their own": {
    "unique": 0.3333333333333333,
    "class": 0.3333333333333333,
    "method": 0.3333333333333333
  },
  "own unique": {
    "set": 1.0
  },
  "unique set": {
    "of": 1.0
  },
  "properties like": {
    "blue": 1.0
  },
  "like blue": {
    "eyes": 1.0
  },
  "blue eyes": {
    "or": 1.0
  },
  "eyes or": {
    "brown": 1.0
  },
  "or brown": {
    "eyes": 1.0
  },
  "brown eyes": {
    "but": 1.0
  },
  "eyes but": {
    "they": 1.0
  },
  "same basic": {
    "abilities": 1.0
  },
  "basic abilities": {
    "common": 1.0
  },
  "abilities common": {
    "to": 1.0
  },
  "of objects": {
    "to": 0.5,
    "and": 0.5
  },
  "objects to": {
    "which": 1.0
  },
  "they belong": {
    "vision": 1.0
  },
  "belong vision": {
    "inheritance": 1.0
  },
  "vision inheritance": {
    "inheritance": 1.0
  },
  "inheritance inheritance": {
    "is": 1.0
  },
  "mechanism that": {
    "allows": 0.6666666666666666,
    "gets": 0.3333333333333333
  },
  "allows us": {
    "to": 1.0
  },
  "us to": {
    "build": 0.5,
    "handle": 0.5
  },
  "to build": {
    "hierarchies": 0.25,
    "the": 0.25,
    "an": 0.5
  },
  "build hierarchies": {
    "of": 1.0
  },
  "hierarchies of": {
    "classes": 1.0
  },
  "derived its": {
    "base": 1.0
  },
  "its base": {
    "class": 1.0
  },
  "this provides": {
    "the": 1.0
  },
  "provides the": {
    "derived": 0.25,
    "benefits": 0.25,
    "link": 0.25,
    "fileerrorcode": 0.25
  },
  "class with": {
    "a": 0.3333333333333333,
    "exactly": 0.3333333333333333,
    "its": 0.3333333333333333
  },
  "a starting": {
    "point": 0.5,
    "po": 0.5
  },
  "starting point": {
    "of": 0.3333333333333333,
    "and": 0.16666666666666666,
    "look": 0.16666666666666666,
    "it": 0.16666666666666666,
    "parameters": 0.16666666666666666
  },
  "point of": {
    "all": 0.5,
    "sequential": 0.5
  },
  "of all": {
    "the": 1.0
  },
  "general abstract": {
    "class": 1.0
  },
  "abstract class": {
    "then": 1.0
  },
  "can add": {
    "the": 1.0
  },
  "that differentiate": {
    "it": 1.0
  },
  "differentiate it": {
    "from": 1.0
  },
  "parent inheritance": {
    "is": 1.0
  },
  "also a": {
    "core": 0.5,
    "procedure": 0.5
  },
  "a core": {
    "element": 1.0
  },
  "core element": {
    "of": 1.0
  },
  "element of": {
    "object": 1.0
  },
  "orientation that": {
    "provides": 1.0
  },
  "that provides": {
    "for": 0.5,
    "some": 0.5
  },
  "provides for": {
    "code": 0.5,
    "individual": 0.5
  },
  "for code": {
    "re": 1.0
  },
  "for inherited": {
    "methods": 1.0
  },
  "not overridden": {
    "in": 1.0
  },
  "class exists": {
    "only": 1.0
  },
  "exists only": {
    "once": 1.0
  },
  "only once": {
    "in": 0.5,
    "each": 0.5
  },
  "once in": {
    "the": 1.0
  },
  "defined clarion": {
    "language": 1.0
  },
  "guide 26": {
    "polymorphism": 1.0
  },
  "26 polymorphism": {
    "polymorphism": 1.0
  },
  "polymorphism polymorphism": {
    "generically": 1.0
  },
  "polymorphism generically": {
    "means": 1.0
  },
  "generically means": {
    "being": 1.0
  },
  "means being": {
    "able": 1.0
  },
  "being able": {
    "to": 1.0
  },
  "that operates": {
    "differentl": 1.0
  },
  "operates differentl": {
    "y": 1.0
  },
  "differentl y": {
    "depending": 1.0
  },
  "y depending": {
    "on": 1.0
  },
  "depending on": {
    "how": 0.5,
    "whether": 0.5
  },
  "on how": {
    "it": 1.0
  },
  "clarion open": {
    "statement": 1.0
  },
  "open statement": {
    "is": 0.5,
    "s": 0.5
  },
  "is polymorphic": {
    "because": 1.0
  },
  "polymorphic because": {
    "it": 1.0
  },
  "it performs": {
    "different": 1.0
  },
  "performs different": {
    "operations": 1.0
  },
  "different operations": {
    "depending": 1.0
  },
  "operations depending": {
    "on": 1.0
  },
  "on whether": {
    "it": 1.0
  },
  "is given": {
    "a": 1.0
  },
  "given a": {
    "file": 1.0
  },
  "file or": {
    "a": 0.16666666666666666,
    "view": 0.8333333333333334
  },
  "a window": {
    "to": 1.0
  },
  "window to": {
    "open": 1.0
  },
  "to open": {
    "this": 1.0
  },
  "open this": {
    "type": 1.0
  },
  "polymorphism is": {
    "generally": 0.5,
    "the": 0.5
  },
  "is generally": {
    "called": 0.3333333333333333,
    "referred": 0.3333333333333333,
    "best": 0.3333333333333333
  },
  "generally called": {
    "procedure": 1.0
  },
  "called procedure": {
    "overload": 1.0
  },
  "procedure overload": {
    "ing": 1.0
  },
  "overload ing": {
    "because": 1.0
  },
  "ing because": {
    "you": 1.0
  },
  "because you": {
    "are": 1.0
  },
  "are overloading": {
    "what": 1.0
  },
  "overloading what": {
    "appears": 1.0
  },
  "what appears": {
    "to": 1.0
  },
  "appears to": {
    "be": 1.0
  },
  "be one": {
    "procedure": 1.0
  },
  "one procedure": {
    "call": 1.0
  },
  "procedure call": {
    "with": 0.5,
    "at": 0.5
  },
  "call with": {
    "multiple": 1.0
  },
  "with multiple": {
    "operations": 1.0
  },
  "multiple operations": {
    "actually": 1.0
  },
  "operations actually": {
    "procedure": 1.0
  },
  "actually procedure": {
    "overloading": 1.0
  },
  "overloading is": {
    "simply": 1.0
  },
  "is simply": {
    "done": 1.0
  },
  "simply done": {
    "in": 1.0
  },
  "done in": {
    "clarion": 1.0
  },
  "clarion by": {
    "defining": 0.5,
    "placing": 0.5
  },
  "by defining": {
    "separate": 0.3333333333333333,
    "a": 0.3333333333333333,
    "triggers": 0.3333333333333333
  },
  "defining separate": {
    "procedures": 1.0
  },
  "separate procedures": {
    "with": 1.0
  },
  "procedures with": {
    "the": 1.0
  },
  "but different": {
    "parameter": 1.0
  },
  "lists see": {
    "procedure": 1.0
  },
  "procedure ove": {
    "rloading": 1.0
  },
  "ove rloading": {
    "in": 1.0
  },
  "rloading in": {
    "the": 1.0
  },
  "reference for": {
    "a": 1.0
  },
  "complete discussion": {
    "of": 1.0
  },
  "this topic": {
    "polymorphism": 1.0
  },
  "topic polymorphism": {
    "in": 1.0
  },
  "oriented parlance": {
    "is": 1.0
  },
  "parlance is": {
    "more": 1.0
  },
  "more commonly": {
    "taken": 0.5,
    "used": 0.5
  },
  "commonly taken": {
    "to": 1.0
  },
  "taken to": {
    "mean": 1.0
  },
  "to mean": {
    "the": 1.0
  },
  "mean the": {
    "ability": 1.0
  },
  "ability of": {
    "a": 1.0
  },
  "call methods": {
    "of": 1.0
  },
  "knowing at": {
    "compile": 1.0
  },
  "time exactly": {
    "what": 1.0
  },
  "what method": {
    "is": 1.0
  },
  "is actually": {
    "going": 0.3333333333333333,
    "almost": 0.3333333333333333,
    "possible": 0.3333333333333333
  },
  "actually going": {
    "to": 1.0
  },
  "called this": {
    "is": 1.0
  },
  "called using": {
    "virtual": 1.0
  },
  "methods if": {
    "you": 1.0
  },
  "at inheritance": {
    "as": 1.0
  },
  "inheritance as": {
    "the": 1.0
  },
  "class being": {
    "able": 1.0
  },
  "call dow": {
    "n": 1.0
  },
  "dow n": {
    "to": 1.0
  },
  "n to": {
    "base": 1.0
  },
  "to base": {
    "class": 1.0
  },
  "methods then": {
    "you": 1.0
  },
  "then you": {
    "can": 0.3333333333333333,
    "would": 0.3333333333333333,
    "must": 0.3333333333333333
  },
  "also look": {
    "at": 1.0
  },
  "at virtual": {
    "methods": 1.0
  },
  "methods as": {
    "the": 1.0
  },
  "to derived": {
    "class": 1.0
  },
  "this seems": {
    "like": 1.0
  },
  "seems like": {
    "a": 1.0
  },
  "a bit": {
    "of": 0.5,
    "smaller": 0.5
  },
  "bit of": {
    "magic": 1.0
  },
  "of magic": {
    "since": 1.0
  },
  "magic since": {
    "the": 1.0
  },
  "can never": {
    "know": 1.0
  },
  "never know": {
    "what": 1.0
  },
  "what classes": {
    "have": 1.0
  },
  "classes have": {
    "been": 1.0
  },
  "been derived": {
    "from": 1.0
  },
  "to handle": {
    "virtual": 0.16666666666666666,
    "the": 0.16666666666666666,
    "this": 0.3333333333333333,
    "other": 0.16666666666666666,
    "implementi": 0.16666666666666666
  },
  "handle virtual": {
    "methods": 1.0
  },
  "must implement": {
    "late": 1.0
  },
  "implement late": {
    "binding": 1.0
  },
  "binding instead": {
    "of": 1.0
  },
  "of early": {
    "binding": 1.0
  },
  "binding when": {
    "creating": 1.0
  },
  "when creating": {
    "the": 1.0
  },
  "creating the": {
    "executable": 1.0
  },
  "executable with": {
    "early": 1.0
  },
  "with early": {
    "binding": 1.0
  },
  "binding the": {
    "compiler": 1.0
  },
  "compiler can": {
    "resolve": 1.0
  },
  "can resolve": {
    "a": 1.0
  },
  "resolve a": {
    "non": 1.0
  },
  "a non": {
    "virtual": 0.5,
    "oop": 0.5
  },
  "non virtual": {
    "procedure": 1.0
  },
  "virtual procedure": {
    "call": 1.0
  },
  "call at": {
    "compile": 1.0
  },
  "specific code": {
    "address": 0.5,
    "addresses": 0.5
  },
  "code address": {
    "in": 1.0
  },
  "address in": {
    "the": 1.0
  },
  "executable this": {
    "means": 1.0
  },
  "a direct": {
    "call": 1.0
  },
  "direct call": {
    "to": 1.0
  },
  "very effici": {
    "ent": 1.0
  },
  "effici ent": {
    "however": 1.0
  },
  "ent however": {
    "with": 1.0
  },
  "however with": {
    "late": 1.0
  },
  "with late": {
    "binding": 1.0
  },
  "must at": {
    "compile": 1.0
  },
  "time create": {
    "a": 1.0
  },
  "table vmt": {
    "that": 1.0
  },
  "vmt that": {
    "contains": 1.0
  },
  "that contains": {
    "the": 1.0
  },
  "code addresses": {
    "of": 1.0
  },
  "addresses of": {
    "all": 1.0
  },
  "methods it": {
    "then": 0.5,
    "has": 0.5
  },
  "it then": {
    "must": 0.5,
    "its": 0.5
  },
  "then must": {
    "insert": 1.0
  },
  "must insert": {
    "code": 1.0
  },
  "insert code": {
    "that": 1.0
  },
  "that resolves": {
    "at": 1.0
  },
  "resolves at": {
    "run": 1.0
  },
  "time each": {
    "call": 1.0
  },
  "each call": {
    "to": 1.0
  },
  "a virtu": {
    "al": 1.0
  },
  "virtu al": {
    "meth": 1.0
  },
  "al meth": {
    "od": 1.0
  },
  "meth od": {
    "by": 1.0
  },
  "od by": {
    "first": 1.0
  },
  "by first": {
    "looking": 1.0
  },
  "first looking": {
    "for": 1.0
  },
  "looking for": {
    "the": 1.0
  },
  "the vmt": {
    "then": 1.0
  },
  "vmt then": {
    "calling": 1.0
  },
  "then calling": {
    "the": 1.0
  },
  "calling the": {
    "appropriate": 0.3333333333333333,
    "car": 0.3333333333333333,
    "ob": 0.3333333333333333
  },
  "the appropriate": {
    "method": 0.5,
    "file": 0.5
  },
  "appropriate method": {
    "this": 1.0
  },
  "this may": {
    "seem": 1.0
  },
  "seem like": {
    "it": 0.3333333333333333,
    "a": 0.6666666666666666
  },
  "like it": {
    "would": 1.0
  },
  "it would": {
    "create": 0.25,
    "not": 0.25,
    "automatically": 0.25,
    "be": 0.25
  },
  "would create": {
    "a": 1.0
  },
  "a fairly": {
    "large": 1.0
  },
  "fairly large": {
    "performance": 1.0
  },
  "large performance": {
    "hit": 1.0
  },
  "hit but": {
    "with": 1.0
  },
  "but with": {
    "the": 1.0
  },
  "the highly": {
    "efficient": 1.0
  },
  "highly efficient": {
    "clarion": 1.0
  },
  "efficient clarion": {
    "compiler": 1.0
  },
  "clarion compiler": {
    "it": 1.0
  },
  "compiler it": {
    "is": 1.0
  },
  "actually almost": {
    "as": 1.0
  },
  "almost as": {
    "fast": 1.0
  },
  "as fast": {
    "as": 1.0
  },
  "fast as": {
    "calling": 0.5,
    "possible": 0.5
  },
  "as calling": {
    "a": 1.0
  },
  "calling a": {
    "no": 1.0
  },
  "a no": {
    "n": 1.0
  },
  "no n": {
    "virtual": 1.0
  },
  "n virtual": {
    "me": 1.0
  },
  "me thod": {
    "this": 1.0
  },
  "thod this": {
    "virtual": 1.0
  },
  "this virtual": {
    "method": 1.0
  },
  "method type": {
    "of": 1.0
  },
  "handle the": {
    "individual": 1.0
  },
  "individual differences": {
    "between": 1.0
  },
  "between classes": {
    "derived": 1.0
  },
  "same base": {
    "class": 1.0
  },
  "class while": {
    "also": 1.0
  },
  "while also": {
    "allowing": 1.0
  },
  "also allowing": {
    "the": 1.0
  },
  "allowing the": {
    "base": 0.5,
    "back": 0.5
  },
  "class to": {
    "ignore": 0.1111111111111111,
    "which": 0.2222222222222222,
    "access": 0.1111111111111111,
    "contain": 0.1111111111111111,
    "explicitly": 0.1111111111111111,
    "derive": 0.1111111111111111,
    "call": 0.2222222222222222
  },
  "to ignore": {
    "those": 1.0
  },
  "ignore those": {
    "differences": 1.0
  },
  "those differences": {
    "this": 1.0
  },
  "differences this": {
    "lets": 1.0
  },
  "lets a": {
    "common": 1.0
  },
  "a common": {
    "method": 0.3333333333333333,
    "move": 0.3333333333333333,
    "set": 0.3333333333333333
  },
  "common method": {
    "i": 0.5,
    "of": 0.5
  },
  "method i": {
    "n": 1.0
  },
  "i n": {
    "a": 0.2,
    "the": 0.6,
    "1": 0.2
  },
  "n a": {
    "base": 1.0
  },
  "class call": {
    "a": 1.0
  },
  "one of": {
    "its": 0.5,
    "two": 0.5
  },
  "its derived": {
    "classes": 1.0
  },
  "classes to": {
    "specifically": 0.5,
    "create": 0.5
  },
  "to specifically": {
    "handle": 1.0
  },
  "specifically handle": {
    "some": 1.0
  },
  "handle some": {
    "operation": 1.0
  },
  "some operation": {
    "in": 1.0
  },
  "operation in": {
    "a": 1.0
  },
  "a manner": {
    "appropriate": 1.0
  },
  "manner appropriate": {
    "to": 1.0
  },
  "specific derived": {
    "class": 1.0
  },
  "example suppose": {
    "we": 1.0
  },
  "suppose we": {
    "have": 1.0
  },
  "a vehicle": {
    "class": 1.0
  },
  "vehicle class": {
    "which": 0.3333333333333333,
    "the": 0.3333333333333333,
    "it": 0.3333333333333333
  },
  "which contains": {
    "a": 1.0
  },
  "to steer": {
    "the": 0.3333333333333333,
    "themselves": 0.3333333333333333,
    "itself": 0.3333333333333333
  },
  "steer the": {
    "vehicle": 1.0
  },
  "the vehicle": {
    "be": 0.3333333333333333,
    "class": 0.6666666666666666
  },
  "vehicle be": {
    "cause": 1.0
  },
  "be cause": {
    "all": 1.0
  },
  "cause all": {
    "vehicles": 1.0
  },
  "all vehicles": {
    "must": 1.0
  },
  "vehicles must": {
    "have": 1.0
  },
  "have some": {
    "way": 1.0
  },
  "steer themselves": {
    "when": 1.0
  },
  "themselves when": {
    "you": 1.0
  },
  "a bicycle": {
    "class": 0.3333333333333333,
    "then": 0.3333333333333333,
    "to": 0.3333333333333333
  },
  "bicycle class": {
    "from": 1.0
  },
  "class contains": {
    "its": 0.3333333333333333,
    "a": 0.6666666666666666
  },
  "contains its": {
    "own": 1.0
  },
  "own specific": {
    "steer": 1.0
  },
  "specific steer": {
    "virtual": 1.0
  },
  "steer virtual": {
    "method": 1.0
  },
  "method appropriate": {
    "to": 1.0
  },
  "bicycle then": {
    "when": 1.0
  },
  "a car": {
    "class": 0.3333333333333333,
    "of": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "car class": {
    "from": 1.0
  },
  "method for": {
    "a": 1.0
  },
  "car of": {
    "course": 1.0
  },
  "course both": {
    "the": 1.0
  },
  "both the": {
    "bicycle": 0.16666666666666666,
    "base": 0.5,
    "hardware": 0.16666666666666666,
    "client": 0.16666666666666666
  },
  "the bicycle": {
    "and": 0.5,
    "s": 0.5
  },
  "bicycle and": {
    "car": 1.0
  },
  "and car": {
    "derived": 1.0
  },
  "car derived": {
    "classes": 1.0
  },
  "classes also": {
    "inherit": 1.0
  },
  "also inherit": {
    "a": 1.0
  },
  "inherit a": {
    "common": 1.0
  },
  "common move": {
    "method": 1.0
  },
  "move method": {
    "which": 0.5,
    "does": 0.5
  },
  "method which": {
    "calls": 1.0
  },
  "the steer": {
    "method": 1.0
  },
  "steer method": {
    "the": 0.3333333333333333,
    "or": 0.3333333333333333,
    "at": 0.3333333333333333
  },
  "inherited move": {
    "method": 1.0
  },
  "method does": {
    "not": 0.5,
    "code": 0.25,
    "nothing": 0.25
  },
  "not know": {
    "or": 1.0
  },
  "know or": {
    "care": 1.0
  },
  "or care": {
    "whether": 1.0
  },
  "care whether": {
    "it": 1.0
  },
  "s actual": {
    "ly": 1.0
  },
  "actual ly": {
    "calling": 1.0
  },
  "ly calling": {
    "the": 1.0
  },
  "the car": {
    "s": 1.0
  },
  "car s": {
    "steer": 1.0
  },
  "s steer": {
    "method": 1.0
  },
  "bicycle s": {
    "steer": 1.0
  },
  "method at": {
    "runtime": 1.0
  },
  "runtime it": {
    "just": 1.0
  },
  "just tells": {
    "the": 1.0
  },
  "object whether": {
    "it": 1.0
  },
  "car or": {
    "a": 1.0
  },
  "bicycle to": {
    "steer": 1.0
  },
  "steer itself": {
    "and": 1.0
  },
  "does clarion": {
    "s": 1.0
  },
  "extensions the": {
    "specific": 1.0
  },
  "specific clarion": {
    "language": 1.0
  },
  "language syntax": {
    "that": 1.0
  },
  "declare c": {
    "lasses": 1.0
  },
  "c lasses": {
    "of": 1.0
  },
  "lasses of": {
    "objects": 1.0
  },
  "objects and": {
    "derive": 1.0
  },
  "and derive": {
    "classes": 1.0
  },
  "derive classes": {
    "from": 1.0
  },
  "classes from": {
    "previously": 0.5,
    "which": 0.5
  },
  "from previously": {
    "declared": 1.0
  },
  "declared base": {
    "classes": 1.0
  },
  "classes starts": {
    "with": 1.0
  },
  "object class": {
    "containing": 1.0
  },
  "class containing": {
    "properties": 0.5,
    "its": 0.5
  },
  "containing properties": {
    "and": 1.0
  },
  "and declaring": {
    "the": 1.0
  },
  "class are": {
    "the": 0.3333333333333333,
    "defined": 0.3333333333333333,
    "public": 0.3333333333333333
  },
  "members declared": {
    "in": 1.0
  },
  "procedures prototyped": {
    "in": 1.0
  },
  "example declares": {
    "a": 0.6666666666666666,
    "one": 0.3333333333333333
  },
  "a very": {
    "simple": 0.4,
    "brief": 0.2,
    "few": 0.2,
    "efficient": 0.2
  },
  "very simple": {
    "class": 0.5,
    "order": 0.5
  },
  "simple class": {
    "structure": 1.0
  },
  "structure someclass": {
    "c": 1.0
  },
  "someclass c": {
    "lass": 1.0
  },
  "c lass": {
    "module": 1.0
  },
  "lass module": {
    "someclas": 1.0
  },
  "module someclas": {
    "clw": 1.0
  },
  "someclas clw": {
    "propertya": 0.2,
    "file": 0.4,
    "type": 0.2,
    "source": 0.2
  },
  "clw propertya": {
    "long": 1.0
  },
  "propertya long": {
    "data": 0.09090909090909091,
    "propertyb": 0.9090909090909091
  },
  "long data": {
    "member": 1.0
  },
  "data member": {
    "property": 1.0
  },
  "member property": {
    "propertyb": 1.0
  },
  "property propertyb": {
    "long": 1.0
  },
  "propertyb long": {
    "manipulateaandb": 0.9,
    "initaandb": 0.1
  },
  "long manipulateaandb": {
    "procedure": 1.0
  },
  "manipulateaandb procedure": {
    "method": 0.038461538461538464,
    "the": 0.038461538461538464,
    "exists": 0.038461538461538464,
    "code": 0.038461538461538464,
    "someclass": 0.038461538461538464,
    "end": 0.3076923076923077,
    "override": 0.07692307692307693,
    "product": 0.038461538461538464,
    "doubleproduct": 0.038461538461538464,
    "construct": 0.038461538461538464,
    "virtual": 0.2692307692307692,
    "base": 0.038461538461538464
  },
  "end this": {
    "class": 0.2,
    "example": 0.2,
    "technique": 0.2,
    "code": 0.4
  },
  "this class": {
    "is": 1.0
  },
  "is named": {
    "someclass": 1.0
  },
  "named someclass": {
    "and": 1.0
  },
  "someclass and": {
    "it": 0.3333333333333333,
    "passing": 0.3333333333333333,
    "anotherclassref": 0.3333333333333333
  },
  "contains two": {
    "properties": 1.0
  },
  "properties data": {
    "members": 1.0
  },
  "members propertya": {
    "and": 1.0
  },
  "propertya and": {
    "propertyb": 1.0
  },
  "and propertyb": {
    "it": 1.0
  },
  "propertyb it": {
    "also": 1.0
  },
  "contains one": {
    "method": 1.0
  },
  "one method": {
    "the": 0.5,
    "while": 0.5
  },
  "the manipulateaandb": {
    "procedure": 0.5,
    "method": 0.5
  },
  "module attribute": {
    "on": 0.5,
    "this": 0.5
  },
  "specifies that": {
    "the": 0.8,
    "data": 0.2
  },
  "code defining": {
    "the": 1.0
  },
  "defining the": {
    "manipulateaandb": 0.5,
    "primary": 0.5
  },
  "procedure exists": {
    "in": 1.0
  },
  "exists in": {
    "the": 1.0
  },
  "the someclas": {
    "clw": 1.0
  },
  "clw file": {
    "27": 0.5,
    "would": 0.5
  },
  "file 27": {
    "object": 1.0
  },
  "27 object": {
    "oriented": 1.0
  },
  "programming class": {
    "properties": 1.0
  },
  "properties the": {
    "properties": 1.0
  },
  "members that": {
    "a": 1.0
  },
  "class may": {
    "contain": 0.4,
    "seem": 0.2,
    "need": 0.2,
    "explicitly": 0.2
  },
  "contain are": {
    "limited": 1.0
  },
  "are limited": {
    "to": 1.0
  },
  "types that": {
    "are": 1.0
  },
  "are appropriate": {
    "to": 1.0
  },
  "a group": {
    "structure": 1.0
  },
  "group structure": {
    "this": 1.0
  },
  "types are": {
    "allowed": 1.0
  },
  "are allowed": {
    "long": 0.5,
    "there": 0.5
  },
  "allowed long": {
    "short": 1.0
  },
  "long short": {
    "real": 1.0
  },
  "short real": {
    "etc": 1.0
  },
  "real etc": {
    "including": 1.0
  },
  "etc including": {
    "group": 1.0
  },
  "including group": {
    "structures": 1.0
  },
  "group structures": {
    "but": 1.0
  },
  "structures but": {
    "complex": 1.0
  },
  "but complex": {
    "data": 1.0
  },
  "complex data": {
    "types": 1.0
  },
  "types file": {
    "queue": 1.0
  },
  "file queue": {
    "window": 1.0
  },
  "queue window": {
    "etc": 1.0
  },
  "window etc": {
    "are": 1.0
  },
  "etc are": {
    "not": 1.0
  },
  "not allowed": {
    "allowing": 0.2,
    "using": 0.2,
    "tell": 0.4,
    "cascading": 0.2
  },
  "allowed allowing": {
    "only": 1.0
  },
  "allowing only": {
    "simple": 1.0
  },
  "only simple": {
    "data": 1.0
  },
  "types in": {
    "a": 1.0
  },
  "a limitation": {
    "but": 1.0
  },
  "limitation but": {
    "it": 1.0
  },
  "it actually": {
    "is": 1.0
  },
  "actually is": {
    "not": 1.0
  },
  "not because": {
    "reference": 1.0
  },
  "because reference": {
    "variables": 1.0
  },
  "also allowed": {
    "more": 1.0
  },
  "allowed more": {
    "on": 1.0
  },
  "on this": {
    "later": 1.0
  },
  "this later": {
    "class": 1.0
  },
  "later class": {
    "methods": 1.0
  },
  "methods procedures": {
    "declared": 1.0
  },
  "procedures declared": {
    "in": 1.0
  },
  "named in": {
    "the": 1.0
  },
  "attribute this": {
    "encapsulates": 1.0
  },
  "this encapsulates": {
    "all": 1.0
  },
  "encapsulates all": {
    "the": 1.0
  },
  "single source": {
    "file": 0.5,
    "module": 0.5
  },
  "file making": {
    "maintenance": 1.0
  },
  "making maintenance": {
    "much": 0.5,
    "easier": 0.5
  },
  "maintenance much": {
    "easier": 1.0
  },
  "much easier": {
    "and": 1.0
  },
  "easier and": {
    "also": 1.0
  },
  "also offers": {
    "some": 1.0
  },
  "offers some": {
    "other": 1.0
  },
  "other advantages": {
    "that": 1.0
  },
  "advantages that": {
    "we": 1.0
  },
  "we will": {
    "get": 0.6,
    "use": 0.2,
    "not": 0.2
  },
  "will get": {
    "to": 1.0
  },
  "get to": {
    "later": 0.6666666666666666,
    "shortly": 0.3333333333333333
  },
  "to later": {
    "for": 0.5,
    "clarion": 0.5
  },
  "later for": {
    "the": 1.0
  },
  "declaration above": {
    "the": 1.0
  },
  "above the": {
    "someclas": 0.3333333333333333,
    "following": 0.6666666666666666
  },
  "file would": {
    "contain": 0.5,
    "not": 0.5
  },
  "contain code": {
    "similar": 1.0
  },
  "code similar": {
    "to": 1.0
  },
  "following someclass": {
    "manipulateaandb": 1.0
  },
  "someclass manipulateaandb": {
    "procedure": 0.6666666666666666,
    "call": 0.16666666666666666,
    "procedur": 0.16666666666666666
  },
  "code message": {
    "a": 0.5,
    "the": 0.5
  },
  "message a": {
    "self": 1.0
  },
  "a self": {
    "propertya": 1.0
  },
  "self propertya": {
    "message": 0.16666666666666666,
    "self": 0.6666666666666666,
    "passeda": 0.16666666666666666
  },
  "propertya message": {
    "b": 1.0
  },
  "message b": {
    "self": 1.0
  },
  "b self": {
    "propertyb": 1.0
  },
  "self propertyb": {
    "the": 0.1,
    "within": 0.1,
    "message": 0.2,
    "2": 0.2,
    "differentclass": 0.1,
    "in": 0.1,
    "localvar": 0.1,
    "passedb": 0.1
  },
  "propertyb the": {
    "label": 1.0
  },
  "statement b": {
    "egins": 1.0
  },
  "b egins": {
    "with": 1.0
  },
  "egins with": {
    "the": 1.0
  },
  "method belongs": {
    "prepended": 1.0
  },
  "belongs prepended": {
    "to": 1.0
  },
  "prepended to": {
    "the": 1.0
  },
  "and connected": {
    "with": 1.0
  },
  "connected with": {
    "a": 1.0
  },
  "a period": {
    "you": 1.0
  },
  "period you": {
    "can": 1.0
  },
  "also label": {
    "the": 1.0
  },
  "label the": {
    "method": 1.0
  },
  "and name": {
    "the": 1.0
  },
  "it belongs": {
    "as": 1.0
  },
  "belongs as": {
    "an": 1.0
  },
  "as an": {
    "implicit": 0.25,
    "array": 0.25,
    "ad": 0.25,
    "sql": 0.25
  },
  "an implicit": {
    "first": 1.0
  },
  "implicit first": {
    "parameter": 1.0
  },
  "first parameter": {
    "and": 1.0
  },
  "parameter and": {
    "labeling": 1.0
  },
  "and labeling": {
    "the": 1.0
  },
  "labeling the": {
    "classname": 1.0
  },
  "the classname": {
    "self": 1.0
  },
  "classname self": {
    "like": 1.0
  },
  "self like": {
    "this": 1.0
  },
  "like this": {
    "manipulateaandb": 0.2,
    "program": 0.2,
    "someclass": 0.2,
    "of": 0.2,
    "update": 0.2
  },
  "this manipulateaandb": {
    "procedure": 1.0
  },
  "procedure someclass": {
    "self": 0.5,
    "a": 0.5
  },
  "someclass self": {
    "code": 1.0
  },
  "self code": {
    "message": 1.0
  },
  "propertyb within": {
    "a": 1.0
  },
  "the self": {
    "keyword": 1.0
  },
  "self keyword": {
    "not": 1.0
  },
  "keyword not": {
    "the": 1.0
  },
  "class label": {
    "to": 1.0
  },
  "label to": {
    "address": 1.0
  },
  "to address": {
    "a": 1.0
  },
  "address a": {
    "property": 1.0
  },
  "current instance": {
    "of": 1.0
  },
  "object on": {
    "which": 1.0
  },
  "on which": {
    "the": 0.3333333333333333,
    "it": 0.6666666666666666
  },
  "is operating": {
    "creating": 1.0
  },
  "operating creating": {
    "objects": 1.0
  },
  "one specific": {
    "instance": 0.5,
    "record": 0.5
  },
  "specific instance": {
    "of": 1.0
  },
  "containing its": {
    "own": 1.0
  },
  "properties specific": {
    "to": 1.0
  },
  "specific to": {
    "that": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "that one": {
    "instance": 1.0
  },
  "instance all": {
    "object": 1.0
  },
  "all object": {
    "instances": 1.0
  },
  "class share": {
    "all": 0.5,
    "s": 0.5
  },
  "share all": {
    "the": 1.0
  },
  "class so": {
    "the": 1.0
  },
  "methods exist": {
    "only": 1.0
  },
  "exist only": {
    "once": 1.0
  },
  "once each": {
    "a": 1.0
  },
  "each a": {
    "class": 1.0
  },
  "declaration with": {
    "the": 1.0
  },
  "attribute only": {
    "declares": 1.0
  },
  "only declares": {
    "the": 1.0
  },
  "are no": {
    "objects": 0.5,
    "foreign": 0.5
  },
  "no objects": {
    "until": 1.0
  },
  "objects until": {
    "you": 1.0
  },
  "you create": {
    "an": 0.5,
    "a": 0.5
  },
  "create an": {
    "instance": 0.6,
    "object": 0.4
  },
  "also called": {
    "instantiation": 0.3333333333333333,
    "parent": 0.3333333333333333,
    "fat": 0.3333333333333333
  },
  "called instantiation": {
    "a": 1.0
  },
  "instantiation a": {
    "class": 1.0
  },
  "declaration w": {
    "ithout": 1.0
  },
  "w ithout": {
    "the": 1.0
  },
  "ithout the": {
    "type": 1.0
  },
  "attribute both": {
    "declares": 1.0
  },
  "both declares": {
    "the": 1.0
  },
  "and instantiates": {
    "it": 1.0
  },
  "instantiates it": {
    "creates": 1.0
  },
  "it creates": {
    "the": 1.0
  },
  "creates the": {
    "first": 0.5,
    "physical": 0.5
  },
  "first object": {
    "there": 1.0
  },
  "object declare": {
    "it": 1.0
  },
  "declare it": {
    "in": 1.0
  },
  "or create": {
    "one": 1.0
  },
  "create one": {
    "dynamically": 1.0
  },
  "one dynamically": {
    "in": 1.0
  },
  "dynamically in": {
    "executable": 1.0
  },
  "in executable": {
    "code": 1.0
  },
  "code using": {
    "new": 0.5,
    "the": 0.25,
    "this": 0.25
  },
  "using new": {
    "to": 0.3333333333333333,
    "declare": 0.3333333333333333,
    "is": 0.3333333333333333
  },
  "object in": {
    "the": 0.75,
    "local": 0.25
  },
  "the dat": {
    "a": 0.5,
    "abase": 0.5
  },
  "dat a": {
    "section": 1.0
  },
  "a section": {
    "simply": 1.0
  },
  "section simply": {
    "name": 1.0
  },
  "type program": {
    "someclass": 1.0
  },
  "program someclass": {
    "class": 1.0
  },
  "someclass class": {
    "creates": 0.07692307692307693,
    "type": 0.5384615384615384,
    "queref": 0.07692307692307693,
    "module": 0.07692307692307693,
    "declare": 0.07692307692307693,
    "propertya": 0.15384615384615385
  },
  "class creates": {
    "a": 1.0
  },
  "creates a": {
    "class": 0.5,
    "stu": 0.5
  },
  "instance propertya": {
    "long": 1.0
  },
  "long propertyb": {
    "long": 0.9,
    "lon": 0.1
  },
  "type creates": {
    "just": 1.0
  },
  "creates just": {
    "a": 1.0
  },
  "just a": {
    "class": 1.0
  },
  "class propertya": {
    "long": 1.0
  },
  "end someclassobject1": {
    "someclass": 1.0
  },
  "someclassobject1 someclass": {
    "create": 1.0
  },
  "someclass create": {
    "an": 0.3333333333333333,
    "the": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "of someclass": {
    "someclassobject2": 0.3333333333333333,
    "myclassobject1": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "someclass someclassobject2": {
    "so": 1.0
  },
  "someclassobject2 so": {
    "meclass": 1.0
  },
  "so meclass": {
    "another": 1.0
  },
  "meclass another": {
    "instance": 1.0
  },
  "another instance": {
    "of": 1.0
  },
  "someclass myclassobject1": {
    "myclass": 1.0
  },
  "myclassobject1 myclass": {
    "create": 1.0
  },
  "myclass create": {
    "an": 1.0
  },
  "of myclass": {
    "myclassobject2": 0.5,
    "code": 0.5
  },
  "myclass myclassobject2": {
    "myclass": 1.0
  },
  "myclassobject2 myclass": {
    "another": 1.0
  },
  "myclass another": {
    "instance": 1.0
  },
  "myclass code": {
    "clarion": 1.0
  },
  "code clarion": {
    "language": 1.0
  },
  "guide 28": {
    "an": 1.0
  },
  "28 an": {
    "object": 1.0
  },
  "goes out": {
    "of": 1.0
  },
  "of scope": {
    "for": 0.25,
    "and": 0.5,
    "the": 0.25
  },
  "scope for": {
    "example": 0.5,
    "all": 0.5
  },
  "example an": {
    "object": 0.5,
    "order": 0.5
  },
  "section goes": {
    "out": 1.0
  },
  "scope and": {
    "is": 0.5,
    "are": 0.5
  },
  "destroyed upon": {
    "return": 1.0
  },
  "upon return": {
    "from": 1.0
  },
  "procedure objects": {
    "declared": 1.0
  },
  "or module": {
    "data": 1.0
  },
  "section go": {
    "out": 1.0
  },
  "go out": {
    "of": 1.0
  },
  "are destroyed": {
    "only": 1.0
  },
  "destroyed only": {
    "when": 1.0
  },
  "only when": {
    "the": 1.0
  },
  "terminates to": {
    "create": 1.0
  },
  "object dynamically": {
    "in": 1.0
  },
  "new declare": {
    "a": 1.0
  },
  "variable for": {
    "the": 1.0
  },
  "then execute": {
    "a": 1.0
  },
  "reference assignment": {
    "statement": 1.0
  },
  "assignment statement": {
    "to": 0.3333333333333333,
    "for": 0.3333333333333333,
    "with": 0.3333333333333333
  },
  "statement to": {
    "the": 0.4444444444444444,
    "get": 0.1111111111111111,
    "extend": 0.1111111111111111,
    "prop": 0.1111111111111111,
    "retrieve": 0.1111111111111111,
    "perform": 0.1111111111111111
  },
  "the reference": {
    "variable": 1.0
  },
  "variable naming": {
    "the": 1.0
  },
  "naming the": {
    "class": 1.0
  },
  "to new": {
    "program": 0.5,
    "value": 0.5
  },
  "new program": {
    "someclass": 1.0
  },
  "type propertya": {
    "long": 1.0
  },
  "end someclassobjectref": {
    "someclass": 1.0
  },
  "someclassobjectref someclass": {
    "a": 1.0
  },
  "someclass a": {
    "reference": 0.5,
    "friend": 0.5
  },
  "a someclass": {
    "object": 1.0
  },
  "someclass object": {
    "code": 0.5,
    "which": 0.3333333333333333,
    "propertya": 0.16666666666666666
  },
  "object code": {
    "someclassobjectref": 0.2,
    "classref": 0.4,
    "twoclass": 0.2,
    "object1": 0.2
  },
  "code someclassobjectref": {
    "new": 1.0
  },
  "someclassobjectref new": {
    "someclass": 1.0
  },
  "new someclass": {
    "create": 1.0
  },
  "create the": {
    "object": 0.2,
    "queue": 0.4,
    "contained": 0.2,
    "dos": 0.2
  },
  "is important": {
    "to": 1.0
  },
  "to note": {
    "that": 1.0
  },
  "note that": {
    "when": 0.5,
    "the": 0.5
  },
  "use new": {
    "to": 1.0
  },
  "instantiate the": {
    "object": 0.5,
    "contained": 0.5
  },
  "object you": {
    "must": 0.3333333333333333,
    "then": 0.3333333333333333,
    "implement": 0.3333333333333333
  },
  "also use": {
    "dispose": 1.0
  },
  "to destroy": {
    "it": 1.0
  },
  "destroy it": {
    "when": 1.0
  },
  "it when": {
    "it": 0.5,
    "you": 0.5
  },
  "scope the": {
    "object": 1.0
  },
  "the advan": {
    "tage": 1.0
  },
  "advan tage": {
    "of": 1.0
  },
  "tage of": {
    "using": 1.0
  },
  "new is": {
    "the": 1.0
  },
  "to place": {
    "the": 0.5,
    "an": 0.5
  },
  "variable that": {
    "points": 1.0
  },
  "that points": {
    "at": 0.5,
    "to": 0.5
  },
  "points at": {
    "the": 1.0
  },
  "object inside": {
    "another": 1.0
  },
  "inside another": {
    "object": 1.0
  },
  "property using": {
    "references": 1.0
  },
  "using references": {
    "as": 1.0
  },
  "references as": {
    "properties": 1.0
  },
  "properties since": {
    "reference": 1.0
  },
  "since reference": {
    "variables": 1.0
  },
  "are valid": {
    "to": 0.3333333333333333,
    "overwriting": 0.3333333333333333,
    "for": 0.3333333333333333
  },
  "valid to": {
    "use": 1.0
  },
  "anywhere the": {
    "label": 1.0
  },
  "type they": {
    "reference": 1.0
  },
  "they reference": {
    "may": 1.0
  },
  "reference may": {
    "be": 1.0
  },
  "used they": {
    "allow": 1.0
  },
  "allow a": {
    "class": 1.0
  },
  "access all": {
    "the": 1.0
  },
  "the types": {
    "of": 1.0
  },
  "of complex": {
    "structures": 1.0
  },
  "complex structures": {
    "that": 0.3333333333333333,
    "for": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "structures that": {
    "cannot": 1.0
  },
  "that cannot": {
    "be": 0.5,
    "contain": 0.5
  },
  "be directly": {
    "declared": 1.0
  },
  "directly declared": {
    "inside": 1.0
  },
  "declared inside": {
    "the": 1.0
  },
  "class when": {
    "you": 1.0
  },
  "you couple": {
    "with": 1.0
  },
  "couple with": {
    "this": 1.0
  },
  "with this": {
    "the": 0.3333333333333333,
    "file": 0.3333333333333333,
    "use": 0.3333333333333333
  },
  "this the": {
    "use": 0.3333333333333333,
    "database": 0.3333333333333333,
    "actual": 0.3333333333333333
  },
  "of new": {
    "and": 1.0
  },
  "to dynamically": {
    "create": 1.0
  },
  "dynamically create": {
    "and": 0.5,
    "this": 0.5
  },
  "create and": {
    "destroy": 1.0
  },
  "destroy variables": {
    "a": 1.0
  },
  "variables a": {
    "nd": 1.0
  },
  "nd objects": {
    "you": 1.0
  },
  "objects you": {
    "give": 1.0
  },
  "you give": {
    "a": 1.0
  },
  "give a": {
    "class": 1.0
  },
  "to contain": {
    "almost": 0.5,
    "specific": 0.5
  },
  "contain almost": {
    "all": 1.0
  },
  "these complex": {
    "structures": 1.0
  },
  "structures for": {
    "example": 1.0
  },
  "example using": {
    "a": 1.0
  },
  "using a": {
    "reference": 0.3333333333333333,
    "standard": 0.3333333333333333,
    "join": 0.3333333333333333
  },
  "queue queue": {
    "that": 1.0
  },
  "queue that": {
    "is": 1.0
  },
  "is passed": {
    "to": 1.0
  },
  "passed to": {
    "the": 0.6666666666666666,
    "it": 0.3333333333333333
  },
  "of al": {
    "l": 1.0
  },
  "al l": {
    "the": 1.0
  },
  "l the": {
    "complex": 1.0
  },
  "the complex": {
    "data": 1.0
  },
  "types queue": {
    "file": 1.0
  },
  "queue file": {
    "key": 1.0
  },
  "file key": {
    "blob": 1.0
  },
  "key blob": {
    "view": 1.0
  },
  "blob view": {
    "or": 1.0
  },
  "view or": {
    "window": 1.0
  },
  "or window": {
    "although": 1.0
  },
  "window although": {
    "the": 1.0
  },
  "although the": {
    "class": 0.5,
    "derived": 0.5
  },
  "class cannot": {
    "directly": 1.0
  },
  "cannot directly": {
    "contain": 1.0
  },
  "directly contain": {
    "the": 1.0
  },
  "declaration of": {
    "these": 0.5,
    "a": 0.5
  },
  "structures the": {
    "class": 1.0
  },
  "can act": {
    "as": 1.0
  },
  "act as": {
    "if": 1.0
  },
  "if they": {
    "own": 0.3333333333333333,
    "are": 0.6666666666666666
  },
  "they own": {
    "the": 1.0
  },
  "own the": {
    "structure": 0.5,
    "file": 0.5
  },
  "structure just": {
    "as": 1.0
  },
  "as surely": {
    "as": 1.0
  },
  "surely as": {
    "the": 1.0
  },
  "the instance": {
    "owns": 1.0
  },
  "instance owns": {
    "its": 1.0
  },
  "owns its": {
    "own": 1.0
  },
  "members for": {
    "example": 1.0
  },
  "example although": {
    "a": 1.0
  },
  "although a": {
    "file": 1.0
  },
  "file declaration": {
    "must": 0.2,
    "field1key": 0.4,
    "referenced": 0.2,
    "it": 0.2
  },
  "declaration must": {
    "be": 1.0
  },
  "be external": {
    "to": 1.0
  },
  "external to": {
    "a": 1.0
  },
  "structure by": {
    "declaring": 1.0
  },
  "the file": {
    "file": 0.0125,
    "and": 0.05,
    "structure": 0.0125,
    "containing": 0.0125,
    "would": 0.0125,
    "you": 0.0125,
    "rela": 0.0125,
    "in": 0.0875,
    "the": 0.0875,
    "this": 0.0125,
    "its": 0.0125,
    "these": 0.025,
    "definition": 0.0125,
    "open": 0.025,
    "build": 0.0125,
    "is": 0.025,
    "other": 0.0125,
    "if": 0.05,
    "once": 0.0125,
    "without": 0.0125,
    "despite": 0.0125,
    "receives": 0.0125,
    "either": 0.0125,
    "read": 0.0125,
    "a": 0.0125,
    "has": 0.0125,
    "define": 0.0125,
    "s": 0.025,
    "someone": 0.0125,
    "driver": 0.225,
    "system": 0.0875,
    "lock": 0.025,
    "should": 0.0125,
    "declaration": 0.0125
  },
  "file file": {
    "within": 1.0
  },
  "file within": {
    "the": 1.0
  },
  "then executing": {
    "a": 1.0
  },
  "executing a": {
    "reference": 1.0
  },
  "statement for": {
    "a": 0.3333333333333333,
    "example": 0.6666666666666666
  },
  "a s": {
    "pecific": 1.0
  },
  "s pecific": {
    "file": 1.0
  },
  "pecific file": {
    "structure": 1.0
  },
  "file structure": {
    "to": 0.25,
    "as": 0.25,
    "itself": 0.25,
    "declarations": 0.25
  },
  "structure to": {
    "an": 1.0
  },
  "to an": {
    "object": 0.5,
    "index": 0.25,
    "absolute": 0.25
  },
  "class reference": {
    "variable": 1.0
  },
  "variable the": {
    "object": 1.0
  },
  "object can": {
    "own": 1.0
  },
  "can own": {
    "the": 1.0
  },
  "and its": {
    "methods": 0.25,
    "reverse": 0.25,
    "prototype": 0.25,
    "subsequent": 0.25
  },
  "can execute": {
    "any": 1.0
  },
  "execute any": {
    "statement": 1.0
  },
  "any statement": {
    "that": 1.0
  },
  "that requires": {
    "the": 1.0
  },
  "requires the": {
    "label": 1.0
  },
  "parameter effectively": {
    "operating": 1.0
  },
  "effectively operating": {
    "directl": 1.0
  },
  "operating directl": {
    "y": 1.0
  },
  "directl y": {
    "on": 1.0
  },
  "y on": {
    "the": 1.0
  },
  "of queue": {
    "group": 0.2,
    "structure": 0.2,
    "field1": 0.2,
    "construct": 0.2,
    "with": 0.2
  },
  "queue group": {
    "or": 1.0
  },
  "group or": {
    "class": 1.0
  },
  "or class": {
    "structure": 1.0
  },
  "structure queuename": {
    "groupname": 1.0
  },
  "queuename groupname": {
    "or": 1.0
  },
  "groupname or": {
    "classname": 1.0
  },
  "or classname": {
    "which": 1.0
  },
  "classname which": {
    "a": 1.0
  },
  "which a": {
    "class": 1.0
  },
  "method can": {
    "then": 0.5,
    "be": 0.5
  },
  "can then": {
    "dynamically": 0.5,
    "implement": 0.5
  },
  "then dynamically": {
    "create": 1.0
  },
  "create this": {
    "allows": 1.0
  },
  "contain specific": {
    "type": 1.0
  },
  "type s": {
    "of": 1.0
  },
  "s of": {
    "queues": 0.5,
    "relational": 0.5
  },
  "of queues": {
    "and": 1.0
  },
  "queues and": {
    "other": 1.0
  },
  "and other": {
    "named": 1.0
  },
  "other named": {
    "classes": 1.0
  },
  "named classes": {
    "without": 1.0
  },
  "classes without": {
    "the": 1.0
  },
  "the need": {
    "to": 0.5,
    "for": 0.5
  },
  "declare them": {
    "within": 1.0
  },
  "them within": {
    "the": 1.0
  },
  "structure containing": {
    "a": 1.0
  },
  "containing a": {
    "reference": 0.2,
    "slightly": 0.2,
    "someclass": 0.2,
    "value": 0.4
  },
  "structure myqueue": {
    "queue": 1.0
  },
  "myqueue queue": {
    "type": 1.0
  },
  "queue type": {
    "define": 0.5,
    "declare": 0.5
  },
  "type define": {
    "a": 1.0
  },
  "define a": {
    "specific": 1.0
  },
  "queue field1": {
    "long": 1.0
  },
  "field1 long": {
    "field2": 1.0
  },
  "long field2": {
    "string": 1.0
  },
  "field2 string": {
    "20": 0.2,
    "10": 0.8
  },
  "end someclass": {
    "class": 0.3333333333333333,
    "createque": 0.16666666666666666,
    "baseproc": 0.16666666666666666,
    "manipula": 0.16666666666666666,
    "manipulateaandb": 0.16666666666666666
  },
  "class queref": {
    "myqueue": 1.0
  },
  "queref myqueue": {
    "a": 1.0
  },
  "myqueue a": {
    "queue": 1.0
  },
  "queue with": {
    "a": 0.5,
    "one": 0.5
  },
  "long and": {
    "a": 1.0
  },
  "a string": {
    "20": 0.5,
    "variable": 0.5
  },
  "20 createque": {
    "procedure": 1.0
  },
  "createque procedure": {
    "create": 0.5,
    "code": 0.5
  },
  "procedure create": {
    "the": 1.0
  },
  "queue f": {
    "or": 1.0
  },
  "f or": {
    "each": 1.0
  },
  "or each": {
    "object": 1.0
  },
  "object end": {
    "someclass": 1.0
  },
  "someclass createque": {
    "procedure": 1.0
  },
  "self queref": {
    "new": 0.25,
    "field1": 0.25,
    "field2": 0.25,
    "and": 0.25
  },
  "queref new": {
    "myqueue": 1.0
  },
  "new myqueue": {
    "create": 0.6666666666666666,
    "someclass": 0.3333333333333333
  },
  "myqueue create": {
    "a": 0.5,
    "the": 0.5
  },
  "queue for": {
    "the": 1.0
  },
  "object self": {
    "queref": 1.0
  },
  "queref field1": {
    "1": 1.0
  },
  "field1 1": {
    "self": 1.0
  },
  "1 self": {
    "queref": 1.0
  },
  "queref field2": {
    "first": 1.0
  },
  "field2 first": {
    "entry": 1.0
  },
  "first entry": {
    "add": 0.5,
    "to": 0.5
  },
  "entry add": {
    "self": 1.0
  },
  "add self": {
    "queref": 0.5,
    "objectq": 0.5
  },
  "queref and": {
    "add": 1.0
  },
  "and add": {
    "the": 1.0
  },
  "entry to": {
    "the": 1.0
  },
  "queue if": {
    "errorcode": 1.0
  },
  "if errorcode": {
    "then": 0.7857142857142857,
    "if": 0.21428571428571427
  },
  "errorcode then": {
    "stop": 0.4375,
    "break": 0.5625
  },
  "then stop": {
    "error": 1.0
  },
  "stop error": {
    "29": 0.1,
    "end": 0.6,
    "stop": 0.3
  },
  "error 29": {
    "object": 1.0
  },
  "29 object": {
    "oriented": 1.0
  },
  "programming using": {
    "these": 1.0
  },
  "using these": {
    "named": 1.0
  },
  "these named": {
    "references": 1.0
  },
  "named references": {
    "and": 1.0
  },
  "references and": {
    "naming": 1.0
  },
  "and naming": {
    "a": 1.0
  },
  "naming a": {
    "reference": 1.0
  },
  "specific class": {
    "structure": 0.5,
    "of": 0.5
  },
  "structure makes": {
    "it": 1.0
  },
  "makes it": {
    "possible": 1.0
  },
  "it possible": {
    "for": 0.5,
    "to": 0.5
  },
  "possible for": {
    "one": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "for one": {
    "object": 0.3333333333333333,
    "second": 0.3333333333333333,
    "user": 0.3333333333333333
  },
  "to effectively": {
    "contain": 1.0
  },
  "effectively contain": {
    "an": 1.0
  },
  "contain an": {
    "instance": 1.0
  },
  "object this": {
    "is": 0.6666666666666666,
    "same": 0.3333333333333333
  },
  "technique known": {
    "as": 1.0
  },
  "as composition": {
    "which": 1.0
  },
  "which provides": {
    "an": 0.3333333333333333,
    "for": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "provides an": {
    "alternative": 1.0
  },
  "an alternative": {
    "to": 1.0
  },
  "alternative to": {
    "multiple": 1.0
  },
  "inheritance which": {
    "we": 1.0
  },
  "which we": {
    "will": 1.0
  },
  "to shortly": {
    "when": 1.0
  },
  "shortly when": {
    "we": 1.0
  },
  "when we": {
    "discuss": 1.0
  },
  "we discuss": {
    "inheritance": 1.0
  },
  "discuss inheritance": {
    "constructors": 1.0
  },
  "inheritance constructors": {
    "and": 1.0
  },
  "destructors constructors": {
    "and": 1.0
  },
  "are a": {
    "feature": 0.3333333333333333,
    "number": 0.3333333333333333,
    "part": 0.3333333333333333
  },
  "a feature": {
    "of": 1.0
  },
  "feature of": {
    "many": 1.0
  },
  "of many": {
    "object": 1.0
  },
  "many object": {
    "oriented": 1.0
  },
  "oriented languages": {
    "these": 0.25,
    "is": 0.25,
    "usually": 0.25,
    "you": 0.25
  },
  "languages these": {
    "are": 1.0
  },
  "which you": {
    "must": 0.6666666666666666,
    "are": 0.3333333333333333
  },
  "must write": {
    "that": 0.5,
    "extra": 0.5
  },
  "that execute": {
    "automatically": 0.5,
    "on": 0.5
  },
  "execute automatically": {
    "without": 1.0
  },
  "automatically without": {
    "being": 1.0
  },
  "without being": {
    "explicitly": 1.0
  },
  "being explicitly": {
    "called": 1.0
  },
  "explicitly called": {
    "a": 0.5,
    "all": 0.5
  },
  "a constructor": {
    "executes": 0.25,
    "method": 0.75
  },
  "executes when": {
    "the": 1.0
  },
  "is created": {
    "and": 0.5,
    "or": 0.5
  },
  "created and": {
    "a": 1.0
  },
  "a destructor": {
    "executes": 1.0
  },
  "is destroye": {
    "d": 1.0
  },
  "destroye d": {
    "the": 1.0
  },
  "d the": {
    "most": 1.0
  },
  "common purpose": {
    "of": 1.0
  },
  "constructor method": {
    "in": 0.16666666666666666,
    "destruct": 0.3333333333333333,
    "dispose": 0.16666666666666666,
    "to": 0.16666666666666666,
    "end": 0.16666666666666666
  },
  "initialize data": {
    "members": 1.0
  },
  "members to": {
    "prevent": 1.0
  },
  "to prevent": {
    "bugs": 0.5,
    "other": 0.5
  },
  "prevent bugs": {
    "that": 1.0
  },
  "bugs that": {
    "could": 1.0
  },
  "be caused": {
    "by": 1.0
  },
  "caused by": {
    "uninitialized": 1.0
  },
  "by uninitialized": {
    "variables": 1.0
  },
  "uninitialized variables": {
    "destructor": 1.0
  },
  "variables destructor": {
    "methods": 1.0
  },
  "destructor methods": {
    "in": 0.3333333333333333,
    "this": 0.3333333333333333,
    "named": 0.3333333333333333
  },
  "languages usually": {
    "just": 1.0
  },
  "usually just": {
    "de": 1.0
  },
  "just de": {
    "allocate": 1.0
  },
  "language automatically": {
    "allocates": 1.0
  },
  "automatically allocates": {
    "and": 1.0
  },
  "allocates and": {
    "de": 1.0
  },
  "and de": {
    "allocates": 1.0
  },
  "de allocates": {
    "memory": 1.0
  },
  "allocates memory": {
    "and": 1.0
  },
  "memory and": {
    "initializes": 1.0
  },
  "and initializes": {
    "variables": 1.0
  },
  "initializes variables": {
    "to": 1.0
  },
  "variables to": {
    "blank": 0.5,
    "complex": 0.5
  },
  "to blank": {
    "zero": 1.0
  },
  "blank zero": {
    "or": 1.0
  },
  "zero or": {
    "the": 1.0
  },
  "the value": {
    "named": 0.2,
    "in": 0.2,
    "that": 0.2,
    "of": 0.4
  },
  "value named": {
    "in": 1.0
  },
  "the variable": {
    "s": 1.0
  },
  "s declaration": {
    "this": 1.0
  },
  "declaration this": {
    "means": 1.0
  },
  "biggest reaso": {
    "n": 1.0
  },
  "reaso n": {
    "for": 1.0
  },
  "n for": {
    "supporting": 1.0
  },
  "for supporting": {
    "automatic": 1.0
  },
  "supporting automatic": {
    "constructors": 1.0
  },
  "destructors doesn": {
    "t": 1.0
  },
  "t exist": {
    "in": 1.0
  },
  "exist in": {
    "clarion": 0.2,
    "someclass": 0.4,
    "theory": 0.2,
    "the": 0.2
  },
  "clarion however": {
    "clarion": 1.0
  },
  "however clarion": {
    "does": 1.0
  },
  "clarion does": {
    "support": 1.0
  },
  "does support": {
    "automatic": 1.0
  },
  "support automatic": {
    "constructors": 1.0
  },
  "destructors anyway": {
    "if": 1.0
  },
  "anyway if": {
    "a": 1.0
  },
  "if a": {
    "class": 1.0
  },
  "construct which": {
    "must": 1.0
  },
  "procedure that": {
    "takes": 0.5,
    "while": 0.25,
    "called": 0.25
  },
  "that takes": {
    "no": 1.0
  },
  "takes no": {
    "parameters": 1.0
  },
  "no parameters": {
    "then": 1.0
  },
  "parameters then": {
    "that": 1.0
  },
  "then that": {
    "construct": 0.5,
    "destruct": 0.5
  },
  "that construct": {
    "method": 1.0
  },
  "called when": {
    "the": 0.6666666666666666,
    "an": 0.3333333333333333
  },
  "instantiated if": {
    "a": 1.0
  },
  "destruct also": {
    "a": 1.0
  },
  "that destruct": {
    "method": 1.0
  },
  "destroyed since": {
    "clarion": 1.0
  },
  "since clarion": {
    "automatically": 1.0
  },
  "clarion automatically": {
    "takes": 1.0
  },
  "automatically takes": {
    "care": 1.0
  },
  "takes care": {
    "of": 1.0
  },
  "care of": {
    "memory": 1.0
  },
  "of memory": {
    "allocation": 0.3333333333333333,
    "the": 0.3333333333333333,
    "another": 0.3333333333333333
  },
  "allocation and": {
    "initialization": 1.0
  },
  "and initialization": {
    "the": 1.0
  },
  "initialization the": {
    "most": 1.0
  },
  "common use": {
    "of": 1.0
  },
  "of constructors": {
    "and": 1.0
  },
  "program would": {
    "be": 1.0
  },
  "initialize and": {
    "dispose": 1.0
  },
  "s reference": {
    "variables": 1.0
  },
  "variables someclass": {
    "class": 1.0
  },
  "type objectq": {
    "myqueue": 1.0
  },
  "objectq myqueue": {
    "reference": 0.5,
    "construct": 0.5
  },
  "myqueue reference": {
    "to": 1.0
  },
  "queue construct": {
    "procedure": 1.0
  },
  "procedure constructor": {
    "method": 1.0
  },
  "method destruct": {
    "procedure": 1.0
  },
  "procedure destructor": {
    "method": 1.0
  },
  "end classref": {
    "someclass": 0.5,
    "anotherclass": 0.5
  },
  "classref someclass": {
    "reference": 1.0
  },
  "someclass reference": {
    "to": 1.0
  },
  "code classref": {
    "new": 1.0
  },
  "classref new": {
    "someclass": 0.5,
    "anotherclass": 0.5
  },
  "which auto": {
    "calls": 1.0
  },
  "auto calls": {
    "its": 1.0
  },
  "calls its": {
    "constructor": 0.6666666666666666,
    "destructor": 0.3333333333333333
  },
  "its constructor": {
    "method": 0.3333333333333333,
    "re": 0.3333333333333333,
    "multiclass": 0.3333333333333333
  },
  "method dispose": {
    "classref": 1.0
  },
  "dispose classref": {
    "destroy": 1.0
  },
  "classref destroy": {
    "the": 1.0
  },
  "the someclass": {
    "object": 1.0
  },
  "its destructor": {
    "method": 1.0
  },
  "method someclass": {
    "construct": 0.3333333333333333,
    "class": 0.3333333333333333,
    "initaandb": 0.3333333333333333
  },
  "someclass construct": {
    "procedure": 1.0
  },
  "self objectq": {
    "new": 0.25,
    "free": 0.125,
    "destroy": 0.125,
    "dispose": 0.125,
    "clarion": 0.125,
    "field1": 0.125,
    "assert": 0.125
  },
  "objectq new": {
    "myqueue": 1.0
  },
  "queue someclass": {
    "destruct": 1.0
  },
  "someclass destruct": {
    "procedure": 1.0
  },
  "code free": {
    "self": 1.0
  },
  "free self": {
    "objectq": 1.0
  },
  "objectq free": {
    "any": 1.0
  },
  "free any": {
    "queue": 1.0
  },
  "any queue": {
    "entires": 1.0
  },
  "queue entires": {
    "dispose": 1.0
  },
  "entires dispose": {
    "self": 1.0
  },
  "dispose self": {
    "objectq": 1.0
  },
  "objectq destroy": {
    "the": 1.0
  },
  "queue in": {
    "clarion": 1.0
  },
  "clarion unlike": {
    "many": 1.0
  },
  "unlike many": {
    "other": 1.0
  },
  "languages you": {
    "may": 0.5,
    "can": 0.5
  },
  "also explicitly": {
    "call": 1.0
  },
  "explicitly call": {
    "the": 0.5,
    "base": 0.25,
    "setnull": 0.25
  },
  "constructor and": {
    "destructor": 1.0
  },
  "and destructor": {
    "methods": 0.6666666666666666,
    "method": 0.3333333333333333
  },
  "re start": {
    "an": 1.0
  },
  "start an": {
    "object": 1.0
  },
  "object at": {
    "any": 1.0
  },
  "at any": {
    "time": 1.0
  },
  "any time": {
    "by": 1.0
  },
  "time by": {
    "simply": 1.0
  },
  "by simply": {
    "calling": 0.5,
    "selecti": 0.5
  },
  "simply calling": {
    "the": 1.0
  },
  "the ob": {
    "ject": 1.0
  },
  "ob ject": {
    "s": 1.0
  },
  "ject s": {
    "destructor": 1.0
  },
  "s destructor": {
    "clearing": 1.0
  },
  "destructor clearing": {
    "it": 1.0
  },
  "clearing it": {
    "then": 1.0
  },
  "then its": {
    "constructor": 1.0
  },
  "constructor re": {
    "initialize": 1.0
  },
  "re initialize": {
    "it": 1.0
  },
  "initialize it": {
    "public": 1.0
  },
  "it public": {
    "vs": 1.0
  },
  "protected all": {
    "the": 1.0
  },
  "public unless": {
    "explicitly": 1.0
  },
  "unless explicitly": {
    "declared": 1.0
  },
  "explicitly declared": {
    "with": 0.6666666666666666,
    "as": 0.3333333333333333
  },
  "declared with": {
    "the": 1.0
  },
  "or p": {
    "rotected": 1.0
  },
  "p rotected": {
    "attribute": 1.0
  },
  "rotected attribute": {
    "in": 1.0
  },
  "attribute in": {
    "this": 1.0
  },
  "this case": {
    "public": 0.16666666666666666,
    "the": 0.16666666666666666,
    "either": 0.16666666666666666,
    "next": 0.16666666666666666,
    "a": 0.16666666666666666,
    "clarion": 0.16666666666666666
  },
  "case public": {
    "means": 1.0
  },
  "public means": {
    "they": 1.0
  },
  "anywhere that": {
    "the": 1.0
  },
  "scope clarion": {
    "language": 1.0
  },
  "guide 30": {
    "private": 1.0
  },
  "30 private": {
    "the": 1.0
  },
  "private the": {
    "private": 1.0
  },
  "attribute specifies": {
    "that": 1.0
  },
  "method on": {
    "which": 1.0
  },
  "is placed": {
    "is": 1.0
  },
  "placed is": {
    "visible": 1.0
  },
  "procedures defined": {
    "within": 1.0
  },
  "defined within": {
    "the": 1.0
  },
  "module containing": {
    "the": 1.0
  },
  "this completely": {
    "encapsulates": 1.0
  },
  "completely encapsulates": {
    "the": 1.0
  },
  "classes someclass": {
    "class": 1.0
  },
  "class module": {
    "someclas": 1.0
  },
  "clw type": {
    "publicvar": 1.0
  },
  "type publicvar": {
    "long": 1.0
  },
  "publicvar long": {
    "declare": 1.0
  },
  "long declare": {
    "a": 1.0
  },
  "a public": {
    "property": 0.5,
    "method": 0.5
  },
  "public property": {
    "privatevar": 1.0
  },
  "property privatevar": {
    "long": 1.0
  },
  "privatevar long": {
    "private": 1.0
  },
  "private declare": {
    "a": 1.0
  },
  "a private": {
    "property": 0.5,
    "method": 0.5
  },
  "property baseproc": {
    "procedure": 1.0
  },
  "baseproc procedure": {
    "real": 1.0
  },
  "procedure real": {
    "parm": 1.0
  },
  "real parm": {
    "declare": 0.25,
    "private": 0.25,
    "code": 0.5
  },
  "parm declare": {
    "a": 1.0
  },
  "public method": {
    "proc": 1.0
  },
  "method proc": {
    "procedure": 1.0
  },
  "proc procedure": {
    "real": 1.0
  },
  "parm private": {
    "declare": 1.0
  },
  "end twoclass": {
    "someclass": 1.0
  },
  "twoclass someclass": {
    "declare": 1.0
  },
  "someclass declare": {
    "an": 1.0
  },
  "code twoclass": {
    "publicvar": 1.0
  },
  "twoclass publicvar": {
    "1": 1.0
  },
  "publicvar 1": {
    "legal": 1.0
  },
  "1 legal": {
    "assignment": 1.0
  },
  "legal assignment": {
    "twoclass": 0.3333333333333333,
    "self": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "assignment twoclass": {
    "privatevar": 0.5,
    "proc": 0.5
  },
  "twoclass privatevar": {
    "1": 1.0
  },
  "privatevar 1": {
    "illegal": 0.5,
    "legal": 0.5
  },
  "1 illegal": {
    "assignment": 1.0
  },
  "illegal assignment": {
    "twoclass": 1.0
  },
  "twoclass proc": {
    "2": 1.0
  },
  "proc 2": {
    "illegal": 1.0
  },
  "2 illegal": {
    "call": 1.0
  },
  "illegal call": {
    "to": 1.0
  },
  "to proc": {
    "the": 0.5,
    "somelocalproc": 0.5
  },
  "proc the": {
    "someclas": 1.0
  },
  "clw source": {
    "code": 1.0
  },
  "file contains": {
    "member": 0.25,
    "all": 0.75
  },
  "contains member": {
    "myprog": 1.0
  },
  "myprog map": {
    "a": 1.0
  },
  "map which": {
    "declares": 1.0
  },
  "declares somelocalproc": {
    "procedure": 1.0
  },
  "somelocalproc procedure": {
    "someclass": 0.5,
    "passedobject": 0.5
  },
  "a friend": {
    "of": 0.6666666666666666,
    "is": 0.3333333333333333
  },
  "friend of": {
    "someclass": 0.5,
    "oneclass": 0.5
  },
  "and passing": {
    "current": 1.0
  },
  "passing current": {
    "object": 1.0
  },
  "it end": {
    "someclass": 1.0
  },
  "someclass baseproc": {
    "procedure": 1.0
  },
  "parm code": {
    "self": 0.5,
    "return": 0.5
  },
  "self privatevar": {
    "parm": 1.0
  },
  "privatevar parm": {
    "legal": 1.0
  },
  "parm legal": {
    "assignment": 1.0
  },
  "assignment self": {
    "proc": 1.0
  },
  "self proc": {
    "parm": 1.0
  },
  "proc parm": {
    "le": 1.0
  },
  "parm le": {
    "gal": 1.0
  },
  "le gal": {
    "call": 1.0
  },
  "gal call": {
    "to": 1.0
  },
  "proc somelocalproc": {
    "self": 1.0
  },
  "somelocalproc self": {
    "call": 1.0
  },
  "self call": {
    "the": 1.0
  },
  "the friend": {
    "passing": 1.0
  },
  "friend passing": {
    "it": 1.0
  },
  "passing it": {
    "the": 1.0
  },
  "it the": {
    "current": 1.0
  },
  "instance someclass": {
    "proc": 1.0
  },
  "someclass proc": {
    "procedure": 1.0
  },
  "code return": {
    "parm": 1.0
  },
  "return parm": {
    "somelocalproc": 1.0
  },
  "parm somelocalproc": {
    "procedure": 1.0
  },
  "procedure passedobject": {
    "visible": 1.0
  },
  "passedobject visible": {
    "only": 1.0
  },
  "this mo": {
    "dule": 1.0
  },
  "mo dule": {
    "code": 1.0
  },
  "dule code": {
    "passedobject": 1.0
  },
  "code passedobject": {
    "privatevar": 1.0
  },
  "passedobject privatevar": {
    "1": 1.0
  },
  "assignment a": {
    "side": 1.0
  },
  "a side": {
    "benefit": 1.0
  },
  "side benefit": {
    "of": 1.0
  },
  "clarion implementation": {
    "of": 1.0
  },
  "of private": {
    "properties": 1.0
  },
  "are friends": {
    "in": 1.0
  },
  "friends in": {
    "c": 1.0
  },
  "in c": {
    "the": 1.0
  },
  "c the": {
    "concept": 1.0
  },
  "the concept": {
    "of": 1.0
  },
  "friend is": {
    "a": 1.0
  },
  "that while": {
    "not": 1.0
  },
  "while not": {
    "a": 1.0
  },
  "not a": {
    "method": 0.3333333333333333,
    "consideration": 0.3333333333333333,
    "full": 0.3333333333333333
  },
  "share s": {
    "the": 1.0
  },
  "the above": {
    "example": 1.0
  },
  "above example": {
    "somelocalproc": 0.5,
    "requires": 0.5
  },
  "example somelocalproc": {
    "is": 1.0
  },
  "somelocalproc is": {
    "a": 1.0
  },
  "of oneclass": {
    "because": 1.0
  },
  "oneclass because": {
    "it": 1.0
  },
  "is defined": {
    "in": 1.0
  },
  "module as": {
    "the": 1.0
  },
  "to oneclass": {
    "which": 1.0
  },
  "oneclass which": {
    "gives": 1.0
  },
  "gives it": {
    "access": 1.0
  },
  "it access": {
    "to": 1.0
  },
  "access to": {
    "the": 0.5833333333333334,
    "x": 0.08333333333333333,
    "a": 0.08333333333333333,
    "individual": 0.08333333333333333,
    "anybody": 0.08333333333333333,
    "files": 0.08333333333333333
  },
  "private data": {
    "members": 1.0
  },
  "members passing": {
    "the": 1.0
  },
  "passing the": {
    "c": 1.0
  },
  "c urrent": {
    "object": 1.0
  },
  "urrent object": {
    "to": 1.0
  },
  "to somelocalproc": {
    "enables": 1.0
  },
  "somelocalproc enables": {
    "it": 1.0
  },
  "enables it": {
    "to": 1.0
  },
  "to directly": {
    "address": 0.3333333333333333,
    "access": 0.3333333333333333,
    "embed": 0.3333333333333333
  },
  "directly address": {
    "the": 1.0
  },
  "address the": {
    "private": 1.0
  },
  "class protected": {
    "the": 1.0
  },
  "protected the": {
    "protected": 1.0
  },
  "this only": {
    "encapsul": 1.0
  },
  "only encapsul": {
    "ates": 1.0
  },
  "encapsul ates": {
    "the": 1.0
  },
  "ates the": {
    "data": 1.0
  },
  "classes not": {
    "derived": 1.0
  },
  "not derived": {
    "from": 1.0
  },
  "other non": {
    "class": 1.0
  },
  "non class": {
    "code": 1.0
  },
  "the purpose": {
    "of": 1.0
  },
  "provide a": {
    "level": 1.0
  },
  "a level": {
    "of": 1.0
  },
  "encapsulation between": {
    "public": 1.0
  },
  "between public": {
    "and": 1.0
  },
  "private protected": {
    "data": 1.0
  },
  "protected data": {
    "or": 0.5,
    "members": 0.5
  },
  "use within": {
    "their": 0.5,
    "the": 0.5
  },
  "within their": {
    "own": 1.0
  },
  "own class": {
    "and": 1.0
  },
  "but not": {
    "available": 0.3333333333333333,
    "the": 0.3333333333333333,
    "to": 0.3333333333333333
  },
  "not available": {
    "to": 1.0
  },
  "outside those": {
    "specific": 1.0
  },
  "those specific": {
    "classes": 1.0
  },
  "classes 31": {
    "object": 1.0
  },
  "31 object": {
    "oriented": 1.0
  },
  "programming derived": {
    "classes": 1.0
  },
  "supports inheritance": {
    "one": 1.0
  },
  "inheritance one": {
    "class": 1.0
  },
  "declaration can": {
    "be": 1.0
  },
  "be built": {
    "on": 0.3333333333333333,
    "in": 0.3333333333333333,
    "before": 0.3333333333333333
  },
  "built on": {
    "the": 1.0
  },
  "the foundat": {
    "ion": 1.0
  },
  "foundat ion": {
    "of": 1.0
  },
  "ion of": {
    "another": 1.0
  },
  "derived is": {
    "generally": 1.0
  },
  "generally referred": {
    "to": 1.0
  },
  "as its": {
    "base": 1.0
  },
  "structure inherits": {
    "all": 1.0
  },
  "and protected": {
    "data": 1.0
  },
  "members and": {
    "methods": 1.0
  },
  "starting po": {
    "int": 1.0
  },
  "po int": {
    "but": 1.0
  },
  "int but": {
    "not": 1.0
  },
  "inherited data": {
    "members": 1.0
  },
  "declares one": {
    "class": 0.5,
    "new": 0.5
  },
  "structure derived": {
    "from": 1.0
  },
  "a nother": {
    "someclass": 1.0
  },
  "nother someclass": {
    "class": 1.0
  },
  "end anotherclass": {
    "class": 1.0
  },
  "anotherclass class": {
    "someclass": 0.8571428571428571,
    "type": 0.14285714285714285
  },
  "class someclass": {
    "derived": 0.2222222222222222,
    "propertyc": 0.1111111111111111,
    "class": 0.1111111111111111,
    "manipulateaandb": 0.1111111111111111,
    "type": 0.3333333333333333,
    "declare": 0.1111111111111111
  },
  "someclass derived": {
    "from": 0.5,
    "class": 0.5
  },
  "from someclass": {
    "propertyc": 0.3333333333333333,
    "its": 0.3333333333333333,
    "and": 0.3333333333333333
  },
  "someclass propertyc": {
    "long": 0.6666666666666666,
    "10": 0.3333333333333333
  },
  "propertyc long": {
    "manipulateandc": 0.5,
    "manipulateaandb": 0.5
  },
  "long manipulateandc": {
    "procedure": 1.0
  },
  "manipulateandc procedure": {
    "end": 0.75,
    "doubleproduct": 0.25
  },
  "end in": {
    "this": 1.0
  },
  "this simple": {
    "example": 1.0
  },
  "simple example": {
    "anotherclass": 1.0
  },
  "example anotherclass": {
    "is": 0.5,
    "overrides": 0.5
  },
  "anotherclass is": {
    "derived": 1.0
  },
  "someclass its": {
    "base": 1.0
  },
  "class inheriting": {
    "all": 1.0
  },
  "inheriting all": {
    "the": 1.0
  },
  "that exist": {
    "in": 1.0
  },
  "in someclass": {
    "anotherclass": 0.5,
    "therefore": 0.5
  },
  "someclass anotherclass": {
    "also": 1.0
  },
  "anotherclass also": {
    "declares": 1.0
  },
  "also declares": {
    "one": 1.0
  },
  "one new": {
    "property": 0.5,
    "method": 0.5
  },
  "new property": {
    "and": 1.0
  },
  "and one": {
    "new": 0.3333333333333333,
    "method": 0.3333333333333333,
    "product": 0.3333333333333333
  },
  "new method": {
    "tha": 1.0
  },
  "method tha": {
    "t": 1.0
  },
  "t don": {
    "t": 1.0
  },
  "someclass therefore": {
    "objects": 1.0
  },
  "therefore objects": {
    "that": 1.0
  },
  "to someclass": {
    "have": 1.0
  },
  "someclass have": {
    "two": 1.0
  },
  "method while": {
    "objects": 1.0
  },
  "while objects": {
    "that": 1.0
  },
  "to anotherclass": {
    "have": 1.0
  },
  "anotherclass have": {
    "three": 1.0
  },
  "have three": {
    "properties": 1.0
  },
  "three properties": {
    "and": 1.0
  },
  "methods given": {
    "the": 1.0
  },
  "given the": {
    "two": 0.5,
    "declarations": 0.5
  },
  "the two": {
    "class": 0.1111111111111111,
    "manipulateaandb": 0.1111111111111111,
    "files": 0.1111111111111111,
    "the": 0.1111111111111111,
    "methods": 0.1111111111111111,
    "is": 0.1111111111111111,
    "are": 0.1111111111111111,
    "entries": 0.1111111111111111,
    "values": 0.1111111111111111
  },
  "two class": {
    "declarations": 1.0
  },
  "class declarations": {
    "above": 1.0
  },
  "declarations above": {
    "the": 1.0
  },
  "following executable": {
    "st": 0.5,
    "statements": 0.5
  },
  "executable st": {
    "atements": 1.0
  },
  "st atements": {
    "are": 1.0
  },
  "atements are": {
    "all": 1.0
  },
  "are all": {
    "valid": 0.3333333333333333,
    "vis": 0.3333333333333333,
    "required": 0.3333333333333333
  },
  "all valid": {
    "code": 1.0
  },
  "valid code": {
    "someclass": 1.0
  },
  "code someclass": {
    "propertya": 1.0
  },
  "someclass propertya": {
    "10": 1.0
  },
  "propertya 10": {
    "assign": 1.0
  },
  "10 assign": {
    "values": 1.0
  },
  "assign values": {
    "to": 1.0
  },
  "values to": {
    "the": 0.42857142857142855,
    "translat": 0.14285714285714285,
    "other": 0.14285714285714285,
    "match": 0.14285714285714285,
    "null": 0.14285714285714285
  },
  "properties someclass": {
    "propertyb": 1.0
  },
  "someclass propertyb": {
    "10": 1.0
  },
  "propertyb 10": {
    "someclass": 0.5,
    "anotherclass": 0.5
  },
  "10 someclass": {
    "manipulateaandb": 1.0
  },
  "manipulateaandb call": {
    "the": 0.6,
    "whichever": 0.4
  },
  "method anotherclass": {
    "propertya": 1.0
  },
  "anotherclass propertya": {
    "10": 1.0
  },
  "properties anotherclass": {
    "propertyb": 1.0
  },
  "anotherclass propertyb": {
    "10": 1.0
  },
  "10 anotherclass": {
    "propertyc": 0.3333333333333333,
    "manipulateaandb": 0.6666666666666666
  },
  "anotherclass propertyc": {
    "10": 1.0
  },
  "propertyc 10": {
    "anotherclass": 0.5,
    "invalid": 0.5
  },
  "anotherclass manipulateaandb": {
    "call": 0.14285714285714285,
    "procedure": 0.5714285714285714,
    "and": 0.14285714285714285,
    "anotherclass": 0.14285714285714285
  },
  "s methods": {
    "anotherclass": 1.0
  },
  "methods anotherclass": {
    "manipulateandc": 1.0
  },
  "anotherclass manipulateandc": {
    "also": 0.5,
    "procedure": 0.5
  },
  "manipulateandc also": {
    "given": 1.0
  },
  "also given": {
    "the": 1.0
  },
  "the declarations": {
    "above": 1.0
  },
  "executable statements": {
    "are": 1.0
  },
  "statements are": {
    "not": 0.5,
    "invalid": 0.5
  },
  "not valid": {
    "someclass": 1.0
  },
  "valid someclass": {
    "propertyc": 1.0
  },
  "invalid object": {
    "does": 1.0
  },
  "object does": {
    "not": 1.0
  },
  "have this": {
    "property": 0.5,
    "method": 0.5
  },
  "this property": {
    "someclass": 1.0
  },
  "property someclass": {
    "manipulateandc": 1.0
  },
  "someclass manipulateandc": {
    "invalid": 1.0
  },
  "manipulateandc invalid": {
    "object": 1.0
  },
  "this method": {
    "these": 0.25,
    "is": 0.5,
    "still": 0.25
  },
  "method these": {
    "statements": 1.0
  },
  "these statements": {
    "are": 1.0
  },
  "are invalid": {
    "because": 1.0
  },
  "invalid because": {
    "although": 1.0
  },
  "because although": {
    "the": 1.0
  },
  "derived object": {
    "contains": 0.5,
    "declared": 0.5
  },
  "contains all": {
    "the": 1.0
  },
  "and metho": {
    "ds": 1.0
  },
  "metho ds": {
    "of": 1.0
  },
  "ds of": {
    "the": 1.0
  },
  "the reverse": {
    "is": 0.5,
    "perspec": 0.5
  },
  "reverse is": {
    "not": 1.0
  },
  "not true": {
    "inheritance": 1.0
  },
  "true inheritance": {
    "is": 1.0
  },
  "way there": {
    "is": 1.0
  },
  "a mechanism": {
    "that": 0.5,
    "to": 0.5
  },
  "that gets": {
    "around": 1.0
  },
  "gets around": {
    "this": 1.0
  },
  "around this": {
    "and": 0.5,
    "limitation": 0.5
  },
  "this and": {
    "allows": 1.0
  },
  "and allows": {
    "base": 1.0
  },
  "allows base": {
    "class": 1.0
  },
  "call derived": {
    "class": 1.0
  },
  "methods virtual": {
    "methods": 1.0
  },
  "later clarion": {
    "language": 1.0
  },
  "guide 32": {
    "overriding": 1.0
  },
  "32 overriding": {
    "inherited": 1.0
  },
  "are circumstances": {
    "where": 1.0
  },
  "circumstances where": {
    "a": 1.0
  },
  "where a": {
    "derived": 0.3333333333333333,
    "particular": 0.3333333333333333,
    "record": 0.3333333333333333
  },
  "may need": {
    "to": 1.0
  },
  "override an": {
    "inherited": 1.0
  },
  "the explicit": {
    "functionality": 1.0
  },
  "functionality required": {
    "for": 1.0
  },
  "that specific": {
    "class": 0.5,
    "record": 0.5
  },
  "is simple": {
    "to": 1.0
  },
  "simple to": {
    "accomplish": 1.0
  },
  "accomplish in": {
    "clarion": 1.0
  },
  "clarion just": {
    "re": 1.0
  },
  "just re": {
    "declare": 1.0
  },
  "re declare": {
    "the": 1.0
  },
  "with exactly": {
    "the": 1.0
  },
  "same parameter": {
    "list": 1.0
  },
  "list then": {
    "re": 1.0
  },
  "then re": {
    "define": 0.5,
    "try": 0.5
  },
  "re define": {
    "the": 1.0
  },
  "define the": {
    "method": 1.0
  },
  "new functionality": {
    "this": 1.0
  },
  "functionality this": {
    "example": 1.0
  },
  "example overrides": {
    "an": 1.0
  },
  "overrides an": {
    "inherited": 1.0
  },
  "procedure override": {
    "the": 1.0
  },
  "method manipulateandc": {
    "procedure": 1.0
  },
  "someclass manipula": {
    "teaandb": 1.0
  },
  "manipula teaandb": {
    "procedure": 1.0
  },
  "teaandb procedure": {
    "product": 1.0
  },
  "procedure product": {
    "long": 1.0
  },
  "product long": {
    "code": 1.0
  },
  "long code": {
    "product": 0.4,
    "doubleproduct": 0.4,
    "parent": 0.2
  },
  "code product": {
    "self": 1.0
  },
  "product self": {
    "propertya": 1.0
  },
  "propertya self": {
    "propertyb": 0.875,
    "propertyc": 0.125
  },
  "propertyb message": {
    "product": 1.0
  },
  "message product": {
    "of": 1.0
  },
  "product of": {
    "a": 1.0
  },
  "a b": {
    "is": 0.8571428571428571,
    "localvar": 0.14285714285714285
  },
  "b is": {
    "product": 0.3333333333333333,
    "doubleproduct": 0.3333333333333333,
    "self": 0.3333333333333333
  },
  "is product": {
    "anotherclass": 1.0
  },
  "product anotherclass": {
    "manipulateaandb": 1.0
  },
  "method doubleproduct": {
    "long": 1.0
  },
  "doubleproduct long": {
    "code": 1.0
  },
  "code doubleproduct": {
    "self": 1.0
  },
  "doubleproduct self": {
    "propertya": 1.0
  },
  "propertyb 2": {
    "message": 1.0
  },
  "2 message": {
    "double": 1.0
  },
  "message double": {
    "the": 1.0
  },
  "double the": {
    "product": 1.0
  },
  "the product": {
    "of": 0.5555555555555556,
    "file": 0.2222222222222222,
    "number": 0.2222222222222222
  },
  "is doubleproduct": {
    "anotherclass": 0.3333333333333333,
    "in": 0.3333333333333333,
    "for": 0.3333333333333333
  },
  "doubleproduct anotherclass": {
    "manipulateandc": 1.0
  },
  "procedure doubleproduct": {
    "long": 1.0
  },
  "self propertyc": {
    "2": 1.0
  },
  "propertyc 2": {
    "message": 1.0
  },
  "a c": {
    "is": 1.0
  },
  "c is": {
    "doubleproduct": 1.0
  },
  "doubleproduct in": {
    "this": 1.0
  },
  "anotherclass overrides": {
    "the": 1.0
  },
  "overrides the": {
    "manipulateaandb": 1.0
  },
  "manipulateaandb method": {
    "with": 0.3333333333333333,
    "is": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "method with": {
    "its": 0.5,
    "access": 0.5
  },
  "own version": {
    "containing": 1.0
  },
  "version containing": {
    "a": 1.0
  },
  "a slightly": {
    "different": 1.0
  },
  "different algorithm": {
    "notice": 1.0
  },
  "algorithm notice": {
    "that": 1.0
  },
  "lists are": {
    "the": 1.0
  },
  "same neither": {
    "method": 1.0
  },
  "neither method": {
    "receives": 1.0
  },
  "method receives": {
    "parameters": 1.0
  },
  "receives parameters": {
    "this": 1.0
  },
  "parameters this": {
    "is": 1.0
  },
  "to overriding": {
    "methods": 1.0
  },
  "lists must": {
    "be": 1.0
  },
  "same if": {
    "the": 1.0
  },
  "lists of": {
    "the": 1.0
  },
  "two manipulateaandb": {
    "methods": 1.0
  },
  "manipulateaandb methods": {
    "in": 1.0
  },
  "example were": {
    "different": 1.0
  },
  "were different": {
    "then": 1.0
  },
  "different then": {
    "you": 1.0
  },
  "you would": {
    "have": 0.5,
    "use": 0.5
  },
  "would have": {
    "procedure": 0.2,
    "to": 0.6,
    "the": 0.2
  },
  "have procedure": {
    "overloading": 1.0
  },
  "overloading in": {
    "anotherclass": 0.5,
    "the": 0.5
  },
  "in anotherclass": {
    "that": 1.0
  },
  "anotherclass that": {
    "is": 1.0
  },
  "is anotherclass": {
    "would": 1.0
  },
  "anotherclass would": {
    "actually": 1.0
  },
  "would actually": {
    "contain": 1.0
  },
  "actually contain": {
    "two": 1.0
  },
  "contain two": {
    "methods": 1.0
  },
  "methods named": {
    "manipulateaandb": 0.5,
    "construct": 0.5
  },
  "named manipulateaandb": {
    "and": 1.0
  },
  "manipulateaandb and": {
    "the": 0.5,
    "when": 0.5
  },
  "compiler would": {
    "have": 1.0
  },
  "resolve which": {
    "one": 1.0
  },
  "which one": {
    "to": 1.0
  },
  "one to": {
    "call": 0.058823529411764705,
    "one": 0.29411764705882354,
    "many": 0.6470588235294118
  },
  "call by": {
    "means": 1.0
  },
  "by means": {
    "of": 1.0
  },
  "means of": {
    "the": 1.0
  },
  "the differing": {
    "parameters": 1.0
  },
  "differing parameters": {
    "see": 1.0
  },
  "parameters see": {
    "function": 1.0
  },
  "see function": {
    "overloading": 1.0
  },
  "function overloading": {
    "in": 1.0
  },
  "a full": {
    "discussion": 0.5,
    "featured": 0.5
  },
  "full discussion": {
    "of": 1.0
  },
  "simply overriding": {
    "a": 1.0
  },
  "overriding a": {
    "method": 1.0
  },
  "class does": {
    "not": 1.0
  },
  "automatically mean": {
    "you": 1.0
  },
  "mean you": {
    "cannot": 1.0
  },
  "you cannot": {
    "also": 0.5,
    "go": 0.5
  },
  "cannot also": {
    "call": 1.0
  },
  "also call": {
    "the": 1.0
  },
  "within derived": {
    "class": 1.0
  },
  "methods prepending": {
    "parent": 1.0
  },
  "call like": {
    "self": 1.0
  },
  "like self": {
    "allows": 0.5,
    "composition": 0.5
  },
  "self allows": {
    "a": 1.0
  },
  "allows a": {
    "derived": 1.0
  },
  "call base": {
    "class": 1.0
  },
  "methods parent": {
    "methodname": 1.0
  },
  "parent methodname": {
    "this": 1.0
  },
  "methodname this": {
    "allows": 1.0
  },
  "to incrementally": {
    "override": 0.5,
    "customize": 0.5
  },
  "incrementally override": {
    "methods": 1.0
  },
  "override methods": {
    "without": 1.0
  },
  "methods without": {
    "requiring": 1.0
  },
  "requiring that": {
    "you": 1.0
  },
  "you duplicate": {
    "the": 1.0
  },
  "duplicate the": {
    "base": 1.0
  },
  "that overrides": {
    "it": 1.0
  },
  "overrides it": {
    "assuming": 1.0
  },
  "it assuming": {
    "you": 1.0
  },
  "assuming you": {
    "still": 1.0
  },
  "you still": {
    "need": 1.0
  },
  "still need": {
    "the": 1.0
  },
  "need the": {
    "base": 1.0
  },
  "s functionality": {
    "33": 1.0
  },
  "functionality 33": {
    "object": 1.0
  },
  "33 object": {
    "oriented": 1.0
  },
  "programming this": {
    "e": 1.0
  },
  "this e": {
    "xample": 1.0
  },
  "e xample": {
    "overrides": 1.0
  },
  "xample overrides": {
    "an": 1.0
  },
  "and calls": {
    "the": 1.0
  },
  "code parent": {
    "manipulateaandb": 1.0
  },
  "parent manipulateaandb": {
    "call": 1.0
  },
  "parent method": {
    "first": 1.0
  },
  "method first": {
    "doubleproduct": 1.0
  },
  "first doubleproduct": {
    "self": 1.0
  },
  "doubleproduct for": {
    "constructor": 1.0
  },
  "for constructor": {
    "and": 1.0
  },
  "s simply": {
    "re": 1.0
  },
  "simply re": {
    "declaring": 1.0
  },
  "re declaring": {
    "the": 0.5,
    "and": 0.5
  },
  "not override": {
    "the": 1.0
  },
  "method unless": {
    "the": 1.0
  },
  "is specified": {
    "on": 1.0
  },
  "specified on": {
    "the": 1.0
  },
  "prototype without": {
    "the": 1.0
  },
  "attribute a": {
    "derived": 1.0
  },
  "constructor automatically": {
    "calls": 1.0
  },
  "automatically calls": {
    "the": 1.0
  },
  "constructor first": {
    "before": 1.0
  },
  "first before": {
    "the": 1.0
  },
  "executes and": {
    "a": 1.0
  },
  "destructor last": {
    "after": 1.0
  },
  "last after": {
    "the": 1.0
  },
  "after the": {
    "derived": 0.5,
    "set": 0.5
  },
  "executes if": {
    "the": 1.0
  },
  "replace attribu": {
    "te": 1.0
  },
  "attribu te": {
    "is": 1.0
  },
  "te is": {
    "present": 1.0
  },
  "present on": {
    "the": 1.0
  },
  "automatically call": {
    "the": 1.0
  },
  "however the": {
    "base": 0.3333333333333333,
    "clarion": 0.6666666666666666
  },
  "called from": {
    "within": 1.0
  },
  "explicitly calling": {
    "p": 1.0
  },
  "calling p": {
    "arent": 1.0
  },
  "p arent": {
    "construct": 1.0
  },
  "arent construct": {
    "or": 1.0
  },
  "destruct this": {
    "allows": 1.0
  },
  "incrementally customize": {
    "derived": 1.0
  },
  "customize derived": {
    "class": 1.0
  },
  "destructors without": {
    "completely": 1.0
  },
  "without completely": {
    "re": 1.0
  },
  "completely re": {
    "writing": 1.0
  },
  "re writing": {
    "the": 1.0
  },
  "writing the": {
    "base": 0.3333333333333333,
    "changes": 0.3333333333333333,
    "data": 0.3333333333333333
  },
  "code myqueue": {
    "queue": 1.0
  },
  "with one": {
    "field": 1.0
  },
  "one field": {
    "field1": 1.0
  },
  "field field1": {
    "string": 1.0
  },
  "field1 string": {
    "10": 1.0
  },
  "string 10": {
    "containing": 0.16666666666666666,
    "dim": 0.16666666666666666,
    "field3": 0.3333333333333333,
    "action": 0.16666666666666666,
    "report": 0.16666666666666666
  },
  "10 containing": {
    "10": 1.0
  },
  "containing 10": {
    "bytes": 1.0
  },
  "10 bytes": {
    "of": 1.0
  },
  "bytes of": {
    "string": 1.0
  },
  "of string": {
    "data": 1.0
  },
  "string data": {
    "end": 1.0
  },
  "data end": {
    "someclass": 1.0
  },
  "type base": {
    "class": 1.0
  },
  "class objectq": {
    "myqueue": 1.0
  },
  "myqueue construct": {
    "procedure": 1.0
  },
  "procedure destr": {
    "uctor": 1.0
  },
  "destr uctor": {
    "method": 1.0
  },
  "uctor method": {
    "end": 1.0
  },
  "replace override": {
    "the": 1.0
  },
  "constructor end": {
    "classref": 1.0
  },
  "classref anotherclass": {
    "reference": 1.0
  },
  "anotherclass reference": {
    "to": 1.0
  },
  "new anotherclass": {
    "create": 1.0
  },
  "anotherclass create": {
    "a": 0.5,
    "the": 0.5
  },
  "a anotherclass": {
    "object": 1.0
  },
  "anotherclass object": {
    "which": 0.5,
    "construct": 0.5
  },
  "constructor dispose": {
    "classref": 1.0
  },
  "destructor someclass": {
    "construct": 1.0
  },
  "procedure base": {
    "class": 1.0
  },
  "constructor code": {
    "self": 1.0
  },
  "myqueue someclass": {
    "destruct": 1.0
  },
  "destructor code": {
    "free": 1.0
  },
  "objectq dispose": {
    "self": 1.0
  },
  "objectq clarion": {
    "language": 1.0
  },
  "guide 34": {
    "anotherclass": 1.0
  },
  "34 anotherclass": {
    "construct": 1.0
  },
  "anotherclass construct": {
    "pro": 1.0
  },
  "construct pro": {
    "cedure": 1.0
  },
  "cedure derived": {
    "class": 1.0
  },
  "constructor mystring": {
    "string": 1.0
  },
  "mystring string": {
    "10": 1.0
  },
  "10 dim": {
    "10": 1.0
  },
  "dim 10": {
    "code": 1.0
  },
  "10 code": {
    "loop": 1.0
  },
  "code loop": {
    "x": 0.6666666666666666,
    "10": 0.3333333333333333
  },
  "loop x": {
    "1": 1.0
  },
  "x 1": {
    "to": 1.0
  },
  "1 to": {
    "10": 0.2857142857142857,
    "start": 0.2857142857142857,
    "queue": 0.2857142857142857,
    "maximum": 0.14285714285714285
  },
  "to 10": {
    "do": 0.5,
    "then": 0.5
  },
  "10 do": {
    "some": 1.0
  },
  "do some": {
    "preliminary": 1.0
  },
  "some preliminary": {
    "work": 1.0
  },
  "preliminary work": {
    "then": 1.0
  },
  "work then": {
    "mystring": 1.0
  },
  "then mystring": {
    "x": 1.0
  },
  "mystring x": {
    "entry": 0.5,
    "add": 0.5
  },
  "x entry": {
    "format": 1.0
  },
  "entry format": {
    "x": 1.0
  },
  "format x": {
    "n02": 1.0
  },
  "x n02": {
    "end": 1.0
  },
  "n02 end": {
    "parent": 1.0
  },
  "end parent": {
    "construct": 1.0
  },
  "construct call": {
    "the": 1.0
  },
  "or loop": {
    "x": 1.0
  },
  "10 then": {
    "finish": 1.0
  },
  "then finish": {
    "off": 1.0
  },
  "finish off": {
    "the": 1.0
  },
  "off the": {
    "construction": 1.0
  },
  "the construction": {
    "self": 1.0
  },
  "construction self": {
    "objectq": 1.0
  },
  "objectq field1": {
    "mystring": 1.0
  },
  "field1 mystring": {
    "x": 1.0
  },
  "x add": {
    "self": 1.0
  },
  "objectq assert": {
    "errorcode": 1.0
  },
  "assert errorcode": {
    "end": 1.0
  },
  "errorcode end": {
    "35": 1.0
  },
  "end 35": {
    "object": 1.0
  },
  "35 object": {
    "oriented": 1.0
  },
  "programming multiple": {
    "inheritance": 1.0
  },
  "composition single": {
    "inheritance": 1.0
  },
  "inheritance means": {
    "that": 1.0
  },
  "has on": {
    "ly": 1.0
  },
  "on ly": {
    "one": 1.0
  },
  "ly one": {
    "base": 1.0
  },
  "one base": {
    "class": 1.0
  },
  "it inherits": {
    "properties": 1.0
  },
  "inherits properties": {
    "and": 1.0
  },
  "methods clarion": {
    "directly": 1.0
  },
  "clarion directly": {
    "supports": 1.0
  },
  "directly supports": {
    "single": 1.0
  },
  "supports single": {
    "inheritance": 1.0
  },
  "inheritance some": {
    "oop": 1.0
  },
  "some oop": {
    "languages": 1.0
  },
  "languages most": {
    "notably": 1.0
  },
  "most notably": {
    "c": 1.0
  },
  "notably c": {
    "allow": 1.0
  },
  "c allow": {
    "multiple": 1.0
  },
  "allow multiple": {
    "inheritance": 1.0
  },
  "inheritance wherein": {
    "a": 1.0
  },
  "wherein a": {
    "derived": 1.0
  },
  "from several": {
    "classes": 1.0
  },
  "several classes": {
    "this": 1.0
  },
  "this has": {
    "the": 1.0
  },
  "of easily": {
    "combining": 1.0
  },
  "easily combining": {
    "existing": 1.0
  },
  "combining existing": {
    "classes": 1.0
  },
  "existing classes": {
    "to": 1.0
  },
  "create derived": {
    "classes": 1.0
  },
  "classes it": {
    "also": 1.0
  },
  "the drawback": {
    "that": 1.0
  },
  "drawback that": {
    "the": 1.0
  },
  "must deal": {
    "with": 1.0
  },
  "of potential": {
    "ambiguity": 1.0
  },
  "potential ambiguity": {
    "if": 0.5,
    "for": 0.5
  },
  "ambiguity if": {
    "two": 1.0
  },
  "if two": {
    "or": 1.0
  },
  "two or": {
    "more": 1.0
  },
  "or more": {
    "of": 1.0
  },
  "more of": {
    "the": 1.0
  },
  "derived contain": {
    "methods": 1.0
  },
  "contain methods": {
    "with": 1.0
  },
  "write extra": {
    "code": 1.0
  },
  "extra code": {
    "to": 1.0
  },
  "disambiguate the": {
    "overloaded": 1.0
  },
  "the overloaded": {
    "methods": 1.0
  },
  "overloaded methods": {
    "although": 1.0
  },
  "methods although": {
    "clarion": 1.0
  },
  "although clarion": {
    "only": 1.0
  },
  "clarion only": {
    "supports": 1.0
  },
  "only supports": {
    "single": 1.0
  },
  "inheritance like": {
    "many": 1.0
  },
  "like many": {
    "other": 1.0
  },
  "can easily": {
    "get": 1.0
  },
  "easily get": {
    "around": 1.0
  },
  "this limitation": {
    "using": 1.0
  },
  "limitation using": {
    "a": 1.0
  },
  "a standard": {
    "oop": 0.5,
    "fashion": 0.5
  },
  "called composit": {
    "ion": 1.0
  },
  "composit ion": {
    "composition": 1.0
  },
  "ion composition": {
    "means": 1.0
  },
  "composition means": {
    "to": 1.0
  },
  "place an": {
    "object": 1.0
  },
  "of one": {
    "class": 0.14285714285714285,
    "file": 0.14285714285714285,
    "loop": 0.7142857142857143
  },
  "within another": {
    "composition": 1.0
  },
  "another composition": {
    "provides": 1.0
  },
  "composition provides": {
    "the": 0.5,
    "a": 0.5
  },
  "the potential": {
    "ambiguity": 1.0
  },
  "ambiguity for": {
    "those": 1.0
  },
  "those instances": {
    "where": 1.0
  },
  "instances where": {
    "you": 1.0
  },
  "where you": {
    "need": 1.0
  },
  "need multiple": {
    "inheritance": 1.0
  },
  "inheritance simply": {
    "decide": 1.0
  },
  "simply decide": {
    "wh": 1.0
  },
  "decide wh": {
    "ich": 1.0
  },
  "wh ich": {
    "class": 1.0
  },
  "ich class": {
    "to": 1.0
  },
  "from and": {
    "place": 1.0
  },
  "and place": {
    "an": 1.0
  },
  "other class": {
    "the": 1.0
  },
  "the contained": {
    "object": 1.0
  },
  "contained object": {
    "in": 0.25,
    "you": 0.25,
    "when": 0.25,
    "this": 0.25
  },
  "the container": {
    "object": 1.0
  },
  "container object": {
    "you": 0.3333333333333333,
    "comes": 0.3333333333333333,
    "which": 0.3333333333333333
  },
  "you then": {
    "need": 1.0
  },
  "then need": {
    "to": 1.0
  },
  "to implement": {
    "a": 1.0
  },
  "implement a": {
    "constructor": 0.5,
    "sufficient": 0.5
  },
  "you implement": {
    "composition": 1.0
  },
  "implement composition": {
    "in": 1.0
  },
  "by placing": {
    "a": 1.0
  },
  "placing a": {
    "reference": 1.0
  },
  "declaration like": {
    "this": 1.0
  },
  "this program": {
    "someclass": 1.0
  },
  "type propertyc": {
    "l": 1.0
  },
  "propertyc l": {
    "ong": 1.0
  },
  "l ong": {
    "manipulateandc": 1.0
  },
  "ong manipulateandc": {
    "procedure": 1.0
  },
  "end multiclass": {
    "class": 1.0
  },
  "multiclass class": {
    "someclass": 1.0
  },
  "someclass type": {
    "inherits": 0.3333333333333333,
    "manipulateaandb": 0.6666666666666666
  },
  "type inherits": {
    "from": 1.0
  },
  "inherits from": {
    "someclass": 1.0
  },
  "and anotherclassref": {
    "anotherclass": 1.0
  },
  "anotherclassref anotherclass": {
    "contains": 1.0
  },
  "anotherclass contains": {
    "an": 1.0
  },
  "contains an": {
    "anotherclass": 1.0
  },
  "an anotherclass": {
    "object": 1.0
  },
  "object construct": {
    "procedure": 1.0
  },
  "end mclass": {
    "multiclass": 1.0
  },
  "mclass multiclass": {
    "declare": 1.0
  },
  "multiclass declare": {
    "an": 1.0
  },
  "object mclassref": {
    "multiclass": 1.0
  },
  "mclassref multiclass": {
    "declare": 1.0
  },
  "object reference": {
    "code": 1.0
  },
  "constructor instantiates": {
    "the": 1.0
  },
  "instantiates the": {
    "contained": 1.0
  },
  "object when": {
    "the": 1.0
  },
  "object comes": {
    "into": 1.0
  },
  "comes into": {
    "scope": 1.0
  },
  "into scope": {
    "mclassref": 1.0
  },
  "scope mclassref": {
    "new": 1.0
  },
  "mclassref new": {
    "multiclass": 1.0
  },
  "new multiclass": {
    "create": 1.0
  },
  "multiclass create": {
    "a": 1.0
  },
  "new container": {
    "object": 1.0
  },
  "constructor multiclass": {
    "construct": 1.0
  },
  "multiclass construct": {
    "procedure": 1.0
  },
  "self anotherclassref": {
    "new": 1.0
  },
  "anotherclassref new": {
    "anotherclass": 1.0
  },
  "this same": {
    "technique": 1.0
  },
  "same technique": {
    "also": 0.5,
    "as": 0.5
  },
  "technique also": {
    "gives": 1.0
  },
  "also gives": {
    "you": 1.0
  },
  "you recursive": {
    "classes": 1.0
  },
  "recursive classes": {
    "by": 1.0
  },
  "classes by": {
    "placing": 1.0
  },
  "the declaration": {
    "like": 0.5,
    "of": 0.5
  },
  "this someclass": {
    "class": 1.0
  },
  "type someclass": {
    "recurses": 1.0
  },
  "someclass recurses": {
    "into": 1.0
  },
  "recurses into": {
    "itse": 1.0
  },
  "into itse": {
    "lf": 1.0
  },
  "itse lf": {
    "by": 1.0
  },
  "lf by": {
    "someclassref": 1.0
  },
  "by someclassref": {
    "someclass": 1.0
  },
  "someclassref someclass": {
    "containing": 1.0
  },
  "someclass containing": {
    "a": 1.0
  },
  "object propertya": {
    "long": 1.0
  },
  "guide 36": {
    "virtual": 1.0
  },
  "36 virtual": {
    "methods": 1.0
  },
  "polymorphism inheritance": {
    "allows": 1.0
  },
  "inheritance allows": {
    "a": 1.0
  },
  "has inherited": {
    "from": 1.0
  },
  "inherited from": {
    "its": 1.0
  },
  "class virtual": {
    "methods": 1.0
  },
  "methods on": {
    "the": 1.0
  },
  "other hand": {
    "allow": 1.0
  },
  "hand allow": {
    "the": 1.0
  },
  "to methods": {
    "in": 1.0
  },
  "classes despite": {
    "not": 1.0
  },
  "despite not": {
    "knowing": 1.0
  },
  "not knowing": {
    "exactly": 1.0
  },
  "knowing exactly": {
    "what": 1.0
  },
  "what is": {
    "being": 1.0
  },
  "is being": {
    "called": 0.16666666666666666,
    "sequentially": 0.16666666666666666,
    "added": 0.16666666666666666,
    "deleted": 0.16666666666666666,
    "updated": 0.16666666666666666,
    "compared": 0.16666666666666666
  },
  "being called": {
    "to": 1.0
  },
  "called to": {
    "accomplish": 1.0
  },
  "accomplish this": {
    "you": 1.0
  },
  "this you": {
    "must": 1.0
  },
  "must prototype": {
    "the": 1.0
  },
  "prototype the": {
    "virtual": 1.0
  },
  "prototype declares": {
    "a": 1.0
  },
  "this attribute": {
    "must": 1.0
  },
  "attribute must": {
    "appear": 1.0
  },
  "must appear": {
    "on": 1.0
  },
  "appear on": {
    "the": 1.0
  },
  "s proto": {
    "type": 1.0
  },
  "proto type": {
    "in": 1.0
  },
  "type in": {
    "both": 1.0
  },
  "class usually": {
    "the": 1.0
  },
  "usually the": {
    "base": 0.5,
    "set": 0.5
  },
  "class definition": {
    "of": 1.0
  },
  "a dummy": {
    "procedure": 1.0
  },
  "dummy procedure": {
    "one": 1.0
  },
  "procedure one": {
    "that": 1.0
  },
  "one that": {
    "does": 0.5,
    "provides": 0.5
  },
  "that does": {
    "nothing": 1.0
  },
  "does nothing": {
    "or": 0.3333333333333333,
    "code": 0.3333333333333333,
    "data": 0.3333333333333333
  },
  "nothing or": {
    "one": 1.0
  },
  "or one": {
    "that": 1.0
  },
  "provides some": {
    "simple": 1.0
  },
  "some simple": {
    "default": 1.0
  },
  "simple default": {
    "functionality": 1.0
  },
  "default functionality": {
    "for": 1.0
  },
  "functionality for": {
    "those": 1.0
  },
  "those derived": {
    "classes": 1.0
  },
  "that don": {
    "t": 1.0
  },
  "t need": {
    "their": 1.0
  },
  "need their": {
    "own": 1.0
  },
  "own method": {
    "definition": 1.0
  },
  "definition this": {
    "example": 1.0
  },
  "example defines": {
    "two": 1.0
  },
  "defines two": {
    "simple": 0.5,
    "standard": 0.5
  },
  "two simple": {
    "virtual": 1.0
  },
  "simple virtual": {
    "methods": 1.0
  },
  "in two": {
    "derived": 1.0
  },
  "two derived": {
    "classes": 1.0
  },
  "long initaandb": {
    "procedure": 1.0
  },
  "initaandb procedure": {
    "long": 1.0
  },
  "long passeda": {
    "long": 1.0
  },
  "passeda long": {
    "passedb": 1.0
  },
  "long passedb": {
    "manipulateaandb": 0.5,
    "code": 0.5
  },
  "passedb manipulateaandb": {
    "procedure": 1.0
  },
  "virtual declare": {
    "base": 1.0
  },
  "base method": {
    "virtual": 1.0
  },
  "method virtual": {
    "end": 1.0
  },
  "type manipulateaandb": {
    "procedure": 0.5,
    "pr": 0.5
  },
  "virtual re": {
    "declare": 1.0
  },
  "end differentclass": {
    "class": 1.0
  },
  "differentclass class": {
    "someclass": 1.0
  },
  "manipulateaandb pr": {
    "ocedure": 1.0
  },
  "pr ocedure": {
    "virtual": 1.0
  },
  "ocedure virtual": {
    "re": 1.0
  },
  "end object1": {
    "anotherclass": 1.0
  },
  "object1 anotherclass": {
    "declare": 1.0
  },
  "anotherclass declare": {
    "an": 1.0
  },
  "object object2": {
    "differentclass": 1.0
  },
  "object2 differentclass": {
    "declare": 1.0
  },
  "differentclass declare": {
    "a": 1.0
  },
  "a diferent": {
    "object": 1.0
  },
  "diferent object": {
    "code": 1.0
  },
  "code object1": {
    "initaandb": 1.0
  },
  "object1 initaandb": {
    "10": 1.0
  },
  "initaandb 10": {
    "20": 1.0
  },
  "10 20": {
    "initaandb": 0.3333333333333333,
    "statement": 0.3333333333333333,
    "call": 0.3333333333333333
  },
  "20 initaandb": {
    "will": 1.0
  },
  "initaandb will": {
    "call": 1.0
  },
  "the anotherclass": {
    "method": 1.0
  },
  "anotherclass method": {
    "object2": 1.0
  },
  "method object2": {
    "initaandb": 1.0
  },
  "object2 initaandb": {
    "30": 1.0
  },
  "initaandb 30": {
    "40": 1.0
  },
  "30 40": {
    "initaandb": 0.5,
    "statement": 0.5
  },
  "40 initaandb": {
    "will": 1.0
  },
  "the differentclass": {
    "method": 0.5,
    "manipulateaandb": 0.5
  },
  "differentclass method": {
    "someclass": 1.0
  },
  "someclass initaandb": {
    "procedure": 1.0
  },
  "passedb code": {
    "self": 1.0
  },
  "propertya passeda": {
    "self": 1.0
  },
  "passeda self": {
    "propert": 0.5,
    "propertyb": 0.5
  },
  "self propert": {
    "yb": 1.0
  },
  "propert yb": {
    "passedb": 1.0
  },
  "yb passedb": {
    "self": 1.0
  },
  "passedb self": {
    "manipulateaandb": 1.0
  },
  "self manipulateaandb": {
    "call": 0.5,
    "without": 0.25,
    "calls": 0.25
  },
  "call whichever": {
    "virtual": 1.0
  },
  "whichever virtual": {
    "method": 1.0
  },
  "is appropriate": {
    "for": 0.6,
    "to": 0.4
  },
  "appropriate for": {
    "the": 0.6666666666666666,
    "that": 0.3333333333333333
  },
  "object someclass": {
    "manipulateaandb": 1.0
  },
  "does code": {
    "nothing": 1.0
  },
  "code nothing": {
    "anotherclass": 1.0
  },
  "nothing anotherclass": {
    "manipulateaandb": 1.0
  },
  "message the": {
    "product": 0.6666666666666666,
    "sum": 0.3333333333333333
  },
  "is self": {
    "propertya": 1.0
  },
  "propertyb differentclass": {
    "manipulateaandb": 1.0
  },
  "differentclass manipulateaandb": {
    "procedure": 0.5,
    "method": 0.5
  },
  "the sum": {
    "of": 1.0
  },
  "sum of": {
    "a": 1.0
  },
  "propertyb in": {
    "this": 1.0
  },
  "is virtual": {
    "the": 1.0
  },
  "virtual the": {
    "initaandb": 1.0
  },
  "the initaandb": {
    "method": 1.0
  },
  "initaandb method": {
    "calls": 1.0
  },
  "method calls": {
    "self": 1.0
  },
  "calls self": {
    "manipulateaandb": 1.0
  },
  "manipulateaandb without": {
    "knowing": 1.0
  },
  "knowing which": {
    "actual": 1.0
  },
  "which actual": {
    "method": 1.0
  },
  "is going": {
    "to": 1.0
  },
  "execute when": {
    "the": 1.0
  },
  "the object1": {
    "initaandb": 1.0
  },
  "20 statement": {
    "ex": 1.0
  },
  "statement ex": {
    "ecutes": 1.0
  },
  "ex ecutes": {
    "self": 1.0
  },
  "ecutes self": {
    "manipulateaandb": 1.0
  },
  "manipulateaandb calls": {
    "anotherclass": 1.0
  },
  "calls anotherclass": {
    "manipulateaandb": 1.0
  },
  "and when": {
    "the": 1.0
  },
  "the object2": {
    "initaandb": 1.0
  },
  "40 statement": {
    "executes": 1.0
  },
  "executes it": {
    "calls": 1.0
  },
  "method a": {
    "virtual": 1.0
  },
  "may explicitly": {
    "call": 1.0
  },
  "name from": {
    "the": 1.0
  },
  "class by": {
    "calling": 1.0
  },
  "by calling": {
    "parent": 1.0
  },
  "calling parent": {
    "virtualmethodname": 1.0
  },
  "parent virtualmethodname": {
    "this": 1.0
  },
  "virtualmethodname this": {
    "is": 1.0
  },
  "is just": {
    "the": 1.0
  },
  "just the": {
    "same": 0.3333333333333333,
    "clarion": 0.3333333333333333,
    "mechanism": 0.3333333333333333
  },
  "technique as": {
    "previously": 1.0
  },
  "as previously": {
    "demonstrated": 1.0
  },
  "previously demonstrated": {
    "in": 1.0
  },
  "demonstrated in": {
    "overriding": 1.0
  },
  "in overriding": {
    "inherited": 1.0
  },
  "37 object": {
    "oriented": 1.0
  },
  "programming local": {
    "derived": 1.0
  },
  "methods methods": {
    "prototyped": 1.0
  },
  "methods prototyped": {
    "in": 1.0
  },
  "declaration within": {
    "a": 1.0
  },
  "section share": {
    "the": 1.0
  },
  "s scope": {
    "for": 1.0
  },
  "all local": {
    "data": 1.0
  },
  "declarations and": {
    "routines": 0.5,
    "compiler": 0.25,
    "the": 0.25
  },
  "routines the": {
    "requirement": 1.0
  },
  "the requirement": {
    "for": 1.0
  },
  "requirement for": {
    "this": 1.0
  },
  "for this": {
    "is": 0.5,
    "scoping": 0.5
  },
  "be defined": {
    "within": 0.3333333333333333,
    "between": 0.3333333333333333,
    "at": 0.3333333333333333
  },
  "an d": {
    "must": 0.2,
    "get": 0.2,
    "logical": 0.2,
    "this": 0.2,
    "update": 0.2
  },
  "d must": {
    "immediately": 1.0
  },
  "source that": {
    "is": 1.0
  },
  "must come": {
    "after": 0.5,
    "before": 0.5
  },
  "come after": {
    "any": 1.0
  },
  "after any": {
    "routines": 1.0
  },
  "any routines": {
    "and": 1.0
  },
  "routines and": {
    "before": 1.0
  },
  "and before": {
    "any": 1.0
  },
  "before any": {
    "other": 0.3333333333333333,
    "data": 0.3333333333333333,
    "changes": 0.3333333333333333
  },
  "other procedures": {
    "that": 1.0
  },
  "be in": {
    "the": 0.5,
    "ascending": 0.16666666666666666,
    "static": 0.16666666666666666,
    "procedures": 0.16666666666666666
  },
  "module this": {
    "means": 1.0
  },
  "all vis": {
    "ible": 1.0
  },
  "vis ible": {
    "and": 1.0
  },
  "ible and": {
    "can": 1.0
  },
  "and can": {
    "be": 1.0
  },
  "referenced within": {
    "these": 1.0
  },
  "within these": {
    "methods": 1.0
  },
  "these methods": {
    "the": 0.5,
    "if": 0.5
  },
  "common need": {
    "for": 1.0
  },
  "need for": {
    "this": 0.25,
    "any": 0.25,
    "concurrency": 0.25,
    "the": 0.25
  },
  "this scoping": {
    "is": 1.0
  },
  "scoping is": {
    "the": 1.0
  },
  "the definition": {
    "of": 1.0
  },
  "locally to": {
    "a": 1.0
  },
  "serve some": {
    "purpose": 1.0
  },
  "some purpose": {
    "for": 1.0
  },
  "purpose for": {
    "the": 1.0
  },
  "procedure typically": {
    "these": 1.0
  },
  "typically these": {
    "virtual": 1.0
  },
  "these virtual": {
    "methods": 1.0
  },
  "methods need": {
    "access": 1.0
  },
  "need access": {
    "to": 1.0
  },
  "data to": {
    "perform": 0.3333333333333333,
    "fewer": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "perform their": {
    "intended": 1.0
  },
  "their intended": {
    "function": 1.0
  },
  "intended function": {
    "for": 1.0
  },
  "function for": {
    "example": 1.0
  },
  "example member": {
    "myapp": 1.0
  },
  "myapp a": {
    "source": 1.0
  },
  "module someclass": {
    "class": 0.3333333333333333,
    "clw": 0.6666666666666666
  },
  "type module": {
    "someclass": 1.0
  },
  "someclass clw": {
    "propertya": 0.5,
    "contains": 0.5
  },
  "propertyb lon": {
    "g": 1.0
  },
  "lon g": {
    "initaandb": 1.0
  },
  "g initaandb": {
    "procedure": 1.0
  },
  "end myproc": {
    "procedure": 1.0
  },
  "myproc procedure": {
    "some": 1.0
  },
  "procedure some": {
    "non": 1.0
  },
  "some non": {
    "object": 1.0
  },
  "non object": {
    "procedure": 1.0
  },
  "object procedure": {
    "localvar": 1.0
  },
  "procedure localvar": {
    "long": 1.0
  },
  "localvar long": {
    "local": 1.0
  },
  "long local": {
    "variable": 0.5,
    "data": 0.5
  },
  "variable anotherclass": {
    "class": 1.0
  },
  "data manipulateaandb": {
    "procedure": 1.0
  },
  "myroutine anotherclass": {
    "initaandb": 1.0
  },
  "anotherclass initaandb": {
    "10": 1.0
  },
  "20 call": {
    "base": 1.0
  },
  "method myroutine": {
    "routine": 1.0
  },
  "routine routine": {
    "local": 1.0
  },
  "routine local": {
    "to": 1.0
  },
  "to myproc": {
    "and": 1.0
  },
  "myproc and": {
    "localvar": 1.0
  },
  "and localvar": {
    "10": 1.0
  },
  "localvar 10": {
    "anotherclass": 1.0
  },
  "manipulateaandb anotherclass": {
    "manipulateaandb": 1.0
  },
  "with access": {
    "to": 1.0
  },
  "to x": {
    "long": 1.0
  },
  "x long": {
    "local": 1.0
  },
  "routines code": {
    "loop": 1.0
  },
  "loop 10": {
    "times": 1.0
  },
  "10 times": {
    "x": 1.0
  },
  "times x": {
    "self": 1.0
  },
  "x self": {
    "propertya": 1.0
  },
  "propertyb localvar": {
    "message": 1.0
  },
  "localvar message": {
    "the": 1.0
  },
  "b localvar": {
    "is": 1.0
  },
  "localvar is": {
    "x": 1.0
  },
  "is x": {
    "do": 1.0
  },
  "x do": {
    "myroutine": 1.0
  },
  "myroutine increment": {
    "the": 1.0
  },
  "variable end": {
    "module": 1.0
  },
  "contains someclass": {
    "initaandb": 1.0
  },
  "propertyb passedb": {
    "self": 1.0
  },
  "manipulateaandb procedur": {
    "e": 1.0
  },
  "procedur e": {
    "base": 1.0
  },
  "e base": {
    "class": 1.0
  },
  "nothing code": {
    "clarion": 1.0
  },
  "guide 38": {
    "summary": 1.0
  },
  "38 summary": {
    "the": 1.0
  },
  "summary the": {
    "three": 1.0
  },
  "three most": {
    "important": 0.3333333333333333,
    "common": 0.3333333333333333,
    "commonly": 0.3333333333333333
  },
  "important concepts": {
    "in": 1.0
  },
  "orientation are": {
    "encapsulation": 1.0
  },
  "are encapsulation": {
    "inheritance": 1.0
  },
  "structure creates": {
    "encapsulation": 1.0
  },
  "creates encapsulation": {
    "the": 1.0
  },
  "class reside": {
    "in": 1.0
  },
  "module making": {
    "maintenance": 1.0
  },
  "maintenance easier": {
    "an": 1.0
  },
  "easier an": {
    "object": 1.0
  },
  "members properties": {
    "which": 0.5,
    "declared": 0.5
  },
  "properties which": {
    "shares": 1.0
  },
  "which shares": {
    "methods": 1.0
  },
  "shares methods": {
    "with": 1.0
  },
  "other instances": {
    "of": 1.0
  },
  "also any": {
    "derived": 1.0
  },
  "contain da": {
    "ta": 1.0
  },
  "da ta": {
    "members": 1.0
  },
  "ta members": {
    "properties": 1.0
  },
  "properties declared": {
    "as": 1.0
  },
  "declared as": {
    "simple": 0.5,
    "a": 0.5
  },
  "as simple": {
    "data": 1.0
  },
  "types or": {
    "as": 1.0
  },
  "or as": {
    "reference": 1.0
  },
  "to complex": {
    "data": 1.0
  },
  "types including": {
    "other": 1.0
  },
  "including other": {
    "classes": 1.0
  },
  "classes within": {
    "the": 1.0
  },
  "methods appropriate": {
    "to": 1.0
  },
  "instance are": {
    "referenced": 1.0
  },
  "referenced using": {
    "self": 1.0
  },
  "using self": {
    "as": 1.0
  },
  "name self": {
    "datamembername": 1.0
  },
  "self datamembername": {
    "or": 1.0
  },
  "datamembername or": {
    "self": 1.0
  },
  "or self": {
    "methodname": 1.0
  },
  "self methodname": {
    "constructor": 1.0
  },
  "methodname constructor": {
    "and": 1.0
  },
  "construct and": {
    "destruct": 1.0
  },
  "and destruct": {
    "are": 1.0
  },
  "destruct are": {
    "automatically": 1.0
  },
  "created or": {
    "destroyed": 1.0
  },
  "or destroyed": {
    "and": 1.0
  },
  "called all": {
    "properties": 1.0
  },
  "all properties": {
    "and": 1.0
  },
  "are pub": {
    "lic": 1.0
  },
  "pub lic": {
    "unless": 1.0
  },
  "lic unless": {
    "explicitly": 1.0
  },
  "or protected": {
    "attribute": 1.0
  },
  "attribute inheritance": {
    "is": 1.0
  },
  "is achieved": {
    "by": 1.0
  },
  "achieved by": {
    "deriving": 1.0
  },
  "by deriving": {
    "one": 1.0
  },
  "deriving one": {
    "class": 1.0
  },
  "from another": {
    "you": 1.0
  },
  "another you": {
    "can": 1.0
  },
  "override inherited": {
    "methods": 1.0
  },
  "by re": {
    "declaring": 1.0
  },
  "declaring and": {
    "re": 1.0
  },
  "and re": {
    "defining": 0.5,
    "written": 0.5
  },
  "re defining": {
    "them": 1.0
  },
  "defining them": {
    "in": 1.0
  },
  "class using": {
    "exactly": 1.0
  },
  "using exactly": {
    "the": 1.0
  },
  "same paramet": {
    "er": 1.0
  },
  "paramet er": {
    "list": 1.0
  },
  "er list": {
    "overridden": 1.0
  },
  "list overridden": {
    "inherited": 1.0
  },
  "overridden inherited": {
    "methods": 1.0
  },
  "and virtual": {
    "methods": 1.0
  },
  "call their": {
    "base": 1.0
  },
  "their base": {
    "class": 1.0
  },
  "class constituents": {
    "by": 1.0
  },
  "constituents by": {
    "using": 1.0
  },
  "by using": {
    "parent": 0.5,
    "your": 0.5
  },
  "using parent": {
    "just": 1.0
  },
  "parent just": {
    "like": 1.0
  },
  "self composition": {
    "provides": 1.0
  },
  "a viable": {
    "alternative": 1.0
  },
  "viable alternative": {
    "to": 1.0
  },
  "inheritance virtual": {
    "methods": 1.0
  },
  "allow standard": {
    "oop": 1.0
  },
  "oop polymorphism": {
    "while": 1.0
  },
  "polymorphism while": {
    "cla": 1.0
  },
  "while cla": {
    "rion": 1.0
  },
  "cla rion": {
    "s": 1.0
  },
  "rion s": {
    "procedure": 1.0
  },
  "overloading permits": {
    "a": 1.0
  },
  "permits a": {
    "non": 1.0
  },
  "non oop": {
    "form": 1.0
  },
  "oop form": {
    "of": 1.0
  },
  "are prototyped": {
    "in": 1.0
  },
  "base and": {
    "derived": 1.0
  },
  "classes objects": {
    "local": 1.0
  },
  "objects local": {
    "to": 1.0
  },
  "procedure share": {
    "local": 1.0
  },
  "share local": {
    "variables": 1.0
  },
  "routines with": {
    "the": 1.0
  },
  "procedure 39": {
    "database": 1.0
  },
  "design 4": {
    "database": 1.0
  },
  "design database": {
    "design": 1.0
  },
  "design there": {
    "are": 1.0
  },
  "a number": {
    "of": 1.0
  },
  "of database": {
    "organization": 0.6666666666666666,
    "applications": 0.3333333333333333
  },
  "database organization": {
    "in": 0.5,
    "on": 0.5
  },
  "organization in": {
    "use": 1.0
  },
  "in use": {
    "today": 0.5,
    "a": 0.5
  },
  "use today": {
    "the": 1.0
  },
  "today the": {
    "inverted": 1.0
  },
  "the inverted": {
    "list": 1.0
  },
  "inverted list": {
    "model": 1.0
  },
  "list model": {
    "the": 1.0
  },
  "the hierarchical": {
    "model": 1.0
  },
  "hierarchical model": {
    "and": 1.0
  },
  "model and": {
    "the": 1.0
  },
  "the network": {
    "model": 0.16666666666666666,
    "therefore": 0.16666666666666666,
    "types": 0.16666666666666666,
    "to": 0.16666666666666666,
    "traffic": 0.3333333333333333
  },
  "network model": {
    "are": 1.0
  },
  "model are": {
    "three": 1.0
  },
  "three that": {
    "have": 1.0
  },
  "been widely": {
    "used": 1.0
  },
  "widely used": {
    "in": 1.0
  },
  "used in": {
    "the": 0.2222222222222222,
    "ma": 0.1111111111111111,
    "almost": 0.1111111111111111,
    "multi": 0.1111111111111111,
    "some": 0.1111111111111111,
    "all": 0.1111111111111111,
    "conjunction": 0.1111111111111111,
    "client": 0.1111111111111111
  },
  "the past": {
    "mostly": 1.0
  },
  "past mostly": {
    "these": 1.0
  },
  "mostly these": {
    "models": 1.0
  },
  "these models": {
    "have": 1.0
  },
  "models have": {
    "been": 1.0
  },
  "been used": {
    "on": 1.0
  },
  "used on": {
    "mainframe": 1.0
  },
  "on mainframe": {
    "computers": 1.0
  },
  "mainframe computers": {
    "and": 1.0
  },
  "computers and": {
    "have": 1.0
  },
  "and have": {
    "not": 1.0
  },
  "have not": {
    "been": 1.0
  },
  "not been": {
    "implemented": 1.0
  },
  "been implemented": {
    "on": 1.0
  },
  "implemented on": {
    "pc": 1.0
  },
  "on pc": {
    "systems": 1.0
  },
  "pc systems": {
    "on": 0.5,
    "today": 0.5
  },
  "systems on": {
    "a": 1.0
  },
  "a widespread": {
    "basis": 1.0
  },
  "widespread basis": {
    "the": 1.0
  },
  "basis the": {
    "clarion": 1.0
  },
  "the tools": {
    "to": 1.0
  },
  "tools to": {
    "allow": 1.0
  },
  "to utilize": {
    "any": 0.5,
    "this": 0.5
  },
  "utilize any": {
    "of": 1.0
  },
  "you so": {
    "choose": 0.5,
    "ch": 0.5
  },
  "so choose": {
    "by": 1.0
  },
  "choose by": {
    "far": 0.5,
    "directly": 0.5
  },
  "by far": {
    "the": 1.0
  },
  "far the": {
    "most": 0.5,
    "more": 0.5
  },
  "organization on": {
    "pc": 1.0
  },
  "systems today": {
    "is": 1.0
  },
  "today is": {
    "the": 1.0
  },
  "the relational": {
    "model": 0.42857142857142855,
    "terms": 0.14285714285714285,
    "requirements": 0.14285714285714285,
    "definitions": 0.14285714285714285,
    "join": 0.14285714285714285
  },
  "relational model": {
    "as": 0.3333333333333333,
    "this": 0.3333333333333333,
    "which": 0.3333333333333333
  },
  "model as": {
    "defined": 1.0
  },
  "as defined": {
    "by": 1.0
  },
  "defined by": {
    "e": 1.0
  },
  "by e": {
    "f": 1.0
  },
  "e f": {
    "codd": 1.0
  },
  "f codd": {
    "there": 1.0
  },
  "codd there": {
    "is": 1.0
  },
  "no database": {
    "program": 1.0
  },
  "database program": {
    "which": 1.0
  },
  "program which": {
    "completely": 1.0
  },
  "which completely": {
    "implements": 1.0
  },
  "completely implements": {
    "all": 1.0
  },
  "implements all": {
    "of": 1.0
  },
  "of codd": {
    "s": 1.0
  },
  "codd s": {
    "rules": 1.0
  },
  "s rules": {
    "regarding": 0.5,
    "to": 0.5
  },
  "rules regarding": {
    "relational": 1.0
  },
  "regarding relational": {
    "database": 1.0
  },
  "database because": {
    "it": 1.0
  },
  "i s": {
    "an": 0.3333333333333333,
    "processed": 0.3333333333333333,
    "re": 0.3333333333333333
  },
  "s an": {
    "extremely": 1.0
  },
  "an extremely": {
    "complex": 1.0
  },
  "extremely complex": {
    "mathematical": 1.0
  },
  "complex mathematical": {
    "model": 1.0
  },
  "mathematical model": {
    "however": 1.0
  },
  "model however": {
    "most": 1.0
  },
  "however most": {
    "database": 1.0
  },
  "most database": {
    "programs": 1.0
  },
  "database programs": {
    "implement": 1.0
  },
  "programs implement": {
    "a": 1.0
  },
  "a sufficient": {
    "sub": 1.0
  },
  "sufficient sub": {
    "set": 1.0
  },
  "sub set": {
    "of": 1.0
  },
  "rules to": {
    "allow": 1.0
  },
  "allow practical": {
    "use": 1.0
  },
  "practical use": {
    "of": 1.0
  },
  "the principles": {
    "of": 1.0
  },
  "principles of": {
    "the": 1.0
  },
  "model this": {
    "essay": 1.0
  },
  "very brief": {
    "overview": 1.0
  },
  "brief overview": {
    "of": 1.0
  },
  "overview of": {
    "the": 1.0
  },
  "most fundamental": {
    "aspect": 1.0
  },
  "fundamental aspect": {
    "s": 1.0
  },
  "aspect s": {
    "of": 1.0
  },
  "of relational": {
    "database": 1.0
  },
  "design as": {
    "they": 1.0
  },
  "as they": {
    "impact": 1.0
  },
  "they impact": {
    "business": 1.0
  },
  "impact business": {
    "programming": 1.0
  },
  "business programming": {
    "relational": 1.0
  },
  "programming relational": {
    "database": 1.0
  },
  "design one": {
    "basic": 0.5,
    "primary": 0.5
  },
  "one basic": {
    "principle": 1.0
  },
  "basic principle": {
    "of": 1.0
  },
  "principle of": {
    "relational": 1.0
  },
  "database involves": {
    "the": 1.0
  },
  "involves the": {
    "database": 0.5,
    "active": 0.5
  },
  "the database": {
    "design": 0.05128205128205128,
    "referential": 0.02564102564102564,
    "in": 0.02564102564102564,
    "that": 0.02564102564102564,
    "thus": 0.02564102564102564,
    "engines": 0.02564102564102564,
    "engine": 0.05128205128205128,
    "yourself": 0.02564102564102564,
    "when": 0.02564102564102564,
    "more": 0.02564102564102564,
    "orphan": 0.02564102564102564,
    "contain": 0.02564102564102564,
    "server": 0.3333333333333333,
    "without": 0.02564102564102564,
    "typical": 0.02564102564102564,
    "even": 0.02564102564102564,
    "by": 0.02564102564102564,
    "and": 0.02564102564102564,
    "the": 0.02564102564102564,
    "they": 0.02564102564102564,
    "which": 0.02564102564102564,
    "across": 0.02564102564102564,
    "specific": 0.02564102564102564,
    "you": 0.02564102564102564,
    "for": 0.02564102564102564
  },
  "design a": {
    "data": 0.5,
    "clarion": 0.5
  },
  "data item": {
    "should": 0.6666666666666666,
    "returned": 0.3333333333333333
  },
  "item should": {
    "be": 1.0
  },
  "be stored": {
    "once": 0.5,
    "in": 0.25,
    "there": 0.25
  },
  "stored once": {
    "not": 0.5,
    "separate": 0.5
  },
  "once not": {
    "duplicated": 1.0
  },
  "not duplicated": {
    "in": 1.0
  },
  "in m": {
    "any": 1.0
  },
  "m any": {
    "places": 1.0
  },
  "any places": {
    "there": 1.0
  },
  "places there": {
    "are": 1.0
  },
  "two benefits": {
    "to": 1.0
  },
  "benefits to": {
    "this": 1.0
  },
  "this lowered": {
    "disk": 1.0
  },
  "lowered disk": {
    "space": 1.0
  },
  "disk space": {
    "requirements": 0.5,
    "with": 0.5
  },
  "space requirements": {
    "and": 1.0
  },
  "and easier": {
    "data": 0.5,
    "to": 0.5
  },
  "easier data": {
    "maintenance": 1.0
  },
  "data maintenance": {
    "to": 1.0
  },
  "maintenance to": {
    "achieve": 1.0
  },
  "to achieve": {
    "this": 1.0
  },
  "achieve this": {
    "end": 1.0
  },
  "this end": {
    "a": 1.0
  },
  "end a": {
    "relational": 1.0
  },
  "a relational": {
    "database": 0.6666666666666666,
    "project": 0.3333333333333333
  },
  "design splits": {
    "the": 1.0
  },
  "splits the": {
    "data": 1.0
  },
  "data into": {
    "separate": 0.5,
    "those": 0.25,
    "the": 0.25
  },
  "separate related": {
    "files": 1.0
  },
  "related files": {
    "for": 1.0
  },
  "files for": {
    "example": 0.5,
    "write": 0.5
  },
  "assume a": {
    "very": 1.0
  },
  "simple order": {
    "entry": 1.0
  },
  "order entry": {
    "syste": 1.0
  },
  "entry syste": {
    "m": 1.0
  },
  "syste m": {
    "which": 1.0
  },
  "m which": {
    "needs": 1.0
  },
  "which needs": {
    "to": 1.0
  },
  "to store": {
    "the": 1.0
  },
  "store the": {
    "following": 1.0
  },
  "following data": {
    "customer": 1.0
  },
  "data customer": {
    "name": 1.0
  },
  "customer name": {
    "customer": 0.6,
    "address": 0.4
  },
  "name customer": {
    "address": 1.0
  },
  "customer address": {
    "shipto": 0.3333333333333333,
    "order": 0.6666666666666666
  },
  "address shipto": {
    "address": 1.0
  },
  "shipto address": {
    "order": 0.42857142857142855,
    "and": 0.14285714285714285,
    "so": 0.14285714285714285,
    "41": 0.14285714285714285,
    "end": 0.14285714285714285
  },
  "address order": {
    "date": 0.6,
    "file": 0.4
  },
  "order date": {
    "product": 0.16666666666666666,
    "would": 0.16666666666666666,
    "item": 0.3333333333333333,
    "shipto": 0.16666666666666666,
    "end": 0.16666666666666666
  },
  "date product": {
    "ordered": 1.0
  },
  "product ordered": {
    "quantity": 0.5,
    "2nd": 0.25,
    "primary": 0.25
  },
  "ordered quantity": {
    "ordered": 1.0
  },
  "quantity ordered": {
    "unit": 1.0
  },
  "ordered unit": {
    "price": 1.0
  },
  "unit price": {
    "this": 0.25,
    "with": 0.25,
    "in": 0.25,
    "end": 0.25
  },
  "price this": {
    "data": 1.0
  },
  "data could": {
    "all": 1.0
  },
  "stored in": {
    "each": 0.3333333333333333,
    "the": 0.3333333333333333,
    "your": 0.3333333333333333
  },
  "in each": {
    "record": 0.3333333333333333,
    "file": 0.6666666666666666
  },
  "each record": {
    "of": 0.16666666666666666,
    "in": 0.5,
    "next": 0.16666666666666666,
    "i": 0.16666666666666666
  },
  "record of": {
    "one": 1.0
  },
  "one file": {
    "but": 0.14285714285714285,
    "that": 0.14285714285714285,
    "may": 0.14285714285714285,
    "you": 0.14285714285714285,
    "are": 0.14285714285714285,
    "relationships": 0.14285714285714285,
    "and": 0.14285714285714285
  },
  "file but": {
    "that": 1.0
  },
  "but that": {
    "would": 1.0
  },
  "that would": {
    "be": 0.3333333333333333,
    "require": 0.3333333333333333,
    "normally": 0.3333333333333333
  },
  "be very": {
    "inefficient": 0.3333333333333333,
    "clear": 0.3333333333333333,
    "large": 0.3333333333333333
  },
  "very inefficient": {
    "the": 1.0
  },
  "inefficient the": {
    "customer": 1.0
  },
  "the customer": {
    "name": 0.1111111111111111,
    "file": 0.5555555555555556,
    "information": 0.1111111111111111,
    "number": 0.2222222222222222
  },
  "name address": {
    "shipto": 0.5,
    "string": 0.5
  },
  "address and": {
    "order": 1.0
  },
  "and order": {
    "date": 0.5,
    "the": 0.5
  },
  "date would": {
    "be": 1.0
  },
  "be duplicated": {
    "for": 1.0
  },
  "duplicated for": {
    "every": 1.0
  },
  "for every": {
    "item": 0.2,
    "file": 0.2,
    "one": 0.2,
    "child": 0.2,
    "existing": 0.2
  },
  "every item": {
    "ordered": 1.0
  },
  "item ordered": {
    "on": 1.0
  },
  "ordered on": {
    "every": 1.0
  },
  "on every": {
    "order": 1.0
  },
  "every order": {
    "to": 1.0
  },
  "order to": {
    "eliminate": 1.0
  },
  "to eliminate": {
    "the": 0.5,
    "data": 0.5
  },
  "eliminate the": {
    "duplication": 0.5,
    "need": 0.5
  },
  "the duplication": {
    "you": 1.0
  },
  "duplication you": {
    "split": 1.0
  },
  "you split": {
    "the": 1.0
  },
  "split the": {
    "data": 1.0
  },
  "separate files": {
    "customer": 0.5,
    "are": 0.5
  },
  "files customer": {
    "file": 1.0
  },
  "customer file": {
    "customer": 0.2222222222222222,
    "contains": 0.1111111111111111,
    "there": 0.1111111111111111,
    "the": 0.2222222222222222,
    "and": 0.1111111111111111,
    "record": 0.1111111111111111,
    "driver": 0.1111111111111111
  },
  "file customer": {
    "name": 0.5,
    "number": 0.5
  },
  "order file": {
    "shipto": 0.07142857142857142,
    "contains": 0.07142857142857142,
    "order": 0.14285714285714285,
    "as": 0.07142857142857142,
    "to": 0.07142857142857142,
    "it": 0.07142857142857142,
    "is": 0.07142857142857142,
    "records": 0.07142857142857142,
    "and": 0.07142857142857142,
    "many": 0.07142857142857142,
    "driver": 0.07142857142857142,
    "was": 0.07142857142857142,
    "loop": 0.07142857142857142
  },
  "file shipto": {
    "address": 1.0
  },
  "date item": {
    "file": 1.0
  },
  "item file": {
    "product": 0.1,
    "contains": 0.1,
    "order": 0.1,
    "now": 0.1,
    "also": 0.1,
    "driver": 0.1,
    "is": 0.1,
    "and": 0.1,
    "s": 0.1,
    "loop": 0.1
  },
  "file product": {
    "ordered": 0.3333333333333333,
    "number": 0.6666666666666666
  },
  "price with": {
    "this": 1.0
  },
  "this file": {
    "configuration": 1.0
  },
  "file configuration": {
    "the": 1.0
  },
  "configuration the": {
    "customer": 1.0
  },
  "customer information": {
    "the": 1.0
  },
  "information the": {
    "order": 1.0
  },
  "the information": {
    "that": 0.5,
    "for": 0.25,
    "stored": 0.25
  },
  "information that": {
    "is": 0.3333333333333333,
    "logically": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "is pertinent": {
    "to": 1.0
  },
  "pertinent to": {
    "one": 1.0
  },
  "to one": {
    "order": 0.1111111111111111,
    "one": 0.1111111111111111,
    "and": 0.1111111111111111,
    "relationship": 0.4444444444444444,
    "same": 0.1111111111111111,
    "file": 0.1111111111111111
  },
  "one order": {
    "and": 0.5,
    "may": 0.5
  },
  "order and": {
    "the": 0.14285714285714285,
    "put": 0.42857142857142855,
    "get": 0.14285714285714285,
    "delete": 0.14285714285714285,
    "starting": 0.14285714285714285
  },
  "the item": {
    "file": 0.8571428571428571,
    "record": 0.14285714285714285
  },
  "information for": {
    "each": 0.5,
    "more": 0.5
  },
  "each item": {
    "in": 1.0
  },
  "item in": {
    "the": 1.0
  },
  "order this": {
    "certainly": 1.0
  },
  "this certainly": {
    "eliminates": 1.0
  },
  "certainly eliminates": {
    "duplicate": 1.0
  },
  "eliminates duplicate": {
    "data": 1.0
  },
  "duplicate data": {
    "however": 1.0
  },
  "data however": {
    "how": 1.0
  },
  "however how": {
    "do": 1.0
  },
  "you tell": {
    "which": 1.0
  },
  "tell which": {
    "record": 1.0
  },
  "which record": {
    "in": 1.0
  },
  "record in": {
    "what": 0.047619047619047616,
    "file": 0.047619047619047616,
    "one": 0.047619047619047616,
    "another": 0.047619047619047616,
    "order": 0.047619047619047616,
    "turn": 0.047619047619047616,
    "this": 0.047619047619047616,
    "sequence": 0.047619047619047616,
    "sequen": 0.047619047619047616,
    "the": 0.19047619047619047,
    "th": 0.047619047619047616,
    "index": 0.14285714285714285,
    "memory": 0.047619047619047616,
    "a": 0.09523809523809523,
    "ea": 0.047619047619047616
  },
  "in what": {
    "file": 1.0
  },
  "what file": {
    "relates": 1.0
  },
  "file relates": {
    "to": 1.0
  },
  "relates to": {
    "what": 1.0
  },
  "what other": {
    "records": 1.0
  },
  "other records": {
    "in": 1.0
  },
  "records in": {
    "which": 0.0625,
    "file": 0.0625,
    "one": 0.25,
    "the": 0.3125,
    "another": 0.0625,
    "as": 0.0625,
    "some": 0.0625,
    "ascending": 0.0625,
    "a": 0.0625
  },
  "which other": {
    "files": 1.0
  },
  "other files": {
    "this": 1.0
  },
  "relational terms": {
    "primar": 1.0
  },
  "terms primar": {
    "y": 1.0
  },
  "primar y": {
    "key": 1.0
  },
  "y key": {
    "and": 1.0
  },
  "and foreign": {
    "key": 0.625,
    "keys": 0.3125,
    "k": 0.0625
  },
  "key a": {
    "primary": 0.25,
    "lso": 0.25,
    "clarion": 0.25,
    "number": 0.25
  },
  "a primary": {
    "key": 1.0
  },
  "primary key": {
    "is": 0.05194805194805195,
    "would": 0.012987012987012988,
    "fields": 0.012987012987012988,
    "of": 0.012987012987012988,
    "record": 0.12987012987012986,
    "in": 0.012987012987012988,
    "customer": 0.03896103896103896,
    "component": 0.05194805194805195,
    "the": 0.03896103896103896,
    "because": 0.012987012987012988,
    "and": 0.06493506493506493,
    "part": 0.025974025974025976,
    "product": 0.025974025974025976,
    "on": 0.012987012987012988,
    "a": 0.012987012987012988,
    "name": 0.012987012987012988,
    "custkey": 0.012987012987012988,
    "custno": 0.012987012987012988,
    "description": 0.025974025974025976,
    "partprodkey": 0.012987012987012988,
    "declarations": 0.012987012987012988,
    "itm": 0.012987012987012988,
    "value": 0.24675324675324675,
    "if": 0.025974025974025976,
    "save": 0.03896103896103896,
    "there": 0.012987012987012988,
    "are": 0.012987012987012988,
    "being": 0.012987012987012988,
    "values": 0.012987012987012988,
    "idnumber": 0.012987012987012988
  },
  "key is": {
    "an": 0.16666666666666666,
    "required": 0.08333333333333333,
    "not": 0.08333333333333333,
    "dependent": 0.08333333333333333,
    "necessary": 0.08333333333333333,
    "to": 0.08333333333333333,
    "needed": 0.08333333333333333,
    "a": 0.08333333333333333,
    "dynamically": 0.16666666666666666,
    "also": 0.08333333333333333
  },
  "an index": {
    "into": 0.13333333333333333,
    "is": 0.13333333333333333,
    "because": 0.06666666666666667,
    "should": 0.06666666666666667,
    "whose": 0.06666666666666667,
    "value": 0.13333333333333333,
    "procedure": 0.06666666666666667,
    "entry": 0.06666666666666667,
    "prior": 0.06666666666666667,
    "a": 0.06666666666666667,
    "record": 0.06666666666666667,
    "the": 0.06666666666666667
  },
  "index into": {
    "a": 1.0
  },
  "file based": {
    "on": 1.0
  },
  "based on": {
    "a": 0.3333333333333333,
    "the": 0.5,
    "an": 0.16666666666666666
  },
  "a field": {
    "or": 0.25,
    "may": 0.125,
    "of": 0.125,
    "which": 0.25,
    "from": 0.125,
    "is": 0.125
  },
  "field or": {
    "fields": 1.0
  },
  "or fields": {
    "that": 0.5,
    "which": 0.5
  },
  "fields that": {
    "cannot": 0.5,
    "make": 0.5
  },
  "cannot contain": {
    "duplicate": 1.0
  },
  "contain duplicate": {
    "or": 0.3333333333333333,
    "products": 0.3333333333333333,
    "index": 0.3333333333333333
  },
  "duplicate or": {
    "null": 1.0
  },
  "or null": {
    "values": 1.0
  },
  "null values": {
    "to": 0.3333333333333333,
    "if": 0.16666666666666666,
    "again": 0.16666666666666666,
    "for": 0.16666666666666666,
    "in": 0.16666666666666666
  },
  "to translat": {
    "e": 1.0
  },
  "translat e": {
    "this": 1.0
  },
  "e this": {
    "to": 1.0
  },
  "this to": {
    "clarion": 1.0
  },
  "language terms": {
    "a": 1.0
  },
  "terms a": {
    "primary": 1.0
  },
  "key would": {
    "be": 1.0
  },
  "a unique": {
    "key": 0.6666666666666666,
    "and": 0.3333333333333333
  },
  "unique key": {
    "no": 0.5,
    "two": 0.5
  },
  "key no": {
    "dup": 1.0
  },
  "no dup": {
    "attribute": 1.0
  },
  "dup attribute": {
    "with": 0.5,
    "to": 0.5
  },
  "attribute with": {
    "key": 1.0
  },
  "with key": {
    "compone": 1.0
  },
  "key compone": {
    "nts": 1.0
  },
  "compone nts": {
    "that": 1.0
  },
  "nts that": {
    "are": 1.0
  },
  "all required": {
    "fields": 1.0
  },
  "required fields": {
    "for": 1.0
  },
  "fields for": {
    "data": 1.0
  },
  "for data": {
    "entry": 1.0
  },
  "data entry": {
    "in": 0.14285714285714285,
    "verification": 0.14285714285714285,
    "procedure": 0.14285714285714285,
    "screen": 0.2857142857142857,
    "one": 0.14285714285714285,
    "controls": 0.14285714285714285
  },
  "entry in": {
    "strict": 1.0
  },
  "in strict": {
    "relational": 1.0
  },
  "strict relational": {
    "database": 1.0
  },
  "one primary": {
    "key": 1.0
  },
  "every file": {
    "a": 1.0
  },
  "file a": {
    "foreign": 0.16666666666666666,
    "point": 0.16666666666666666,
    "defining": 0.16666666666666666,
    "lookup": 0.16666666666666666,
    "user": 0.16666666666666666,
    "and": 0.16666666666666666
  },
  "a foreign": {
    "key": 1.0
  },
  "fields which": {
    "contain": 1.0
  },
  "which contain": {
    "values": 0.5,
    "duplicate": 0.5
  },
  "contain values": {
    "that": 1.0
  },
  "values that": {
    "duplicate": 1.0
  },
  "that duplicate": {
    "t": 1.0
  },
  "duplicate t": {
    "he": 1.0
  },
  "he values": {
    "contained": 1.0
  },
  "values contained": {
    "in": 1.0
  },
  "contained in": {
    "the": 0.75,
    "one": 0.25
  },
  "the primary": {
    "key": 0.8620689655172413,
    "and": 0.06896551724137931,
    "or": 0.034482758620689655,
    "purpose": 0.034482758620689655
  },
  "key fields": {
    "of": 0.5,
    "allow": 0.5
  },
  "fields of": {
    "another": 0.3333333333333333,
    "a": 0.6666666666666666
  },
  "another related": {
    "file": 1.0
  },
  "related file": {
    "to": 1.0
  },
  "re state": {
    "this": 1.0
  },
  "state this": {
    "a": 1.0
  },
  "this a": {
    "foreign": 0.3333333333333333,
    "good": 0.3333333333333333,
    "client": 0.3333333333333333
  },
  "key contains": {
    "a": 1.0
  },
  "key of": {
    "another": 0.5,
    "some": 0.5
  },
  "another file": {
    "primary": 0.25,
    "this": 0.25,
    "expand": 0.25,
    "table": 0.25
  },
  "file primary": {
    "keys": 1.0
  },
  "primary keys": {
    "and": 0.3333333333333333,
    "will": 0.3333333333333333,
    "maintaining": 0.3333333333333333
  },
  "keys and": {
    "foreign": 0.5,
    "indexes": 0.5
  },
  "foreign keys": {
    "form": 0.058823529411764705,
    "are": 0.058823529411764705,
    "for": 0.058823529411764705,
    "need": 0.058823529411764705,
    "the": 0.058823529411764705,
    "were": 0.058823529411764705,
    "that": 0.29411764705882354,
    "do": 0.11764705882352941,
    "on": 0.058823529411764705,
    "a": 0.058823529411764705,
    "t": 0.058823529411764705,
    "contain": 0.058823529411764705
  },
  "keys form": {
    "the": 1.0
  },
  "form the": {
    "basis": 0.5,
    "file": 0.5
  },
  "the basis": {
    "of": 1.0
  },
  "basis of": {
    "file": 1.0
  },
  "of file": {
    "relationships": 0.1111111111111111,
    "format": 0.1111111111111111,
    "in": 0.1111111111111111,
    "record": 0.1111111111111111,
    "top": 0.1111111111111111,
    "physical": 0.1111111111111111,
    "if": 0.1111111111111111,
    "loop": 0.1111111111111111,
    "sequential": 0.1111111111111111
  },
  "relationships in": {
    "relational": 1.0
  },
  "in relational": {
    "database": 1.0
  },
  "database the": {
    "matching": 0.5,
    "on": 0.5
  },
  "the matching": {
    "values": 1.0
  },
  "matching values": {
    "contained": 1.0
  },
  "primary and": {
    "foreign": 1.0
  },
  "keys are": {
    "the": 0.5,
    "allowed": 0.5
  },
  "the pointers": {
    "to": 1.0
  },
  "pointers to": {
    "the": 1.0
  },
  "the related": {
    "records": 0.6666666666666666,
    "child": 0.3333333333333333
  },
  "related records": {
    "the": 0.5,
    "in": 0.5
  },
  "records the": {
    "foreign": 0.2,
    "order": 0.2,
    "held": 0.2,
    "fields": 0.2,
    "client": 0.2
  },
  "key records": {
    "in": 0.5,
    "from": 0.5
  },
  "in file": {
    "a": 0.5,
    "b": 0.5
  },
  "point back": {
    "to": 1.0
  },
  "key record": {
    "in": 0.08333333333333333,
    "record": 0.5833333333333334,
    "what": 0.08333333333333333,
    "or": 0.25
  },
  "file b": {
    "and": 0.5,
    "points": 0.25,
    "at": 0.25
  },
  "b and": {
    "the": 0.5,
    "cannot": 0.5
  },
  "key in": {
    "file": 0.25,
    "the": 0.75
  },
  "b points": {
    "to": 1.0
  },
  "key recor": {
    "ds": 1.0
  },
  "recor ds": {
    "in": 1.0
  },
  "ds in": {
    "file": 1.0
  },
  "a defining": {
    "the": 1.0
  },
  "keys for": {
    "the": 1.0
  },
  "example requires": {
    "that": 1.0
  },
  "requires that": {
    "you": 0.5,
    "the": 0.5
  },
  "add some": {
    "fields": 1.0
  },
  "some fields": {
    "to": 0.5,
    "if": 0.5
  },
  "fields to": {
    "the": 0.5,
    "expand": 0.5
  },
  "the files": {
    "to": 0.16666666666666666,
    "defined": 0.5,
    "need": 0.16666666666666666,
    "the": 0.16666666666666666
  },
  "files to": {
    "fulfill": 1.0
  },
  "to fulfill": {
    "the": 1.0
  },
  "fulfill the": {
    "relational": 1.0
  },
  "relational requirements": {
    "clarion": 1.0
  },
  "requirements clarion": {
    "language": 1.0
  },
  "guide 40": {
    "customer": 1.0
  },
  "40 customer": {
    "file": 1.0
  },
  "customer number": {
    "primary": 0.2857142857142857,
    "foreign": 0.42857142857142855,
    "field": 0.14285714285714285,
    "was": 0.14285714285714285
  },
  "number primary": {
    "key": 1.0
  },
  "key customer": {
    "name": 0.3333333333333333,
    "number": 0.6666666666666666
  },
  "file order": {
    "number": 1.0
  },
  "order number": {
    "primary": 0.5555555555555556,
    "1st": 0.1111111111111111,
    "has": 0.1111111111111111,
    "as": 0.1111111111111111,
    "product": 0.1111111111111111
  },
  "number foreign": {
    "key": 1.0
  },
  "key shipto": {
    "address": 1.0
  },
  "number 1st": {
    "primary": 1.0
  },
  "1st primary": {
    "key": 1.0
  },
  "key component": {
    "and": 0.6,
    "quantity": 0.2,
    "set": 0.2
  },
  "component and": {
    "foreign": 1.0
  },
  "key product": {
    "ordered": 0.25,
    "description": 0.5,
    "number": 0.25
  },
  "ordered 2nd": {
    "primary": 1.0
  },
  "2nd primary": {
    "key": 1.0
  },
  "component quantity": {
    "ordered": 1.0
  },
  "price in": {
    "the": 1.0
  },
  "file there": {
    "is": 1.0
  },
  "no guarantee": {
    "that": 1.0
  },
  "guarantee that": {
    "there": 1.0
  },
  "that there": {
    "could": 0.5,
    "is": 0.5
  },
  "there could": {
    "not": 1.0
  },
  "could not": {
    "be": 1.0
  },
  "be duplicate": {
    "customer": 1.0
  },
  "duplicate customer": {
    "names": 1.0
  },
  "customer names": {
    "therefore": 1.0
  },
  "names therefore": {
    "the": 1.0
  },
  "number field": {
    "is": 1.0
  },
  "field is": {
    "added": 0.3333333333333333,
    "null": 0.6666666666666666
  },
  "is added": {
    "to": 0.6666666666666666,
    "changed": 0.3333333333333333
  },
  "added to": {
    "become": 0.25,
    "the": 0.75
  },
  "to become": {
    "t": 1.0
  },
  "become t": {
    "he": 1.0
  },
  "he primary": {
    "key": 1.0
  },
  "key the": {
    "order": 0.25,
    "relational": 0.25,
    "determination": 0.25,
    "item": 0.25
  },
  "number has": {
    "been": 1.0
  },
  "been added": {
    "to": 1.0
  },
  "file as": {
    "the": 0.5,
    "returned": 0.5
  },
  "key because": {
    "there": 1.0
  },
  "because there": {
    "is": 1.0
  },
  "no other": {
    "field": 0.3333333333333333,
    "user": 0.6666666666666666
  },
  "other field": {
    "that": 1.0
  },
  "field that": {
    "is": 1.0
  },
  "is absolutely": {
    "unique": 1.0
  },
  "absolutely unique": {
    "in": 1.0
  },
  "unique in": {
    "that": 1.0
  },
  "that file": {
    "the": 0.25,
    "then": 0.25,
    "clarion": 0.25,
    "system": 0.25
  },
  "number was": {
    "also": 1.0
  },
  "was also": {
    "added": 1.0
  },
  "also added": {
    "as": 1.0
  },
  "added as": {
    "a": 1.0
  },
  "to relate": {
    "the": 0.5,
    "to": 0.5
  },
  "relate the": {
    "order": 1.0
  },
  "file now": {
    "contains": 1.0
  },
  "number as": {
    "a": 1.0
  },
  "relate to": {
    "the": 1.0
  },
  "file it": {
    "also": 1.0
  },
  "also becomes": {
    "the": 1.0
  },
  "becomes the": {
    "first": 1.0
  },
  "first component": {
    "of": 0.5,
    "field": 0.5
  },
  "component of": {
    "the": 1.0
  },
  "the multiple": {
    "component": 1.0
  },
  "multiple component": {
    "order": 0.25,
    "primary": 0.25,
    "index": 0.5
  },
  "component order": {
    "number": 1.0
  },
  "number product": {
    "ordered": 1.0
  },
  "ordered primary": {
    "key": 1.0
  },
  "relational definitions": {
    "of": 1.0
  },
  "of primary": {
    "key": 1.0
  },
  "foreign k": {
    "ey": 1.0
  },
  "k ey": {
    "do": 1.0
  },
  "ey do": {
    "not": 1.0
  },
  "not necessarily": {
    "require": 0.5,
    "correspond": 0.5
  },
  "necessarily require": {
    "the": 1.0
  },
  "require the": {
    "declaration": 1.0
  },
  "clarion key": {
    "based": 0.1,
    "if": 0.1,
    "but": 0.1,
    "may": 0.1,
    "a": 0.2,
    "is": 0.2,
    "and": 0.2
  },
  "key based": {
    "on": 1.0
  },
  "primary or": {
    "foreign": 1.0
  },
  "or foreign": {
    "key": 1.0
  },
  "key this": {
    "means": 1.0
  },
  "that despite": {
    "the": 1.0
  },
  "these keys": {
    "exist": 1.0
  },
  "keys exist": {
    "in": 1.0
  },
  "in theory": {
    "you": 1.0
  },
  "theory you": {
    "will": 1.0
  },
  "will only": {
    "declare": 1.0
  },
  "only declare": {
    "a": 1.0
  },
  "key if": {
    "your": 0.25,
    "you": 0.25,
    "related": 0.5
  },
  "your application": {
    "actually": 1.0
  },
  "application actually": {
    "needs": 1.0
  },
  "actually needs": {
    "it": 1.0
  },
  "needs it": {
    "for": 1.0
  },
  "some speci": {
    "fic": 1.0
  },
  "speci fic": {
    "file": 1.0
  },
  "fic file": {
    "access": 1.0
  },
  "access generally": {
    "speaking": 1.0
  },
  "generally speaking": {
    "most": 0.5,
    "records": 0.5
  },
  "speaking most": {
    "all": 1.0
  },
  "most all": {
    "primary": 1.0
  },
  "all primary": {
    "keys": 1.0
  },
  "keys will": {
    "have": 1.0
  },
  "key but": {
    "fewer": 1.0
  },
  "but fewer": {
    "foreign": 1.0
  },
  "fewer foreign": {
    "keys": 1.0
  },
  "keys need": {
    "have": 1.0
  },
  "need have": {
    "clarion": 1.0
  },
  "have clarion": {
    "keys": 1.0
  },
  "clarion keys": {
    "declared": 1.0
  },
  "keys declared": {
    "file": 0.5,
    "referential": 0.5
  },
  "declared file": {
    "relationships": 1.0
  },
  "relationships there": {
    "are": 1.0
  },
  "three types": {
    "of": 1.0
  },
  "of relationships": {
    "that": 1.0
  },
  "relationships that": {
    "may": 1.0
  },
  "defined between": {
    "a": 1.0
  },
  "between a": {
    "ny": 0.5,
    "field": 0.5
  },
  "a ny": {
    "two": 0.5,
    "file": 0.5
  },
  "ny two": {
    "files": 1.0
  },
  "two files": {
    "in": 0.25,
    "with": 0.25,
    "the": 0.25,
    "tables": 0.25
  },
  "files in": {
    "a": 0.3333333333333333,
    "separate": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "database one": {
    "to": 1.0
  },
  "one one": {
    "to": 1.0
  },
  "many also": {
    "called": 1.0
  },
  "called parent": {
    "child": 1.0
  },
  "parent child": {
    "and": 0.4,
    "is": 0.2,
    "relationship": 0.4
  },
  "child and": {
    "its": 0.5,
    "many": 0.5
  },
  "its reverse": {
    "view": 1.0
  },
  "reverse view": {
    "many": 0.3333333333333333,
    "is": 0.3333333333333333,
    "one": 0.3333333333333333
  },
  "view many": {
    "to": 1.0
  },
  "many to": {
    "one": 0.375,
    "many": 0.625
  },
  "and many": {
    "to": 1.0
  },
  "many these": {
    "relationships": 1.0
  },
  "these relationships": {
    "refer": 1.0
  },
  "relationships refer": {
    "to": 1.0
  },
  "of records": {
    "in": 0.3,
    "which": 0.1,
    "usually": 0.1,
    "instead": 0.1,
    "this": 0.1,
    "setting": 0.1,
    "and": 0.1,
    "at": 0.1
  },
  "in one": {
    "file": 0.7142857142857143,
    "direction": 0.14285714285714285,
    "of": 0.14285714285714285
  },
  "file that": {
    "are": 0.5,
    "has": 0.5
  },
  "are related": {
    "to": 0.2857142857142857,
    "nullify": 0.14285714285714285,
    "by": 0.14285714285714285,
    "inne": 0.14285714285714285,
    "majors": 0.2857142857142857
  },
  "related to": {
    "some": 0.25,
    "multiple": 0.5,
    "exactly": 0.25
  },
  "to some": {
    "number": 0.25,
    "address": 0.25,
    "it": 0.25,
    "new": 0.25
  },
  "some number": {
    "of": 1.0
  },
  "second file": {
    "in": 0.5,
    "with": 0.5
  },
  "file in": {
    "the": 0.18181818181818182,
    "some": 0.09090909090909091,
    "key": 0.09090909090909091,
    "physical": 0.09090909090909091,
    "index": 0.18181818181818182,
    "which": 0.09090909090909091,
    "any": 0.09090909090909091,
    "most": 0.09090909090909091,
    "access": 0.09090909090909091
  },
  "the relationship": {
    "between": 1.0
  },
  "relationship between": {
    "the": 0.16666666666666666,
    "files": 0.16666666666666666,
    "parts": 0.16666666666666666,
    "product": 0.16666666666666666,
    "tables": 0.16666666666666666,
    "two": 0.16666666666666666
  },
  "file is": {
    "one": 0.09090909090909091,
    "that": 0.09090909090909091,
    "there": 0.09090909090909091,
    "also": 0.09090909090909091,
    "needed": 0.09090909090909091,
    "opened": 0.09090909090909091,
    "already": 0.2727272727272727,
    "locked": 0.09090909090909091,
    "just": 0.09090909090909091
  },
  "many one": {
    "customer": 1.0
  },
  "one customer": {
    "file": 1.0
  },
  "file record": {
    "may": 0.3333333333333333,
    "processing": 0.3333333333333333,
    "buffer": 0.3333333333333333
  },
  "record may": {
    "be": 1.0
  },
  "be related": {
    "to": 1.0
  },
  "multiple order": {
    "file": 1.0
  },
  "file records": {
    "the": 0.14285714285714285,
    "when": 0.14285714285714285,
    "index": 0.14285714285714285,
    "myview": 0.2857142857142857,
    "whose": 0.14285714285714285,
    "sorted": 0.14285714285714285
  },
  "file also": {
    "have": 1.0
  },
  "a one": {
    "to": 1.0
  },
  "many relation": {
    "ship": 1.0
  },
  "relation ship": {
    "since": 1.0
  },
  "ship since": {
    "one": 1.0
  },
  "since one": {
    "order": 1.0
  },
  "order may": {
    "have": 0.5,
    "or": 0.5
  },
  "multiple items": {
    "in": 1.0
  },
  "items in": {
    "business": 1.0
  },
  "in business": {
    "database": 1.0
  },
  "business database": {
    "applications": 0.6666666666666666,
    "application": 0.3333333333333333
  },
  "applications one": {
    "to": 1.0
  },
  "many parent": {
    "child": 1.0
  },
  "child is": {
    "the": 1.0
  },
  "common relationship": {
    "between": 1.0
  },
  "between files": {
    "a": 1.0
  },
  "files a": {
    "one": 1.0
  },
  "one relationship": {
    "means": 0.25,
    "to": 0.25,
    "with": 0.25,
    "which": 0.25
  },
  "relationship means": {
    "that": 1.0
  },
  "that exactly": {
    "one": 1.0
  },
  "exactly one": {
    "record": 1.0
  },
  "one record": {
    "in": 0.75,
    "at": 0.25
  },
  "file may": {
    "be": 0.5,
    "or": 0.5
  },
  "to exactly": {
    "one": 1.0
  },
  "file this": {
    "is": 0.4,
    "join": 0.2,
    "physical": 0.2,
    "limits": 0.2
  },
  "useful in": {
    "situations": 0.5,
    "files": 0.5
  },
  "in situations": {
    "where": 1.0
  },
  "situations where": {
    "a": 0.5,
    "the": 0.5
  },
  "particular file": {
    "may": 1.0
  },
  "may or": {
    "may": 1.0
  },
  "or may": {
    "not": 1.0
  },
  "have data": {
    "in": 1.0
  },
  "fields if": {
    "all": 1.0
  },
  "if all": {
    "the": 1.0
  },
  "the fields": {
    "ar": 0.5,
    "in": 0.5
  },
  "fields ar": {
    "e": 1.0
  },
  "e contained": {
    "in": 1.0
  },
  "file you": {
    "can": 0.5,
    "cascade": 0.5
  },
  "can waste": {
    "a": 1.0
  },
  "waste a": {
    "lot": 1.0
  },
  "of disk": {
    "space": 1.0
  },
  "space with": {
    "empty": 1.0
  },
  "with empty": {
    "fields": 1.0
  },
  "empty fields": {
    "in": 1.0
  },
  "fields in": {
    "those": 0.5,
    "the": 0.5
  },
  "those records": {
    "that": 0.25,
    "and": 0.25,
    "while": 0.25,
    "are": 0.25
  },
  "records that": {
    "don": 0.5,
    "are": 0.5
  },
  "t n": {
    "eed": 1.0
  },
  "n eed": {
    "the": 1.0
  },
  "eed the": {
    "extra": 1.0
  },
  "the extra": {
    "information": 1.0
  },
  "extra information": {
    "therefore": 1.0
  },
  "information therefore": {
    "you": 1.0
  },
  "therefore you": {
    "create": 0.5,
    "need": 0.5
  },
  "file with": {
    "a": 1.0
  },
  "relationship to": {
    "the": 1.0
  },
  "first file": {
    "to": 1.0
  },
  "to hold": {
    "the": 0.14285714285714285,
    "data": 0.14285714285714285,
    "one": 0.14285714285714285,
    "a": 0.14285714285714285,
    "previously": 0.14285714285714285,
    "multiple": 0.14285714285714285,
    "already": 0.14285714285714285
  },
  "hold the": {
    "possibly": 0.5,
    "effect": 0.5
  },
  "the possibly": {
    "unnecessary": 1.0
  },
  "possibly unnecessary": {
    "fields": 1.0
  },
  "unnecessary fields": {
    "to": 1.0
  },
  "to expand": {
    "the": 1.0
  },
  "expand the": {
    "previous": 1.0
  },
  "an order": {
    "may": 0.25,
    "has": 0.25,
    "does": 0.25,
    "by": 0.25
  },
  "separate shipto": {
    "address": 1.0
  },
  "address so": {
    "you": 1.0
  },
  "could add": {
    "a": 1.0
  },
  "a shipto": {
    "file": 1.0
  },
  "shipto file": {
    "to": 0.2,
    "order": 0.2,
    "only": 0.2,
    "has": 0.2,
    "driver": 0.2
  },
  "design order": {
    "file": 1.0
  },
  "key order": {
    "date": 0.5,
    "loop": 0.5
  },
  "date shipto": {
    "file": 1.0
  },
  "address 41": {
    "database": 1.0
  },
  "41 database": {
    "design": 1.0
  },
  "design in": {
    "this": 1.0
  },
  "a record": {
    "would": 0.11764705882352941,
    "and": 0.058823529411764705,
    "is": 0.23529411764705882,
    "the": 0.11764705882352941,
    "containing": 0.058823529411764705,
    "based": 0.058823529411764705,
    "from": 0.058823529411764705,
    "while": 0.058823529411764705,
    "lock": 0.058823529411764705,
    "allows": 0.058823529411764705,
    "when": 0.058823529411764705,
    "in": 0.058823529411764705
  },
  "record would": {
    "be": 1.0
  },
  "be added": {
    "to": 1.0
  },
  "the shipto": {
    "file": 0.6666666666666666,
    "record": 0.3333333333333333
  },
  "file only": {
    "if": 1.0
  },
  "only if": {
    "an": 0.5,
    "both": 0.5
  },
  "if an": {
    "order": 0.5,
    "application": 0.5
  },
  "order has": {
    "to": 1.0
  },
  "be shipped": {
    "to": 1.0
  },
  "shipped to": {
    "some": 1.0
  },
  "some address": {
    "other": 1.0
  },
  "address other": {
    "than": 1.0
  },
  "the address": {
    "in": 1.0
  },
  "file has": {
    "a": 1.0
  },
  "relationship with": {
    "the": 0.5,
    "which": 0.5
  },
  "file many": {
    "to": 1.0
  },
  "many is": {
    "the": 1.0
  },
  "most difficult": {
    "file": 1.0
  },
  "difficult file": {
    "relationship": 1.0
  },
  "file relationship": {
    "with": 1.0
  },
  "with which": {
    "to": 1.0
  },
  "which to": {
    "deal": 1.0
  },
  "deal it": {
    "means": 1.0
  },
  "that multiple": {
    "records": 1.0
  },
  "multiple records": {
    "in": 0.6,
    "with": 0.2,
    "it": 0.2
  },
  "file are": {
    "related": 1.0
  },
  "file expand": {
    "the": 1.0
  },
  "example to": {
    "fit": 1.0
  },
  "to fit": {
    "a": 1.0
  },
  "fit a": {
    "manufacturing": 1.0
  },
  "a manufacturing": {
    "concern": 1.0
  },
  "manufacturing concern": {
    "which": 1.0
  },
  "concern which": {
    "buys": 1.0
  },
  "which buys": {
    "parts": 1.0
  },
  "buys parts": {
    "and": 1.0
  },
  "parts and": {
    "makes": 0.5,
    "parts2prod": 0.5
  },
  "and makes": {
    "products": 0.5,
    "it": 0.5
  },
  "makes products": {
    "one": 1.0
  },
  "products one": {
    "part": 1.0
  },
  "one part": {
    "may": 1.0
  },
  "part may": {
    "be": 1.0
  },
  "in ma": {
    "ny": 1.0
  },
  "ma ny": {
    "different": 1.0
  },
  "ny different": {
    "products": 1.0
  },
  "different products": {
    "and": 1.0
  },
  "one product": {
    "could": 1.0
  },
  "product could": {
    "use": 1.0
  },
  "could use": {
    "many": 0.5,
    "a": 0.5
  },
  "use many": {
    "parts": 1.0
  },
  "many parts": {
    "parts": 1.0
  },
  "parts parts": {
    "file": 1.0
  },
  "parts file": {
    "part": 0.6666666666666666,
    "driver": 0.3333333333333333
  },
  "file part": {
    "number": 1.0
  },
  "part number": {
    "primary": 0.75,
    "1st": 0.25
  },
  "key part": {
    "description": 1.0
  },
  "part description": {
    "product": 0.3333333333333333,
    "parts2prod": 0.3333333333333333,
    "end": 0.3333333333333333
  },
  "description product": {
    "file": 1.0
  },
  "product file": {
    "product": 0.4,
    "driver": 0.2,
    "have": 0.2,
    "referentia": 0.2
  },
  "product number": {
    "primary": 0.4,
    "2nd": 0.2,
    "entered": 0.2,
    "against": 0.2
  },
  "product description": {
    "without": 0.3333333333333333,
    "the": 0.3333333333333333,
    "end": 0.3333333333333333
  },
  "description without": {
    "going": 1.0
  },
  "without going": {
    "into": 1.0
  },
  "going into": {
    "the": 1.0
  },
  "theory let": {
    "me": 1.0
  },
  "me simply": {
    "s": 1.0
  },
  "simply s": {
    "tate": 1.0
  },
  "s tate": {
    "that": 1.0
  },
  "tate that": {
    "this": 1.0
  },
  "that this": {
    "situation": 1.0
  },
  "this situation": {
    "is": 0.3333333333333333,
    "you": 0.3333333333333333,
    "may": 0.3333333333333333
  },
  "situation is": {
    "handled": 1.0
  },
  "is handled": {
    "by": 1.0
  },
  "handled by": {
    "defining": 1.0
  },
  "defining a": {
    "third": 1.0
  },
  "third file": {
    "commonly": 1.0
  },
  "file commonly": {
    "referred": 1.0
  },
  "a join": {
    "file": 1.0
  },
  "join file": {
    "this": 0.16666666666666666,
    "creates": 0.16666666666666666,
    "the": 0.16666666666666666,
    "is": 0.16666666666666666,
    "which": 0.16666666666666666,
    "inserts": 0.16666666666666666
  },
  "this join": {
    "file": 1.0
  },
  "file creates": {
    "two": 1.0
  },
  "creates two": {
    "one": 1.0
  },
  "two one": {
    "to": 1.0
  },
  "many relationships": {
    "as": 0.3333333333333333,
    "require": 0.3333333333333333,
    "between": 0.3333333333333333
  },
  "relationships as": {
    "in": 1.0
  },
  "example parts": {
    "file": 1.0
  },
  "description parts2prod": {
    "file": 1.0
  },
  "parts2prod file": {
    "part": 0.25,
    "has": 0.25,
    "clarion": 0.25,
    "driver": 0.25
  },
  "number 2nd": {
    "primary": 1.0
  },
  "key quantity": {
    "used": 0.3333333333333333,
    "short": 0.6666666666666666
  },
  "quantity used": {
    "product": 0.5,
    "of": 0.5
  },
  "used product": {
    "file": 1.0
  },
  "description the": {
    "parts2prod": 1.0
  },
  "the parts2prod": {
    "file": 1.0
  },
  "a multiple": {
    "component": 1.0
  },
  "component primary": {
    "key": 1.0
  },
  "two foreign": {
    "keys": 1.0
  },
  "keys the": {
    "relationship": 1.0
  },
  "between parts": {
    "and": 1.0
  },
  "and parts2prod": {
    "is": 1.0
  },
  "parts2prod is": {
    "one": 0.5,
    "also": 0.5
  },
  "many and": {
    "the": 1.0
  },
  "between product": {
    "and": 1.0
  },
  "product and": {
    "parts2prod": 1.0
  },
  "also one": {
    "to": 1.0
  },
  "many this": {
    "makes": 1.0
  },
  "the join": {
    "file": 0.4,
    "and": 0.2,
    "structure": 0.4
  },
  "middle man": {
    "between": 1.0
  },
  "man between": {
    "two": 1.0
  },
  "between two": {
    "files": 1.0
  },
  "files with": {
    "a": 1.0
  },
  "a many": {
    "to": 1.0
  },
  "many relationship": {
    "an": 0.5,
    "only": 0.5
  },
  "relationship an": {
    "advantage": 1.0
  },
  "an advantage": {
    "of": 1.0
  },
  "is usually": {
    "some": 0.25,
    "true": 0.25,
    "used": 0.25,
    "only": 0.25
  },
  "usually some": {
    "more": 1.0
  },
  "some more": {
    "information": 1.0
  },
  "more information": {
    "that": 1.0
  },
  "that logically": {
    "should": 0.5,
    "partition": 0.5
  },
  "logically should": {
    "be": 1.0
  },
  "stored there": {
    "in": 1.0
  },
  "there in": {
    "this": 1.0
  },
  "case the": {
    "quantity": 0.3333333333333333,
    "hold": 0.3333333333333333,
    "file": 0.3333333333333333
  },
  "the quantity": {
    "used": 1.0
  },
  "used of": {
    "a": 1.0
  },
  "a part": {
    "in": 0.5,
    "of": 0.5
  },
  "part in": {
    "a": 1.0
  },
  "a product": {
    "logically": 1.0
  },
  "product logically": {
    "only": 1.0
  },
  "logically only": {
    "belongs": 1.0
  },
  "only belongs": {
    "in": 1.0
  },
  "belongs in": {
    "the": 1.0
  },
  "file clarion": {
    "language": 1.0
  },
  "guide 42": {
    "translating": 1.0
  },
  "42 translating": {
    "the": 1.0
  },
  "translating the": {
    "theory": 1.0
  },
  "clarion in": {
    "practical": 1.0
  },
  "in practical": {
    "relational": 1.0
  },
  "practical relational": {
    "database": 1.0
  },
  "key may": {
    "not": 1.0
  },
  "declared for": {
    "the": 0.5,
    "a": 0.5
  },
  "key on": {
    "some": 0.25,
    "field": 0.5,
    "sam": 0.25
  },
  "on some": {
    "files": 1.0
  },
  "some files": {
    "if": 1.0
  },
  "files if": {
    "there": 0.5,
    "filea": 0.5
  },
  "if there": {
    "is": 0.6666666666666666,
    "are": 0.3333333333333333
  },
  "is never": {
    "a": 1.0
  },
  "never a": {
    "need": 1.0
  },
  "a need": {
    "to": 1.0
  },
  "directly access": {
    "individual": 1.0
  },
  "access individual": {
    "records": 1.0
  },
  "individual records": {
    "from": 0.5,
    "within": 0.5
  },
  "records from": {
    "that": 0.25,
    "the": 0.5,
    "a": 0.25
  },
  "file then": {
    "a": 1.0
  },
  "then a": {
    "key": 1.0
  },
  "a key": {
    "definition": 0.125,
    "is": 0.375,
    "defined": 0.125,
    "should": 0.125,
    "or": 0.125,
    "element": 0.125
  },
  "key definition": {
    "based": 1.0
  },
  "definition based": {
    "on": 1.0
  },
  "not necessary": {
    "usually": 1.0
  },
  "necessary usually": {
    "this": 1.0
  },
  "usually this": {
    "would": 1.0
  },
  "child file": {
    "of": 0.3333333333333333,
    "is": 0.3333333333333333,
    "this": 0.3333333333333333
  },
  "file of": {
    "a": 1.0
  },
  "child relationship": {
    "whose": 0.5,
    "between": 0.5
  },
  "relationship whose": {
    "records": 1.0
  },
  "whose records": {
    "are": 1.0
  },
  "records are": {
    "only": 0.25,
    "put": 0.25,
    "held": 0.25,
    "also": 0.25
  },
  "only needed": {
    "in": 0.5,
    "during": 0.5
  },
  "needed in": {
    "conjunction": 0.5,
    "every": 0.5
  },
  "in conjunction": {
    "with": 1.0
  },
  "conjunction with": {
    "the": 0.5,
    "concurrency": 0.5
  },
  "parent record": {
    "a": 0.16666666666666666,
    "for": 0.16666666666666666,
    "is": 0.3333333333333333,
    "changes": 0.16666666666666666,
    "from": 0.16666666666666666
  },
  "record a": {
    "clarion": 0.5,
    "second": 0.5
  },
  "a lso": {
    "may": 1.0
  },
  "lso may": {
    "not": 1.0
  },
  "the determination": {
    "to": 1.0
  },
  "determination to": {
    "declare": 1.0
  },
  "is dependent": {
    "upon": 1.0
  },
  "dependent upon": {
    "how": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "upon how": {
    "you": 1.0
  },
  "are going": {
    "to": 1.0
  },
  "access the": {
    "file": 0.2,
    "foreign": 0.2,
    "user": 0.2,
    "lock": 0.2,
    "database": 0.2
  },
  "is necessary": {
    "however": 0.5,
    "when": 0.5
  },
  "necessary however": {
    "if": 1.0
  },
  "however if": {
    "the": 1.0
  },
  "only purpose": {
    "of": 1.0
  },
  "to ensure": {
    "that": 1.0
  },
  "ensure that": {
    "the": 0.25,
    "an": 0.125,
    "nothing": 0.125,
    "it": 0.125,
    "user": 0.125,
    "no": 0.125,
    "all": 0.125
  },
  "value in": {
    "the": 0.42857142857142855,
    "this": 0.2857142857142857,
    "another": 0.14285714285714285,
    "a": 0.14285714285714285
  },
  "key field": {
    "value": 0.125,
    "changes": 0.125,
    "get": 0.125,
    "set": 0.625
  },
  "field value": {
    "is": 0.5,
    "that": 0.5
  },
  "is valid": {
    "no": 1.0
  },
  "valid no": {
    "clarion": 0.5,
    "matter": 0.5
  },
  "no clarion": {
    "key": 1.0
  },
  "is needed": {
    "take": 0.5,
    "if": 0.5
  },
  "needed take": {
    "the": 1.0
  },
  "take the": {
    "previous": 1.0
  },
  "previous theoretical": {
    "examples": 1.0
  },
  "theoretical examples": {
    "and": 1.0
  },
  "examples and": {
    "create": 1.0
  },
  "and create": {
    "clarion": 1.0
  },
  "create clarion": {
    "file": 1.0
  },
  "clarion file": {
    "definitions": 0.3333333333333333,
    "driver": 0.6666666666666666
  },
  "file definitions": {
    "customer": 1.0
  },
  "definitions customer": {
    "file": 1.0
  },
  "file driver": {
    "clarion": 0.16666666666666666,
    "topspeed": 0.09523809523809523,
    "technology": 0.07142857142857142,
    "which": 0.047619047619047616,
    "s": 0.047619047619047616,
    "for": 0.07142857142857142,
    "the": 0.023809523809523808,
    "does": 0.023809523809523808,
    "handle": 0.023809523809523808,
    "some": 0.023809523809523808,
    "specific": 0.023809523809523808,
    "places": 0.023809523809523808,
    "to": 0.047619047619047616,
    "knows": 0.023809523809523808,
    "automatically": 0.023809523809523808,
    "itsel": 0.023809523809523808,
    "can": 0.047619047619047616,
    "or": 0.023809523809523808,
    "would": 0.023809523809523808,
    "processes": 0.023809523809523808,
    "itself": 0.023809523809523808,
    "will": 0.047619047619047616,
    "most": 0.023809523809523808,
    "error": 0.023809523809523808
  },
  "driver clarion": {
    "pre": 1.0
  },
  "clarion pre": {
    "cus": 0.14285714285714285,
    "ord": 0.14285714285714285,
    "shp": 0.14285714285714285,
    "itm": 0.14285714285714285,
    "pro": 0.14285714285714285,
    "p2p": 0.14285714285714285,
    "par": 0.14285714285714285
  },
  "pre cus": {
    "custkey": 1.0
  },
  "cus custkey": {
    "key": 1.0
  },
  "custkey key": {
    "cus": 0.5,
    "ord": 0.5
  },
  "key cus": {
    "custno": 1.0
  },
  "cus custno": {
    "primary": 0.1,
    "save": 0.3,
    "savekey": 0.4,
    "initialize": 0.1,
    "change": 0.1
  },
  "custno primary": {
    "key": 1.0
  },
  "record record": {
    "custno": 0.1,
    "orderno": 0.3,
    "prodno": 0.1,
    "partno": 0.2,
    "field1": 0.3
  },
  "record custno": {
    "long": 1.0
  },
  "custno long": {
    "customer": 1.0
  },
  "long customer": {
    "number": 1.0
  },
  "key name": {
    "string": 1.0
  },
  "name string": {
    "30": 1.0
  },
  "string 30": {
    "customer": 0.4,
    "shipto": 0.2,
    "product": 0.2,
    "part": 0.2
  },
  "30 customer": {
    "name": 0.5,
    "a": 0.5
  },
  "address string": {
    "30": 1.0
  },
  "customer a": {
    "ddress": 1.0
  },
  "a ddress": {
    "end": 1.0
  },
  "ddress end": {
    "end": 1.0
  },
  "end order": {
    "file": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "pre ord": {
    "orderkey": 1.0
  },
  "ord orderkey": {
    "key": 1.0
  },
  "orderkey key": {
    "ord": 0.3333333333333333,
    "shp": 0.3333333333333333,
    "itm": 0.3333333333333333
  },
  "key ord": {
    "orderno": 0.5,
    "custno": 0.5
  },
  "ord orderno": {
    "primary": 0.25,
    "initialize": 0.25,
    "or": 0.25,
    "check": 0.25
  },
  "orderno primary": {
    "key": 1.0
  },
  "key custkey": {
    "key": 1.0
  },
  "ord custno": {
    "dup": 0.07692307692307693,
    "cus": 0.15384615384615385,
    "savekey": 0.6153846153846154,
    "0": 0.15384615384615385
  },
  "custno dup": {
    "foreign": 1.0
  },
  "dup foreign": {
    "key": 1.0
  },
  "record orderno": {
    "long": 1.0
  },
  "orderno long": {
    "order": 1.0
  },
  "long order": {
    "number": 0.5,
    "date": 0.25,
    "primary": 0.25
  },
  "key custno": {
    "long": 1.0
  },
  "key date": {
    "long": 1.0
  },
  "date long": {
    "order": 1.0
  },
  "date end": {
    "end": 1.0
  },
  "end shipto": {
    "file": 1.0
  },
  "pre shp": {
    "orderkey": 1.0
  },
  "shp orderkey": {
    "key": 0.5,
    "if": 0.5
  },
  "key shp": {
    "orderno": 1.0
  },
  "shp orderno": {
    "primary": 0.5,
    "ord": 0.5
  },
  "key address": {
    "string": 1.0
  },
  "30 shipto": {
    "address": 1.0
  },
  "address end": {
    "end": 1.0
  },
  "end item": {
    "file": 1.0
  },
  "pre itm": {
    "orderkey": 1.0
  },
  "itm orderkey": {
    "key": 0.2,
    "defined": 0.2,
    "would": 0.2,
    "itm": 0.2,
    "and": 0.2
  },
  "key itm": {
    "orderno": 0.5,
    "orderkey": 0.5
  },
  "itm orderno": {
    "itm": 0.25,
    "and": 0.25,
    "ord": 0.5
  },
  "orderno itm": {
    "prodno": 1.0
  },
  "itm prodno": {
    "primary": 1.0
  },
  "prodno primary": {
    "key": 1.0
  },
  "order primary": {
    "component": 1.0
  },
  "primary component": {
    "and": 1.0
  },
  "key prodno": {
    "long": 1.0
  },
  "prodno long": {
    "prod": 0.6666666666666666,
    "product": 0.3333333333333333
  },
  "long prod": {
    "primary": 1.0
  },
  "prod primary": {
    "component": 1.0
  },
  "quantity short": {
    "quantity": 0.5,
    "end": 0.5
  },
  "short quantity": {
    "orde": 1.0
  },
  "quantity orde": {
    "red": 1.0
  },
  "orde red": {
    "price": 1.0
  },
  "red price": {
    "decimal": 1.0
  },
  "price decimal": {
    "7": 1.0
  },
  "2 unit": {
    "price": 1.0
  },
  "price end": {
    "end": 1.0
  },
  "end product": {
    "file": 1.0
  },
  "pre pro": {
    "prodkey": 1.0
  },
  "pro prodkey": {
    "key": 1.0
  },
  "prodkey key": {
    "pro": 1.0
  },
  "key pro": {
    "prodno": 1.0
  },
  "pro prodno": {
    "primary": 1.0
  },
  "record prodno": {
    "long": 1.0
  },
  "long product": {
    "numb": 1.0
  },
  "product numb": {
    "er": 1.0
  },
  "numb er": {
    "primary": 1.0
  },
  "er primary": {
    "key": 1.0
  },
  "key description": {
    "string": 1.0
  },
  "description string": {
    "30": 1.0
  },
  "30 product": {
    "description": 1.0
  },
  "description end": {
    "end": 1.0
  },
  "end parts2prod": {
    "file": 1.0
  },
  "pre p2p": {
    "prodpartkey": 1.0
  },
  "p2p prodpartkey": {
    "key": 1.0
  },
  "prodpartkey key": {
    "p2p": 1.0
  },
  "key p2p": {
    "prodno": 0.5,
    "partno": 0.5
  },
  "p2p prodno": {
    "p2p": 0.5,
    "alternate": 0.5
  },
  "prodno p2p": {
    "partno": 1.0
  },
  "p2p partno": {
    "primary": 0.5,
    "p2p": 0.5
  },
  "partno primary": {
    "key": 1.0
  },
  "key partprodkey": {
    "key": 1.0
  },
  "partprodkey key": {
    "p2p": 1.0
  },
  "partno p2p": {
    "prodno": 1.0
  },
  "prodno alternate": {
    "key": 1.0
  },
  "alternate key": {
    "record": 1.0
  },
  "record partno": {
    "long": 1.0
  },
  "partno long": {
    "part": 1.0
  },
  "long part": {
    "primary": 0.5,
    "number": 0.5
  },
  "part primary": {
    "component": 1.0
  },
  "short end": {
    "end": 1.0
  },
  "end 43": {
    "database": 1.0
  },
  "43 database": {
    "design": 1.0
  },
  "design parts": {
    "file": 1.0
  },
  "pre par": {
    "partkey": 1.0
  },
  "par partkey": {
    "key": 1.0
  },
  "partkey key": {
    "par": 1.0
  },
  "key par": {
    "partno": 1.0
  },
  "par partno": {
    "primary": 1.0
  },
  "30 part": {
    "description": 1.0
  },
  "end notice": {
    "that": 1.0
  },
  "that only": {
    "one": 1.0
  },
  "one foreign": {
    "key": 1.0
  },
  "file was": {
    "explicitly": 1.0
  },
  "was explicitly": {
    "declared": 1.0
  },
  "of foreign": {
    "keys": 1.0
  },
  "keys were": {
    "included": 1.0
  },
  "were included": {
    "as": 1.0
  },
  "included as": {
    "part": 1.0
  },
  "key declarations": {
    "but": 1.0
  },
  "declarations but": {
    "this": 1.0
  },
  "but this": {
    "was": 1.0
  },
  "was simply": {
    "good": 1.0
  },
  "simply good": {
    "fortune": 1.0
  },
  "good fortune": {
    "the": 1.0
  },
  "fortune the": {
    "primary": 1.0
  },
  "orderkey defined": {
    "on": 1.0
  },
  "defined on": {
    "the": 1.0
  },
  "is there": {
    "to": 1.0
  },
  "there to": {
    "ensure": 1.0
  },
  "that an": {
    "order": 0.5,
    "end": 0.5
  },
  "order does": {
    "not": 1.0
  },
  "duplicate products": {
    "ordered": 1.0
  },
  "products ordered": {
    "if": 1.0
  },
  "ordered if": {
    "this": 1.0
  },
  "if this": {
    "were": 1.0
  },
  "this were": {
    "not": 1.0
  },
  "a consideration": {
    "itm": 1.0
  },
  "consideration itm": {
    "orderkey": 1.0
  },
  "orderkey would": {
    "only": 1.0
  },
  "would only": {
    "contain": 1.0
  },
  "only contain": {
    "itm": 1.0
  },
  "contain itm": {
    "orderno": 1.0
  },
  "orderno and": {
    "would": 1.0
  },
  "and would": {
    "have": 1.0
  },
  "the dup": {
    "attribute": 1.0
  },
  "allow duplicate": {
    "ke": 1.0
  },
  "duplicate ke": {
    "y": 1.0
  },
  "ke y": {
    "values": 1.0
  },
  "y values": {
    "this": 1.0
  },
  "values this": {
    "would": 1.0
  },
  "would make": {
    "it": 1.0
  },
  "make it": {
    "a": 0.5,
    "happen": 0.5
  },
  "it a": {
    "foreign": 1.0
  },
  "key instead": {
    "of": 1.0
  },
  "key defined": {
    "for": 1.0
  },
  "defined for": {
    "the": 1.0
  },
  "file have": {
    "a": 1.0
  },
  "relationship which": {
    "is": 1.0
  },
  "many looked": {
    "at": 1.0
  },
  "looked at": {
    "from": 1.0
  },
  "at from": {
    "the": 1.0
  },
  "reverse perspec": {
    "tive": 1.0
  },
  "perspec tive": {
    "this": 1.0
  },
  "tive this": {
    "reverse": 1.0
  },
  "this reverse": {
    "view": 1.0
  },
  "view is": {
    "most": 0.5,
    "entirely": 0.5
  },
  "most often": {
    "used": 1.0
  },
  "often used": {
    "for": 1.0
  },
  "entry verification": {
    "look": 1.0
  },
  "verification look": {
    "up": 1.0
  },
  "look up": {
    "this": 0.5,
    "and": 0.5
  },
  "up this": {
    "means": 1.0
  },
  "number entered": {
    "into": 1.0
  },
  "entered into": {
    "the": 1.0
  },
  "file s": {
    "data": 0.3333333333333333,
    "record": 0.6666666666666666
  },
  "entry procedure": {
    "can": 1.0
  },
  "can look": {
    "up": 1.0
  },
  "up and": {
    "verify": 1.0
  },
  "and verify": {
    "the": 1.0
  },
  "verify the": {
    "product": 1.0
  },
  "number against": {
    "the": 1.0
  },
  "against the": {
    "records": 0.5,
    "original": 0.5
  },
  "the records": {
    "in": 0.4444444444444444,
    "appear": 0.1111111111111111,
    "will": 0.1111111111111111,
    "you": 0.1111111111111111,
    "hold": 0.1111111111111111,
    "rows": 0.1111111111111111
  },
  "file referentia": {
    "l": 1.0
  },
  "referentia l": {
    "integrity": 1.0
  },
  "l integrity": {
    "there": 1.0
  },
  "integrity there": {
    "is": 1.0
  },
  "more fundamental": {
    "issue": 1.0
  },
  "fundamental issue": {
    "in": 1.0
  },
  "issue in": {
    "the": 1.0
  },
  "model which": {
    "should": 1.0
  },
  "which should": {
    "be": 1.0
  },
  "be addressed": {
    "referential": 1.0
  },
  "addressed referential": {
    "integrity": 1.0
  },
  "integrity this": {
    "is": 1.0
  },
  "an issue": {
    "which": 1.0
  },
  "issue which": {
    "must": 1.0
  },
  "resolved in": {
    "the": 0.5,
    "one": 0.5
  },
  "for an": {
    "application": 0.3333333333333333,
    "index": 0.3333333333333333,
    "exact": 0.3333333333333333
  },
  "application because": {
    "it": 0.5,
    "the": 0.5
  },
  "it involves": {
    "the": 1.0
  },
  "the active": {
    "run": 1.0
  },
  "active run": {
    "time": 1.0
  },
  "time inter": {
    "relationship": 1.0
  },
  "inter relationship": {
    "of": 1.0
  },
  "relationship of": {
    "the": 1.0
  },
  "data within": {
    "the": 1.0
  },
  "database referential": {
    "integrity": 1.0
  },
  "integrity means": {
    "that": 1.0
  },
  "that no": {
    "foreign": 0.25,
    "other": 0.5,
    "student": 0.25
  },
  "no foreign": {
    "key": 0.5,
    "keys": 0.5
  },
  "key can": {
    "contain": 1.0
  },
  "can contain": {
    "a": 1.0
  },
  "value that": {
    "is": 0.3333333333333333,
    "must": 0.3333333333333333,
    "doesn": 0.3333333333333333
  },
  "not matched": {
    "by": 1.0
  },
  "matched by": {
    "some": 1.0
  },
  "by some": {
    "primary": 1.0
  },
  "some primary": {
    "key": 1.0
  },
  "key value": {
    "maintaining": 0.05,
    "the": 0.25,
    "changerec": 0.15,
    "open": 0.15,
    "cus": 0.05,
    "do": 0.1,
    "for": 0.05,
    "which": 0.05,
    "in": 0.15
  },
  "value maintaining": {
    "referential": 1.0
  },
  "maintaining referential": {
    "integrity": 1.0
  },
  "integrity in": {
    "your": 1.0
  },
  "your database": {
    "begets": 1.0
  },
  "database begets": {
    "two": 1.0
  },
  "begets two": {
    "questions": 1.0
  },
  "two questions": {
    "which": 1.0
  },
  "questions which": {
    "must": 1.0
  },
  "resolved what": {
    "do": 1.0
  },
  "do when": {
    "the": 1.0
  },
  "the user": {
    "wants": 0.05263157894736842,
    "attempts": 0.07894736842105263,
    "select": 0.02631578947368421,
    "opening": 0.07894736842105263,
    "will": 0.02631578947368421,
    "s": 0.18421052631578946,
    "and": 0.02631578947368421,
    "to": 0.02631578947368421,
    "set": 0.02631578947368421,
    "message": 0.05263157894736842,
    "is": 0.13157894736842105,
    "completes": 0.02631578947368421,
    "if": 0.07894736842105263,
    "show": 0.02631578947368421,
    "started": 0.02631578947368421,
    "with": 0.05263157894736842,
    "has": 0.05263157894736842,
    "finally": 0.02631578947368421
  },
  "user wants": {
    "to": 1.0
  },
  "wants to": {
    "delete": 0.5,
    "change": 0.5
  },
  "to delete": {
    "the": 0.7142857142857143,
    "all": 0.14285714285714285,
    "that": 0.14285714285714285
  },
  "delete the": {
    "primary": 0.36363636363636365,
    "item": 0.09090909090909091,
    "shipto": 0.09090909090909091,
    "order": 0.09090909090909091,
    "foreign": 0.09090909090909091,
    "record": 0.09090909090909091,
    "par": 0.09090909090909091,
    "related": 0.09090909090909091
  },
  "record what": {
    "do": 1.0
  },
  "value the": {
    "three": 0.14285714285714285,
    "action": 0.2857142857142857,
    "foreign": 0.14285714285714285,
    "calculation": 0.14285714285714285,
    "most": 0.14285714285714285,
    "clarion": 0.14285714285714285
  },
  "common answers": {
    "to": 1.0
  },
  "answers to": {
    "each": 1.0
  },
  "to each": {
    "of": 1.0
  },
  "these questions": {
    "are": 1.0
  },
  "questions are": {
    "restrict": 1.0
  },
  "are restrict": {
    "the": 0.5,
    "do": 0.5
  },
  "restrict the": {
    "a": 0.3333333333333333,
    "action": 0.6666666666666666
  },
  "the a": {
    "ction": 1.0
  },
  "a ction": {
    "cascade": 1.0
  },
  "ction cascade": {
    "the": 1.0
  },
  "cascade the": {
    "action": 0.5714285714285714,
    "change": 0.14285714285714285,
    "delete": 0.14285714285714285,
    "database": 0.14285714285714285
  },
  "or less": {
    "commonly": 0.5,
    "than": 0.5
  },
  "less commonly": {
    "nullify": 1.0
  },
  "commonly nullify": {
    "the": 1.0
  },
  "key values": {
    "of": 0.25,
    "the": 0.25,
    "to": 0.5
  },
  "values of": {
    "course": 1.0
  },
  "course there": {
    "may": 1.0
  },
  "there may": {
    "also": 0.5,
    "be": 0.5
  },
  "be application": {
    "specific": 1.0
  },
  "application specific": {
    "answers": 1.0
  },
  "specific answers": {
    "such": 1.0
  },
  "answers such": {
    "as": 1.0
  },
  "as copying": {
    "all": 1.0
  },
  "copying all": {
    "information": 1.0
  },
  "all information": {
    "to": 1.0
  },
  "information to": {
    "history": 1.0
  },
  "to history": {
    "files": 1.0
  },
  "history files": {
    "before": 1.0
  },
  "files before": {
    "performing": 0.5,
    "any": 0.5
  },
  "before performing": {
    "the": 1.0
  },
  "performing the": {
    "action": 1.0
  },
  "action which": {
    "should": 1.0
  },
  "be implemented": {
    "as": 1.0
  },
  "implemented as": {
    "required": 1.0
  },
  "as required": {
    "in": 1.0
  },
  "in individual": {
    "programs": 1.0
  },
  "individual programs": {
    "clarion": 1.0
  },
  "programs clarion": {
    "language": 1.0
  },
  "guide 44": {
    "restrict": 1.0
  },
  "44 restrict": {
    "the": 1.0
  },
  "action restrict": {
    "the": 1.0
  },
  "action means": {
    "that": 1.0
  },
  "user attempts": {
    "to": 1.0
  },
  "attempts to": {
    "delete": 0.7142857142857143,
    "lock": 0.2857142857142857
  },
  "record or": {
    "change": 0.5714285714285714,
    "between": 0.14285714285714285,
    "implicitly": 0.14285714285714285,
    "there": 0.14285714285714285
  },
  "or change": {
    "the": 0.6666666666666666,
    "and": 0.16666666666666666,
    "their": 0.16666666666666666
  },
  "action is": {
    "only": 0.2,
    "not": 0.2,
    "appropriate": 0.6
  },
  "only allowed": {
    "if": 0.5,
    "after": 0.5
  },
  "allowed if": {
    "there": 1.0
  },
  "keys that": {
    "reference": 1.0
  },
  "that reference": {
    "that": 0.8,
    "the": 0.2
  },
  "reference that": {
    "primary": 1.0
  },
  "that primary": {
    "key": 1.0
  },
  "if related": {
    "foreign": 1.0
  },
  "related foreign": {
    "keys": 1.0
  },
  "keys do": {
    "exist": 1.0
  },
  "do exist": {
    "the": 1.0
  },
  "exist the": {
    "action": 0.5,
    "delete": 0.5
  },
  "allowed using": {
    "the": 1.0
  },
  "files defined": {
    "previously": 1.0
  },
  "defined previously": {
    "here": 1.0
  },
  "previously here": {
    "is": 1.0
  },
  "of how": {
    "the": 1.0
  },
  "how the": {
    "executable": 1.0
  },
  "code might": {
    "look": 1.0
  },
  "might look": {
    "to": 0.6666666666666666,
    "like": 0.3333333333333333
  },
  "look to": {
    "restrict": 0.3333333333333333,
    "cascade": 0.3333333333333333,
    "nullify": 0.3333333333333333
  },
  "to restrict": {
    "deletes": 1.0
  },
  "restrict deletes": {
    "or": 1.0
  },
  "deletes or": {
    "a": 1.0
  },
  "a change": {
    "of": 0.75,
    "to": 0.25
  },
  "change of": {
    "the": 1.0
  },
  "value changerec": {
    "equate": 1.0
  },
  "changerec equate": {
    "2": 1.0
  },
  "equate 2": {
    "equate": 0.75,
    "57": 0.25
  },
  "2 equate": {
    "change": 1.0
  },
  "equate change": {
    "action": 1.0
  },
  "change action": {
    "deleterec": 0.42857142857142855,
    "also": 0.14285714285714285,
    "to": 0.42857142857142855
  },
  "action deleterec": {
    "equate": 0.6,
    "check": 0.4
  },
  "deleterec equate": {
    "3": 1.0
  },
  "equate 3": {
    "equate": 1.0
  },
  "3 equate": {
    "delete": 1.0
  },
  "equate delete": {
    "action": 1.0
  },
  "delete action": {
    "value": 0.42857142857142855,
    "ord": 0.14285714285714285,
    "also": 0.14285714285714285,
    "do": 0.2857142857142857
  },
  "action value": {
    "for": 1.0
  },
  "value for": {
    "readability": 0.6,
    "that": 0.2,
    "every": 0.2
  },
  "for readability": {
    "savekey": 1.0
  },
  "readability savekey": {
    "long": 1.0
  },
  "savekey long": {
    "primary": 1.0
  },
  "long primary": {
    "key": 1.0
  },
  "key save": {
    "variable": 1.0
  },
  "save variable": {
    "code": 0.8333333333333334,
    "savcrc": 0.16666666666666666
  },
  "variable code": {
    "savekey": 0.5,
    "open": 0.3333333333333333,
    "loop": 0.16666666666666666
  },
  "code savekey": {
    "cus": 1.0
  },
  "savekey cus": {
    "custno": 1.0
  },
  "custno save": {
    "primary": 1.0
  },
  "save primary": {
    "key": 1.0
  },
  "value open": {
    "window": 1.0
  },
  "open window": {
    "accept": 1.0
  },
  "window accept": {
    "case": 1.0
  },
  "accept case": {
    "accepted": 1.0
  },
  "case accepted": {
    "process": 0.5,
    "individual": 0.3333333333333333,
    "of": 0.16666666666666666
  },
  "accepted process": {
    "entry": 1.0
  },
  "process entry": {
    "individual": 1.0
  },
  "entry individual": {
    "control": 1.0
  },
  "individual control": {
    "processing": 1.0
  },
  "control processing": {
    "of": 1.0
  },
  "processing of": {
    "okbutton": 1.0
  },
  "of okbutton": {
    "screen": 0.6666666666666666,
    "this": 0.1111111111111111,
    "scree": 0.1111111111111111,
    "of": 0.1111111111111111
  },
  "okbutton screen": {
    "completion": 1.0
  },
  "screen completion": {
    "button": 0.5,
    "field": 0.5
  },
  "completion button": {
    "if": 1.0
  },
  "button if": {
    "action": 1.0
  },
  "if action": {
    "changerec": 0.2777777777777778,
    "ch": 0.05555555555555555,
    "1": 0.2222222222222222,
    "2": 0.2222222222222222,
    "3": 0.2222222222222222
  },
  "action changerec": {
    "and": 0.5,
    "if": 0.3333333333333333,
    "set": 0.16666666666666666
  },
  "changerec and": {
    "cus": 1.0
  },
  "and cus": {
    "custno": 1.0
  },
  "custno savekey": {
    "check": 0.25,
    "change": 0.08333333333333333,
    "initialize": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "savekey check": {
    "for": 1.0
  },
  "check for": {
    "changed": 0.17647058823529413,
    "delete": 0.17647058823529413,
    "end": 0.35294117647058826,
    "shipto": 0.058823529411764705,
    "inadvertent": 0.058823529411764705,
    "other": 0.17647058823529413
  },
  "for changed": {
    "primary": 1.0
  },
  "changed primary": {
    "key": 1.0
  },
  "value cus": {
    "custno": 1.0
  },
  "savekey change": {
    "it": 1.0
  },
  "change it": {
    "back": 1.0
  },
  "it back": {
    "message": 0.2,
    "get": 0.2,
    "sam": 0.4,
    "you": 0.2
  },
  "back message": {
    "key": 1.0
  },
  "message key": {
    "field": 1.0
  },
  "field changes": {
    "not": 1.0
  },
  "changes not": {
    "allowed": 1.0
  },
  "allowed tell": {
    "the": 0.5,
    "user": 0.5
  },
  "tell the": {
    "user": 1.0
  },
  "user select": {
    "1": 1.0
  },
  "select 1": {
    "to": 0.3333333333333333,
    "and": 0.6666666666666666
  },
  "to start": {
    "over": 1.0
  },
  "start over": {
    "cycle": 1.0
  },
  "over cycle": {
    "elsif": 0.16666666666666666,
    "else": 0.16666666666666666,
    "at": 0.6666666666666666
  },
  "cycle elsif": {
    "action": 1.0
  },
  "elsif action": {
    "delet": 0.3333333333333333,
    "deleterec": 0.6666666666666666
  },
  "action delet": {
    "erec": 1.0
  },
  "delet erec": {
    "check": 1.0
  },
  "erec check": {
    "for": 1.0
  },
  "for delete": {
    "action": 0.75,
    "is": 0.25
  },
  "action ord": {
    "custno": 1.0
  },
  "custno cus": {
    "custno": 1.0
  },
  "custno initialize": {
    "key": 1.0
  },
  "initialize key": {
    "field": 1.0
  },
  "field get": {
    "order": 1.0
  },
  "get order": {
    "ord": 1.0
  },
  "order ord": {
    "custkey": 1.0
  },
  "ord custkey": {
    "and": 0.5555555555555556,
    "ord": 0.4444444444444444
  },
  "custkey and": {
    "try": 0.2,
    "set": 0.8
  },
  "and try": {
    "to": 0.3333333333333333,
    "again": 0.6666666666666666
  },
  "try to": {
    "get": 1.0
  },
  "a related": {
    "record": 1.0
  },
  "related record": {
    "if": 1.0
  },
  "record if": {
    "not": 0.14285714285714285,
    "errorcode": 0.5714285714285714,
    "however": 0.14285714285714285,
    "duplicate": 0.14285714285714285
  },
  "if not": {
    "errorcode": 0.6666666666666666,
    "alert": 0.3333333333333333
  },
  "not errorcode": {
    "if": 1.0
  },
  "errorcode if": {
    "the": 0.2,
    "get": 0.2,
    "error": 0.6
  },
  "the get": {
    "was": 0.16666666666666666,
    "statement": 0.5,
    "is": 0.16666666666666666,
    "of": 0.16666666666666666
  },
  "get was": {
    "successful": 0.6666666666666666,
    "unsuccessful": 0.3333333333333333
  },
  "was successful": {
    "message": 0.5,
    "delete": 0.5
  },
  "successful message": {
    "delete": 1.0
  },
  "message delete": {
    "not": 1.0
  },
  "delete not": {
    "allowed": 1.0
  },
  "tell user": {
    "select": 1.0
  },
  "cycle else": {
    "if": 1.0
  },
  "else if": {
    "get": 0.2,
    "nobody": 0.6,
    "no": 0.2
  },
  "if get": {
    "was": 1.0
  },
  "was unsuccessful": {
    "delete": 0.5,
    "the": 0.5
  },
  "unsuccessful delete": {
    "customer": 1.0
  },
  "delete customer": {
    "go": 1.0
  },
  "customer go": {
    "ahead": 1.0
  },
  "go ahead": {
    "and": 1.0
  },
  "ahead and": {
    "delete": 0.5,
    "to": 0.5
  },
  "and delete": {
    "it": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "delete it": {
    "break": 0.25,
    "action": 0.75
  },
  "it break": {
    "and": 1.0
  },
  "break and": {
    "get": 0.2,
    "break": 0.8
  },
  "and get": {
    "out": 0.8571428571428571,
    "the": 0.14285714285714285
  },
  "get out": {
    "end": 0.25,
    "ord": 0.375,
    "clear": 0.125,
    "of": 0.25
  },
  "out end": {
    "other": 0.5,
    "build": 0.5
  },
  "end other": {
    "executable": 1.0
  },
  "other executable": {
    "processing": 1.0
  },
  "executable processing": {
    "statements": 0.6666666666666666,
    "statem": 0.3333333333333333
  },
  "processing statements": {
    "end": 0.8,
    "get": 0.2
  },
  "statements end": {
    "end": 0.75,
    "this": 0.25
  },
  "end 45": {
    "database": 1.0
  },
  "45 database": {
    "design": 1.0
  },
  "design cascade": {
    "the": 1.0
  },
  "action cascade": {
    "the": 1.0
  },
  "action cascades": {
    "to": 1.0
  },
  "cascades to": {
    "include": 1.0
  },
  "to include": {
    "any": 1.0
  },
  "include any": {
    "foreign": 1.0
  },
  "any foreign": {
    "keys": 1.0
  },
  "the delete": {
    "action": 0.3333333333333333,
    "end": 0.3333333333333333,
    "or": 0.3333333333333333
  },
  "action also": {
    "dele": 0.5,
    "changes": 0.5
  },
  "also dele": {
    "tes": 1.0
  },
  "dele tes": {
    "those": 1.0
  },
  "tes those": {
    "records": 1.0
  },
  "records and": {
    "the": 0.3333333333333333,
    "a": 0.3333333333333333,
    "receive": 0.3333333333333333
  },
  "the change": {
    "action": 0.5,
    "elsif": 0.5
  },
  "also changes": {
    "the": 1.0
  },
  "the values": {
    "in": 1.0
  },
  "values in": {
    "the": 0.6666666666666666,
    "a": 0.3333333333333333
  },
  "key there": {
    "is": 1.0
  },
  "one consideration": {
    "that": 1.0
  },
  "consideration that": {
    "should": 1.0
  },
  "that should": {
    "be": 0.5,
    "remain": 0.5
  },
  "be noted": {
    "when": 1.0
  },
  "noted when": {
    "you": 1.0
  },
  "you cascade": {
    "the": 0.5,
    "to": 0.5
  },
  "action what": {
    "if": 1.0
  },
  "cascade to": {
    "the": 1.0
  },
  "also the": {
    "parent": 1.0
  },
  "parent of": {
    "another": 1.0
  },
  "another child": {
    "file": 1.0
  },
  "a situation": {
    "which": 1.0
  },
  "situation which": {
    "you": 1.0
  },
  "must detect": {
    "and": 1.0
  },
  "detect and": {
    "handle": 1.0
  },
  "and handle": {
    "because": 1.0
  },
  "handle because": {
    "the": 1.0
  },
  "the cascade": {
    "action": 0.3333333333333333,
    "option": 0.3333333333333333,
    "has": 0.3333333333333333
  },
  "cascade action": {
    "should": 1.0
  },
  "action should": {
    "affect": 1.0
  },
  "should affect": {
    "all": 1.0
  },
  "affect all": {
    "the": 1.0
  },
  "the dependent": {
    "file": 1.0
  },
  "dependent file": {
    "records": 1.0
  },
  "records when": {
    "you": 1.0
  },
  "are writing": {
    "source": 1.0
  },
  "writing source": {
    "code": 1.0
  },
  "handle this": {
    "situation": 0.5,
    "eventuality": 0.5
  },
  "situation you": {
    "need": 1.0
  },
  "be aware": {
    "of": 1.0
  },
  "aware of": {
    "the": 1.0
  },
  "file rela": {
    "tionships": 1.0
  },
  "rela tionships": {
    "and": 1.0
  },
  "tionships and": {
    "write": 1.0
  },
  "and write": {
    "code": 0.25,
    "the": 0.75
  },
  "write code": {
    "that": 1.0
  },
  "that cascades": {
    "the": 1.0
  },
  "cascades the": {
    "action": 1.0
  },
  "action as": {
    "far": 1.0
  },
  "as far": {
    "it": 1.0
  },
  "far it": {
    "needs": 1.0
  },
  "it needs": {
    "to": 1.0
  },
  "to go": {
    "to": 1.0
  },
  "go to": {
    "ensure": 0.5,
    "lunch": 0.5
  },
  "that nothing": {
    "is": 1.0
  },
  "nothing is": {
    "left": 1.0
  },
  "is left": {
    "hanging": 0.3333333333333333,
    "between": 0.3333333333333333,
    "locked": 0.3333333333333333
  },
  "left hanging": {
    "again": 1.0
  },
  "hanging again": {
    "using": 1.0
  },
  "to cascade": {
    "deletes": 1.0
  },
  "cascade deletes": {
    "or": 1.0
  },
  "the prima": {
    "ry": 1.0
  },
  "prima ry": {
    "key": 1.0
  },
  "ry key": {
    "value": 1.0
  },
  "value do": {
    "changecascade": 0.5,
    "changenullify": 0.5
  },
  "do changecascade": {
    "and": 1.0
  },
  "changecascade and": {
    "cascade": 1.0
  },
  "and cascade": {
    "the": 0.6666666666666666,
    "delete": 0.3333333333333333
  },
  "change elsif": {
    "action": 1.0
  },
  "deleterec check": {
    "for": 1.0
  },
  "action do": {
    "deletecascade": 0.5,
    "deletenullify": 0.5
  },
  "do deletecascade": {
    "and": 1.0
  },
  "deletecascade and": {
    "cascade": 1.0
  },
  "delete end": {
    "other": 1.0
  },
  "processing statem": {
    "ents": 1.0
  },
  "statem ents": {
    "end": 1.0
  },
  "ents end": {
    "end": 1.0
  },
  "end changecascade": {
    "routine": 1.0
  },
  "changecascade routine": {
    "ord": 1.0
  },
  "routine ord": {
    "custno": 1.0
  },
  "savekey initialize": {
    "the": 1.0
  },
  "initialize the": {
    "key": 0.8333333333333334,
    "starting": 0.16666666666666666
  },
  "field set": {
    "ord": 0.8,
    "itm": 0.2
  },
  "set ord": {
    "custkey": 1.0
  },
  "custkey ord": {
    "custkey": 1.0
  },
  "set to": {
    "process": 0.36363636363636365,
    "top": 0.18181818181818182,
    "the": 0.09090909090909091,
    "an": 0.09090909090909091,
    "a": 0.09090909090909091,
    "your": 0.09090909090909091,
    "only": 0.09090909090909091
  },
  "to process": {
    "all": 0.8,
    "the": 0.2
  },
  "process all": {
    "of": 1.0
  },
  "one loop": {
    "customer": 0.8,
    "until": 0.2
  },
  "loop customer": {
    "s": 1.0
  },
  "customer s": {
    "orders": 1.0
  },
  "s orders": {
    "next": 1.0
  },
  "orders next": {
    "order": 1.0
  },
  "next order": {
    "one": 1.0
  },
  "order one": {
    "at": 1.0
  },
  "one at": {
    "a": 1.0
  },
  "at a": {
    "time": 1.0
  },
  "a time": {
    "if": 0.6666666666666666,
    "period": 0.1111111111111111,
    "also": 0.1111111111111111,
    "and": 0.1111111111111111
  },
  "time if": {
    "ord": 0.6666666666666666,
    "itm": 0.16666666666666666,
    "errorcode": 0.16666666666666666
  },
  "if ord": {
    "custno": 1.0
  },
  "savekey or": {
    "errorcode": 1.0
  },
  "or errorcode": {
    "then": 1.0
  },
  "then break": {
    "check": 0.5555555555555556,
    "break": 0.3333333333333333,
    "report": 0.1111111111111111
  },
  "break check": {
    "for": 1.0
  },
  "for end": {
    "of": 1.0
  },
  "of cust": {
    "and": 0.75,
    "an": 0.25
  },
  "cust and": {
    "get": 1.0
  },
  "out ord": {
    "custno": 1.0
  },
  "custno change": {
    "to": 1.0
  },
  "change to": {
    "new": 0.25,
    "null": 0.5,
    "a": 0.25
  },
  "new value": {
    "put": 0.5,
    "to": 0.5
  },
  "value put": {
    "order": 1.0
  },
  "put order": {
    "and": 1.0
  },
  "and put": {
    "the": 0.75,
    "into": 0.25
  },
  "the record": {
    "back": 0.0784313725490196,
    "buffer": 0.13725490196078433,
    "pointer": 0.0784313725490196,
    "you": 0.0196078431372549,
    "on": 0.0784313725490196,
    "if": 0.0196078431372549,
    "it": 0.0196078431372549,
    "make": 0.0196078431372549,
    "a": 0.0196078431372549,
    "from": 0.0784313725490196,
    "before": 0.0392156862745098,
    "immediately": 0.0196078431372549,
    "as": 0.0196078431372549,
    "then": 0.0196078431372549,
    "to": 0.0196078431372549,
    "is": 0.058823529411764705,
    "w": 0.0196078431372549,
    "has": 0.0196078431372549,
    "must": 0.0196078431372549,
    "and": 0.0196078431372549,
    "remains": 0.0196078431372549,
    "but": 0.0196078431372549,
    "some": 0.0196078431372549,
    "or": 0.0196078431372549,
    "between": 0.0196078431372549,
    "only": 0.0196078431372549,
    "the": 0.0196078431372549,
    "continually": 0.0196078431372549,
    "during": 0.0196078431372549,
    "while": 0.0196078431372549
  },
  "record back": {
    "if": 0.5,
    "to": 0.16666666666666666,
    "into": 0.16666666666666666,
    "or": 0.16666666666666666
  },
  "back if": {
    "errorcode": 1.0
  },
  "error end": {
    "deletecascade": 0.1111111111111111,
    "end": 0.2222222222222222,
    "delete": 0.1111111111111111,
    "deletenullify": 0.1111111111111111,
    "the": 0.1111111111111111,
    "elsif": 0.3333333333333333
  },
  "end deletecascade": {
    "routine": 1.0
  },
  "deletecascade routine": {
    "ord": 1.0
  },
  "out clear": {
    "itm": 1.0
  },
  "clear itm": {
    "record": 1.0
  },
  "itm record": {
    "clear": 1.0
  },
  "record clear": {
    "the": 1.0
  },
  "clear the": {
    "record": 1.0
  },
  "record buffer": {
    "itm": 0.06666666666666667,
    "sam": 0.06666666666666667,
    "assigning": 0.06666666666666667,
    "end": 0.06666666666666667,
    "else": 0.2,
    "for": 0.06666666666666667,
    "the": 0.13333333333333333,
    "could": 0.13333333333333333,
    "without": 0.06666666666666667,
    "sa": 0.06666666666666667,
    "allowing": 0.06666666666666667
  },
  "buffer itm": {
    "orderno": 1.0
  },
  "orderno ord": {
    "orderno": 1.0
  },
  "orderno initialize": {
    "the": 1.0
  },
  "set itm": {
    "orderkey": 1.0
  },
  "orderkey itm": {
    "orderkey": 1.0
  },
  "orderkey and": {
    "set": 1.0
  },
  "loop until": {
    "eof": 0.5,
    "end": 0.5
  },
  "until eof": {
    "item": 1.0
  },
  "eof item": {
    "order": 1.0
  },
  "item order": {
    "s": 1.0
  },
  "order s": {
    "items": 1.0
  },
  "s items": {
    "next": 1.0
  },
  "items next": {
    "item": 1.0
  },
  "next item": {
    "one": 1.0
  },
  "item one": {
    "at": 1.0
  },
  "if itm": {
    "orderno": 1.0
  },
  "orderno or": {
    "errorcode": 1.0
  },
  "of order": {
    "and": 1.0
  },
  "of item": {
    "loop": 1.0
  },
  "item loop": {
    "delete": 1.0
  },
  "loop delete": {
    "item": 1.0
  },
  "delete item": {
    "and": 1.0
  },
  "item and": {
    "delete": 1.0
  },
  "item record": {
    "if": 1.0
  },
  "file loop": {
    "shp": 0.3333333333333333,
    "nullify": 0.3333333333333333,
    "process": 0.3333333333333333
  },
  "loop shp": {
    "orderno": 1.0
  },
  "orderno check": {
    "for": 1.0
  },
  "for shipto": {
    "record": 1.0
  },
  "shipto record": {
    "clarion": 0.5,
    "if": 0.5
  },
  "record clarion": {
    "language": 1.0
  },
  "guide 46": {
    "get": 1.0
  },
  "46 get": {
    "shipto": 1.0
  },
  "get shipto": {
    "shp": 1.0
  },
  "shipto shp": {
    "orderkey": 1.0
  },
  "orderkey if": {
    "not": 1.0
  },
  "successful delete": {
    "shipto": 1.0
  },
  "delete shipto": {
    "delete": 1.0
  },
  "shipto delete": {
    "the": 1.0
  },
  "end delete": {
    "order": 1.0
  },
  "delete order": {
    "and": 1.0
  },
  "order record": {
    "if": 1.0
  },
  "loop nullify": {
    "the": 1.0
  },
  "key nullify": {
    "the": 1.0
  },
  "key means": {
    "that": 1.0
  },
  "key are": {
    "changed": 1.0
  },
  "are changed": {
    "to": 1.0
  },
  "changed to": {
    "null": 0.5,
    "look": 0.5
  },
  "to null": {
    "values": 0.16666666666666666,
    "value": 0.3333333333333333,
    "out": 0.16666666666666666,
    "when": 0.16666666666666666,
    "end": 0.16666666666666666
  },
  "values if": {
    "the": 0.5,
    "both": 0.5
  },
  "fields allow": {
    "null": 1.0
  },
  "allow null": {
    "values": 1.0
  },
  "values again": {
    "using": 1.0
  },
  "code would": {
    "look": 0.5,
    "be": 0.5
  },
  "would look": {
    "to": 1.0
  },
  "to nullify": {
    "the": 1.0
  },
  "keys on": {
    "delete": 1.0
  },
  "on delete": {
    "or": 0.3333333333333333,
    "restrict": 0.3333333333333333,
    "clau": 0.3333333333333333
  },
  "delete or": {
    "a": 0.5,
    "change": 0.5
  },
  "do changenullify": {
    "and": 1.0
  },
  "changenullify and": {
    "nullify": 1.0
  },
  "and nullify": {
    "the": 1.0
  },
  "child records": {
    "elsif": 0.25,
    "end": 0.25,
    "or": 0.25,
    "across": 0.25
  },
  "records elsif": {
    "action": 1.0
  },
  "do deletenullify": {
    "and": 1.0
  },
  "deletenullify and": {
    "nullify": 1.0
  },
  "records end": {
    "other": 1.0
  },
  "end changenullify": {
    "routine": 1.0
  },
  "changenullify routine": {
    "ord": 1.0
  },
  "custno 0": {
    "change": 1.0
  },
  "0 change": {
    "to": 1.0
  },
  "null value": {
    "put": 0.6666666666666666,
    "in": 0.3333333333333333
  },
  "end deletenullify": {
    "routine": 1.0
  },
  "deletenullify routine": {
    "ord": 1.0
  },
  "set t": {
    "o": 1.0
  },
  "o process": {
    "all": 1.0
  },
  "cust an": {
    "d": 1.0
  },
  "d get": {
    "out": 1.0
  },
  "the nullify": {
    "option": 1.0
  },
  "nullify option": {
    "does": 1.0
  },
  "option does": {
    "not": 1.0
  },
  "not require": {
    "as": 0.5,
    "any": 0.5
  },
  "require as": {
    "many": 1.0
  },
  "many changes": {
    "as": 1.0
  },
  "changes as": {
    "the": 1.0
  },
  "cascade option": {
    "th": 1.0
  },
  "option th": {
    "is": 1.0
  },
  "th is": {
    "is": 1.0
  },
  "is is": {
    "because": 1.0
  },
  "cascade has": {
    "to": 1.0
  },
  "delete all": {
    "the": 1.0
  },
  "many files": {
    "as": 1.0
  },
  "files as": {
    "are": 1.0
  },
  "related nullify": {
    "only": 1.0
  },
  "nullify only": {
    "needs": 1.0
  },
  "only needs": {
    "to": 1.0
  },
  "null out": {
    "the": 1.0
  },
  "out the": {
    "individual": 1.0
  },
  "individual foreign": {
    "keys": 1.0
  },
  "key being": {
    "changed": 1.0
  },
  "being changed": {
    "or": 1.0
  },
  "changed or": {
    "deleted": 1.0
  },
  "or deleted": {
    "47": 0.5,
    "the": 0.5
  },
  "deleted 47": {
    "database": 1.0
  },
  "47 database": {
    "design": 1.0
  },
  "design summary": {
    "each": 1.0
  },
  "summary each": {
    "data": 1.0
  },
  "each data": {
    "item": 1.0
  },
  "once separate": {
    "files": 1.0
  },
  "files are": {
    "used": 0.3333333333333333,
    "related": 0.3333333333333333,
    "successfully": 0.3333333333333333
  },
  "used to": {
    "eliminate": 0.09090909090909091,
    "ensure": 0.09090909090909091,
    "rebuild": 0.09090909090909091,
    "retrieve": 0.09090909090909091,
    "get": 0.09090909090909091,
    "keep": 0.09090909090909091,
    "gain": 0.09090909090909091,
    "access": 0.09090909090909091,
    "perform": 0.09090909090909091,
    "enhance": 0.09090909090909091,
    "update": 0.09090909090909091
  },
  "eliminate data": {
    "duplication": 1.0
  },
  "data duplication": {
    "files": 1.0
  },
  "duplication files": {
    "are": 1.0
  },
  "related by": {
    "primary": 1.0
  },
  "by primary": {
    "and": 1.0
  },
  "keys a": {
    "primary": 1.0
  },
  "unique and": {
    "non": 1.0
  },
  "non null": {
    "index": 1.0
  },
  "null index": {
    "into": 1.0
  },
  "for individual": {
    "record": 1.0
  },
  "individual record": {
    "access": 1.0
  },
  "record access": {
    "a": 0.5,
    "within": 0.5
  },
  "access a": {
    "foreign": 0.5,
    "record": 0.5
  },
  "the pr": {
    "imary": 1.0
  },
  "pr imary": {
    "key": 1.0
  },
  "imary key": {
    "of": 1.0
  },
  "of some": {
    "other": 0.5,
    "kind": 0.5
  },
  "other file": {
    "one": 1.0
  },
  "file one": {
    "to": 1.0
  },
  "many file": {
    "relationships": 1.0
  },
  "relationships are": {
    "the": 0.5,
    "most": 0.5
  },
  "common they": {
    "are": 1.0
  },
  "also referred": {
    "to": 1.0
  },
  "as parent": {
    "child": 1.0
  },
  "one same": {
    "relationship": 1.0
  },
  "same relationship": {
    "reverse": 1.0
  },
  "relationship reverse": {
    "view": 1.0
  },
  "view one": {
    "to": 1.0
  },
  "are most": {
    "commonly": 1.0
  },
  "most commonly": {
    "created": 0.25,
    "used": 0.75
  },
  "commonly created": {
    "to": 1.0
  },
  "created to": {
    "hold": 1.0
  },
  "hold data": {
    "that": 1.0
  },
  "always needed": {
    "in": 1.0
  },
  "in every": {
    "record": 1.0
  },
  "every record": {
    "many": 1.0
  },
  "record many": {
    "to": 1.0
  },
  "relationships require": {
    "a": 1.0
  },
  "require a": {
    "join": 0.3333333333333333,
    "key": 0.3333333333333333,
    "file": 0.3333333333333333
  },
  "which acts": {
    "as": 1.0
  },
  "acts as": {
    "a": 1.0
  },
  "a broker": {
    "between": 1.0
  },
  "broker between": {
    "the": 1.0
  },
  "file inserts": {
    "two": 1.0
  },
  "inserts two": {
    "one": 1.0
  },
  "relationships between": {
    "the": 1.0
  },
  "the many": {
    "to": 1.0
  },
  "relationship only": {
    "those": 1.0
  },
  "only those": {
    "primary": 0.2,
    "outer": 0.2,
    "students": 0.4,
    "computer": 0.2
  },
  "those primary": {
    "and": 1.0
  },
  "keys t": {
    "hat": 1.0
  },
  "t hat": {
    "the": 1.0
  },
  "hat the": {
    "application": 1.0
  },
  "application needs": {
    "as": 0.5,
    "to": 0.5
  },
  "needs as": {
    "a": 1.0
  },
  "a practical": {
    "consideration": 1.0
  },
  "practical consideration": {
    "for": 1.0
  },
  "consideration for": {
    "specific": 1.0
  },
  "for specific": {
    "access": 1.0
  },
  "specific access": {
    "to": 1.0
  },
  "files need": {
    "to": 1.0
  },
  "declared referential": {
    "integrity": 1.0
  },
  "all foreign": {
    "keys": 1.0
  },
  "keys contain": {
    "valid": 1.0
  },
  "contain valid": {
    "references": 1.0
  },
  "valid references": {
    "to": 1.0
  },
  "references to": {
    "primary": 1.0
  },
  "to primary": {
    "keys": 1.0
  },
  "keys maintaining": {
    "referential": 1.0
  },
  "integrity requ": {
    "ires": 1.0
  },
  "requ ires": {
    "executable": 1.0
  },
  "ires executable": {
    "code": 1.0
  },
  "that tests": {
    "for": 1.0
  },
  "tests for": {
    "update": 1.0
  },
  "for update": {
    "or": 0.5,
    "obviously": 0.5
  },
  "update or": {
    "delete": 1.0
  },
  "or delete": {
    "of": 0.6666666666666666,
    "the": 0.3333333333333333
  },
  "delete of": {
    "the": 0.5,
    "that": 0.5
  },
  "values the": {
    "three": 1.0
  },
  "three common": {
    "solutions": 1.0
  },
  "common solutions": {
    "to": 1.0
  },
  "solutions to": {
    "maintaining": 1.0
  },
  "to maintaining": {
    "referential": 1.0
  },
  "integrity are": {
    "restricting": 1.0
  },
  "are restricting": {
    "update": 1.0
  },
  "restricting update": {
    "delete": 1.0
  },
  "update delete": {
    "not": 0.5,
    "the": 0.5
  },
  "allowed cascading": {
    "also": 1.0
  },
  "cascading also": {
    "update": 1.0
  },
  "also update": {
    "delete": 1.0
  },
  "key or": {
    "nullifying": 0.25,
    "index": 0.75
  },
  "or nullifying": {
    "the": 1.0
  },
  "nullifying the": {
    "foreign": 1.0
  },
  "key assign": {
    "null": 1.0
  },
  "assign null": {
    "values": 1.0
  },
  "key clarion": {
    "language": 1.0
  },
  "guide 48": {
    "49": 1.0
  },
  "48 49": {
    "data": 1.0
  },
  "processing 5": {
    "data": 1.0
  },
  "processing data": {
    "file": 1.0
  },
  "processing custom": {
    "database": 1.0
  },
  "custom database": {
    "applications": 1.0
  },
  "applications by": {
    "definition": 0.5,
    "specifying": 0.5
  },
  "by definition": {
    "store": 1.0
  },
  "definition store": {
    "data": 1.0
  },
  "store data": {
    "in": 1.0
  },
  "in files": {
    "getting": 0.5,
    "where": 0.5
  },
  "files getting": {
    "data": 1.0
  },
  "getting data": {
    "into": 1.0
  },
  "into those": {
    "files": 1.0
  },
  "those files": {
    "and": 1.0
  },
  "files and": {
    "proces": 1.0
  },
  "and proces": {
    "sing": 1.0
  },
  "proces sing": {
    "it": 1.0
  },
  "sing it": {
    "for": 1.0
  },
  "some kind": {
    "of": 0.75,
    "to": 0.25
  },
  "of meaningful": {
    "output": 1.0
  },
  "meaningful output": {
    "is": 1.0
  },
  "output is": {
    "the": 1.0
  },
  "primary purpose": {
    "of": 1.0
  },
  "any database": {
    "application": 1.0
  },
  "application this": {
    "essay": 1.0
  },
  "a discussion": {
    "of": 1.0
  },
  "tools that": {
    "allow": 1.0
  },
  "that allow": {
    "the": 0.5,
    "you": 0.5
  },
  "the programmer": {
    "to": 1.0
  },
  "programmer to": {
    "access": 1.0
  },
  "access and": {
    "process": 0.25,
    "random": 0.25,
    "four": 0.25,
    "rando": 0.25
  },
  "and process": {
    "data": 0.5,
    "one": 0.5
  },
  "process data": {
    "files": 1.0
  },
  "data files": {
    "file": 0.5,
    "at": 0.5
  },
  "files file": {
    "access": 1.0
  },
  "methods generally": {
    "speaking": 1.0
  },
  "speaking records": {
    "are": 1.0
  },
  "are put": {
    "into": 1.0
  },
  "put into": {
    "data": 0.5,
    "the": 0.5
  },
  "into data": {
    "files": 1.0
  },
  "files at": {
    "the": 1.0
  },
  "the sequence": {
    "in": 0.3333333333333333,
    "established": 0.3333333333333333,
    "therefore": 0.3333333333333333
  },
  "sequence in": {
    "which": 1.0
  },
  "are added": {
    "this": 0.5,
    "together": 0.5
  },
  "added this": {
    "is": 1.0
  },
  "always true": {
    "but": 1.0
  },
  "true but": {
    "is": 1.0
  },
  "but is": {
    "usually": 1.0
  },
  "usually true": {
    "this": 1.0
  },
  "true this": {
    "creates": 1.0
  },
  "this creates": {
    "the": 1.0
  },
  "the physical": {
    "record": 0.8333333333333334,
    "order": 0.16666666666666666
  },
  "physical record": {
    "number": 0.8333333333333334,
    "index": 0.08333333333333333,
    "num": 0.08333333333333333
  },
  "record number": {
    "order": 0.2777777777777778,
    "the": 0.1111111111111111,
    "index": 0.1111111111111111,
    "set": 0.05555555555555555,
    "3": 0.05555555555555555,
    "and": 0.05555555555555555,
    "is": 0.1111111111111111,
    "specified": 0.05555555555555555,
    "or": 0.05555555555555555,
    "sam": 0.05555555555555555,
    "from": 0.05555555555555555
  },
  "number order": {
    "of": 0.2,
    "nothing": 0.2,
    "the": 0.2,
    "access": 0.2,
    "get": 0.2
  },
  "physical order": {
    "in": 0.2,
    "does": 0.2,
    "indexed": 0.2,
    "the": 0.2,
    "sets": 0.2
  },
  "records appear": {
    "within": 1.0
  },
  "appear within": {
    "the": 1.0
  },
  "this physical": {
    "order": 1.0
  },
  "necessarily correspond": {
    "to": 1.0
  },
  "correspond to": {
    "any": 1.0
  },
  "any meaningful": {
    "or": 1.0
  },
  "meaningful or": {
    "useful": 1.0
  },
  "or useful": {
    "sequence": 1.0
  },
  "useful sequence": {
    "there": 1.0
  },
  "sequence there": {
    "are": 1.0
  },
  "access records": {
    "within": 0.5,
    "sequentially": 0.5
  },
  "records within": {
    "a": 1.0
  },
  "file sequential": {
    "access": 0.5,
    "record": 0.5
  },
  "sequential access": {
    "and": 0.6666666666666666,
    "means": 0.3333333333333333
  },
  "and random": {
    "access": 1.0
  },
  "random access": {
    "sequential": 0.2,
    "means": 0.2,
    "to": 0.4,
    "record": 0.2
  },
  "access sequential": {
    "access": 1.0
  },
  "access means": {
    "you": 1.0
  },
  "you retrieve": {
    "a": 0.5,
    "and": 0.5
  },
  "retrieve a": {
    "number": 0.5,
    "record": 0.5
  },
  "some specified": {
    "sequence": 1.0
  },
  "specified sequence": {
    "processing": 1.0
  },
  "sequence processing": {
    "each": 1.0
  },
  "processing each": {
    "record": 1.0
  },
  "order random": {
    "access": 1.0
  },
  "retrieve and": {
    "process": 1.0
  },
  "process one": {
    "specific": 1.0
  },
  "specific record": {
    "both": 0.2,
    "in": 0.2,
    "within": 0.4,
    "or": 0.2
  },
  "record both": {
    "of": 1.0
  },
  "both of": {
    "these": 1.0
  },
  "these access": {
    "methods": 1.0
  },
  "in almost": {
    "every": 1.0
  },
  "almost every": {
    "business": 1.0
  },
  "every business": {
    "database": 1.0
  },
  "application if": {
    "you": 1.0
  },
  "records sequentially": {
    "in": 1.0
  },
  "sequentially in": {
    "their": 1.0
  },
  "their physical": {
    "record": 1.0
  },
  "order nothing": {
    "more": 1.0
  },
  "nothing more": {
    "than": 1.0
  },
  "needed if": {
    "you": 1.0
  },
  "to randomly": {
    "access": 1.0
  },
  "randomly access": {
    "a": 1.0
  },
  "record and": {
    "you": 0.25,
    "both": 0.25,
    "accomplishes": 0.25,
    "set": 0.25
  },
  "which position": {
    "it": 1.0
  },
  "position it": {
    "occupies": 1.0
  },
  "it occupies": {
    "in": 1.0
  },
  "occupies in": {
    "the": 1.0
  },
  "file its": {
    "record": 1.0
  },
  "its record": {
    "number": 1.0
  },
  "number the": {
    "same": 0.5,
    "physical": 0.5
  },
  "true howev": {
    "er": 1.0
  },
  "howev er": {
    "for": 1.0
  },
  "er for": {
    "most": 1.0
  },
  "for most": {
    "applications": 1.0
  },
  "most applications": {
    "these": 1.0
  },
  "applications these": {
    "constraints": 1.0
  },
  "these constraints": {
    "would": 1.0
  },
  "constraints would": {
    "be": 1.0
  },
  "be too": {
    "limiting": 1.0
  },
  "too limiting": {
    "key": 1.0
  },
  "limiting key": {
    "and": 1.0
  },
  "index the": {
    "clarion": 0.2,
    "index": 0.4,
    "type": 0.2,
    "deadly": 0.2
  },
  "index declarations": {
    "create": 0.5,
    "define": 0.5
  },
  "declarations create": {
    "alternate": 1.0
  },
  "create alternate": {
    "sort": 1.0
  },
  "alternate sort": {
    "orders": 1.0
  },
  "sort orders": {
    "for": 0.16666666666666666,
    "that": 0.3333333333333333,
    "sample": 0.16666666666666666,
    "of": 0.16666666666666666,
    "to": 0.16666666666666666
  },
  "orders for": {
    "the": 1.0
  },
  "file these": {
    "allow": 0.5,
    "two": 0.5
  },
  "these allow": {
    "sequential": 1.0
  },
  "allow sequential": {
    "or": 1.0
  },
  "sequential or": {
    "random": 1.0
  },
  "or random": {
    "access": 1.0
  },
  "some order": {
    "other": 1.0
  },
  "order other": {
    "than": 1.0
  },
  "order the": {
    "order": 0.3333333333333333,
    "main": 0.16666666666666666,
    "same": 0.16666666666666666,
    "third": 0.16666666666666666,
    "result": 0.16666666666666666
  },
  "order is": {
    "determined": 0.5,
    "retrieved": 0.5
  },
  "the component": {
    "fields": 1.0
  },
  "component fields": {
    "that": 0.2,
    "are": 0.2,
    "of": 0.4,
    "at": 0.2
  },
  "that make": {
    "up": 1.0
  },
  "make up": {
    "the": 1.0
  },
  "or index": {
    "each": 0.2,
    "component": 0.2,
    "parameter": 0.2,
    "would": 0.2,
    "record": 0.2
  },
  "index each": {
    "key": 1.0
  },
  "each key": {
    "or": 1.0
  },
  "index component": {
    "may": 0.5,
    "fields": 0.5
  },
  "component may": {
    "be": 1.0
  },
  "in ascending": {
    "or": 0.5,
    "next": 0.5
  },
  "ascending or": {
    "descending": 1.0
  },
  "or descending": {
    "order": 0.5,
    "previous": 0.5
  },
  "descending order": {
    "the": 1.0
  },
  "main difference": {
    "between": 1.0
  },
  "difference between": {
    "key": 0.25,
    "the": 0.5,
    "a": 0.25
  },
  "between key": {
    "and": 1.0
  },
  "index lies": {
    "in": 1.0
  },
  "is dynamically": {
    "maintained": 1.0
  },
  "dynamically maintained": {
    "every": 0.5,
    "and": 0.5
  },
  "maintained every": {
    "time": 1.0
  },
  "every time": {
    "a": 0.5,
    "through": 0.5
  },
  "record is": {
    "added": 0.16666666666666666,
    "being": 0.16666666666666666,
    "get": 0.08333333333333333,
    "not": 0.08333333333333333,
    "saved": 0.08333333333333333,
    "still": 0.08333333333333333,
    "retrieved": 0.08333333333333333,
    "delet": 0.08333333333333333,
    "changed": 0.08333333333333333,
    "deleted": 0.08333333333333333
  },
  "added changed": {
    "or": 1.0
  },
  "deleted the": {
    "key": 0.5,
    "record": 0.5
  },
  "also updated": {
    "sinc": 1.0
  },
  "updated sinc": {
    "e": 1.0
  },
  "sinc e": {
    "it": 1.0
  },
  "e it": {
    "is": 0.5,
    "in": 0.5
  },
  "is always": {
    "kept": 0.3333333333333333,
    "ready": 0.3333333333333333,
    "valid": 0.3333333333333333
  },
  "always kept": {
    "current": 1.0
  },
  "kept current": {
    "a": 1.0
  },
  "current a": {
    "key": 1.0
  },
  "key should": {
    "be": 1.0
  },
  "for sort": {
    "orders": 1.0
  },
  "orders that": {
    "are": 1.0
  },
  "are frequently": {
    "used": 1.0
  },
  "frequently used": {
    "in": 0.5,
    "to": 0.5
  },
  "application an": {
    "index": 1.0
  },
  "index is": {
    "not": 0.5,
    "the": 0.25,
    "built": 0.25
  },
  "not maintained": {
    "and": 1.0
  },
  "maintained and": {
    "must": 0.5,
    "is": 0.5
  },
  "and must": {
    "be": 1.0
  },
  "be rebuilt": {
    "immediately": 1.0
  },
  "rebuilt immediately": {
    "before": 1.0
  },
  "immediately before": {
    "it": 0.3333333333333333,
    "writing": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "before it": {
    "is": 1.0
  },
  "is used": {
    "to": 1.0
  },
  "it accurately": {
    "reflects": 1.0
  },
  "accurately reflects": {
    "the": 1.0
  },
  "reflects the": {
    "current": 1.0
  },
  "current state": {
    "of": 1.0
  },
  "state of": {
    "the": 1.0
  },
  "the build": {
    "statement": 0.3333333333333333,
    "an": 0.16666666666666666,
    "occurs": 0.16666666666666666,
    "immediately": 0.16666666666666666,
    "is": 0.16666666666666666
  },
  "build statement": {
    "is": 0.5,
    "unlike": 0.5
  },
  "to rebuild": {
    "an": 1.0
  },
  "rebuild an": {
    "index": 1.0
  },
  "index because": {
    "of": 1.0
  },
  "time factor": {
    "in": 1.0
  },
  "factor in": {
    "rebuilding": 1.0
  },
  "in rebuilding": {
    "and": 1.0
  },
  "rebuilding and": {
    "the": 1.0
  },
  "that exclusive": {
    "file": 1.0
  },
  "exclusive file": {
    "access": 1.0
  },
  "access is": {
    "required": 1.0
  },
  "build an": {
    "index": 1.0
  },
  "index should": {
    "be": 1.0
  },
  "are infrequently": {
    "used": 1.0
  },
  "infrequently used": {
    "one": 1.0
  },
  "used one": {
    "special": 1.0
  },
  "one special": {
    "form": 1.0
  },
  "special form": {
    "of": 1.0
  },
  "of index": {
    "is": 1.0
  },
  "the dynamic": {
    "index": 1.0
  },
  "dynamic index": {
    "this": 0.1111111111111111,
    "are": 0.1111111111111111,
    "with": 0.1111111111111111,
    "record": 0.1111111111111111,
    "clarion": 0.1111111111111111,
    "is": 0.1111111111111111,
    "allows": 0.1111111111111111,
    "the": 0.1111111111111111,
    "49": 0.1111111111111111
  },
  "index this": {
    "is": 1.0
  },
  "index whose": {
    "component": 1.0
  },
  "whose component": {
    "fields": 1.0
  },
  "fields are": {
    "not": 0.5,
    "null": 0.5
  },
  "file definition": {
    "the": 0.5,
    "set": 0.5
  },
  "definition the": {
    "component": 1.0
  },
  "index are": {
    "declared": 0.5,
    "functionally": 0.5
  },
  "declared at": {
    "run": 1.0
  },
  "time in": {
    "the": 0.5,
    "descending": 0.5
  },
  "statement unlike": {
    "a": 0.5,
    "set": 0.5
  },
  "unlike a": {
    "static": 1.0
  },
  "static index": {
    "you": 0.5,
    "on": 0.5
  },
  "index you": {
    "may": 1.0
  },
  "may bui": {
    "ld": 1.0
  },
  "bui ld": {
    "a": 1.0
  },
  "ld a": {
    "dynamic": 1.0
  },
  "index with": {
    "the": 1.0
  },
  "file open": {
    "in": 0.25,
    "read": 0.5,
    "report": 0.25
  },
  "open in": {
    "any": 1.0
  },
  "any access": {
    "mode": 0.5,
    "to": 0.5
  },
  "access mode": {
    "the": 0.1111111111111111,
    "parameter": 0.1111111111111111,
    "specifies": 0.1111111111111111,
    "values": 0.1111111111111111,
    "is": 0.3333333333333333,
    "42h": 0.1111111111111111,
    "determines": 0.1111111111111111
  },
  "mode the": {
    "advantage": 1.0
  },
  "advantage should": {
    "be": 1.0
  },
  "be immediately": {
    "obvious": 1.0
  },
  "immediately obvious": {
    "end": 1.0
  },
  "obvious end": {
    "user": 1.0
  },
  "end user": {
    "definable": 0.2,
    "cann": 0.2,
    "attempts": 0.2,
    "to": 0.2,
    "apparently": 0.2
  },
  "user definable": {
    "sort": 1.0
  },
  "definable sort": {
    "orders": 1.0
  },
  "orders sample": {
    "file": 1.0
  },
  "sample file": {
    "driver": 0.5714285714285714,
    "next": 0.14285714285714285,
    "records": 0.14285714285714285,
    "physical": 0.14285714285714285
  },
  "driver topspeed": {
    "pre": 1.0
  },
  "topspeed pre": {
    "sam": 1.0
  },
  "pre sam": {
    "field1key": 0.25,
    "fieldskey": 0.25,
    "a": 0.5
  },
  "sam field1key": {
    "key": 0.5,
    "set": 0.5
  },
  "field1key key": {
    "sam": 1.0
  },
  "key sam": {
    "field1": 1.0
  },
  "sam field1": {
    "key": 0.07692307692307693,
    "sam": 0.15384615384615385,
    "will": 0.07692307692307693,
    "and": 0.23076923076923078,
    "10": 0.23076923076923078,
    "15": 0.07692307692307693,
    "record": 0.07692307692307693,
    "field2ndx": 0.07692307692307693
  },
  "field1 key": {
    "on": 1.0
  },
  "on field": {
    "1": 1.0
  },
  "field 1": {
    "field2ndx": 0.5,
    "and": 0.5
  },
  "1 field2ndx": {
    "index": 1.0
  },
  "field2ndx index": {
    "sam": 1.0
  },
  "index sam": {
    "field2": 1.0
  },
  "sam field2": {
    "static": 0.09090909090909091,
    "to": 0.09090909090909091,
    "build": 0.09090909090909091,
    "is": 0.09090909090909091,
    "sort": 0.09090909090909091,
    "dup": 0.09090909090909091,
    "the": 0.09090909090909091,
    "sample": 0.09090909090909091,
    "abc": 0.18181818181818182,
    "an": 0.09090909090909091
  },
  "field2 static": {
    "index": 1.0
  },
  "index on": {
    "field2": 0.5,
    "sam": 0.5
  },
  "on field2": {
    "dynndx": 1.0
  },
  "field2 dynndx": {
    "index": 1.0
  },
  "dynndx index": {
    "dynamic": 1.0
  },
  "index dynamic": {
    "index": 1.0
  },
  "index record": {
    "record": 0.18181818181818182,
    "number": 0.45454545454545453,
    "field1": 0.18181818181818182,
    "numbers": 0.18181818181818182
  },
  "record field1": {
    "long": 0.6,
    "field2": 0.4
  },
  "10 field3": {
    "decimal": 1.0
  },
  "field3 decimal": {
    "7": 1.0
  },
  "2 code": {
    "open": 1.0
  },
  "code open": {
    "sample": 0.375,
    "screen": 0.375,
    "myview": 0.25
  },
  "open sample": {
    "42h": 1.0
  },
  "sample 42h": {
    "open": 1.0
  },
  "42h open": {
    "read": 1.0
  },
  "open read": {
    "write": 0.8,
    "only": 0.2
  },
  "read write": {
    "deny": 0.9285714285714286,
    "2": 0.07142857142857142
  },
  "write deny": {
    "none": 0.6923076923076923,
    "write": 0.3076923076923077
  },
  "deny none": {
    "lock": 0.15384615384615385,
    "clear": 0.07692307692307693,
    "64": 0.07692307692307693,
    "42h": 0.15384615384615385,
    "share": 0.15384615384615385,
    "open": 0.15384615384615385,
    "these": 0.07692307692307693,
    "40h": 0.07692307692307693,
    "for": 0.07692307692307693
  },
  "none lock": {
    "sample": 1.0
  },
  "lock sample": {
    "lock": 0.5,
    "1": 0.5
  },
  "sample lock": {
    "for": 1.0
  },
  "lock for": {
    "exclusive": 0.3333333333333333,
    "1": 0.6666666666666666
  },
  "for exclusive": {
    "access": 1.0
  },
  "exclusive access": {
    "build": 0.5,
    "is": 0.5
  },
  "access build": {
    "sam": 1.0
  },
  "build sam": {
    "field2": 0.3333333333333333,
    "dy": 0.3333333333333333,
    "field2ndx": 0.3333333333333333
  },
  "field2 to": {
    "build": 1.0
  },
  "the index": {
    "unlock": 0.125,
    "on": 0.0625,
    "value": 0.3125,
    "sequence": 0.125,
    "record": 0.125,
    "order": 0.0625,
    "component": 0.0625,
    "loop": 0.0625,
    "63": 0.0625
  },
  "index unlock": {
    "sample": 1.0
  },
  "unlock sample": {
    "then": 0.5,
    "unlock": 0.5
  },
  "sample then": {
    "unlock": 1.0
  },
  "then unlock": {
    "the": 1.0
  },
  "unlock the": {
    "file": 0.5,
    "lock": 0.25,
    "locked": 0.25
  },
  "file build": {
    "sam": 1.0
  },
  "sam dy": {
    "nndx": 1.0
  },
  "dy nndx": {
    "sam": 1.0
  },
  "nndx sam": {
    "field1": 1.0
  },
  "field1 sam": {
    "field2": 1.0
  },
  "field2 build": {
    "the": 1.0
  },
  "index clarion": {
    "language": 1.0
  },
  "guide 50": {
    "in": 1.0
  },
  "50 in": {
    "this": 1.0
  },
  "on sam": {
    "field1": 0.5,
    "field2": 0.5
  },
  "field1 will": {
    "always": 1.0
  },
  "will always": {
    "be": 0.5,
    "evaluate": 0.5
  },
  "always be": {
    "current": 1.0
  },
  "be current": {
    "the": 1.0
  },
  "current the": {
    "index": 1.0
  },
  "field2 is": {
    "built": 1.0
  },
  "is built": {
    "when": 0.5,
    "at": 0.5
  },
  "built when": {
    "the": 1.0
  },
  "is opened": {
    "and": 1.0
  },
  "opened and": {
    "locked": 1.0
  },
  "and locked": {
    "exclusive": 1.0
  },
  "locked exclusive": {
    "access": 1.0
  },
  "required the": {
    "dynamic": 1.0
  },
  "built at": {
    "ru": 1.0
  },
  "at ru": {
    "n": 1.0
  },
  "ru n": {
    "time": 1.0
  },
  "n time": {
    "in": 1.0
  },
  "in descending": {
    "sam": 0.5,
    "last": 0.5
  },
  "descending sam": {
    "field1": 1.0
  },
  "field1 and": {
    "ascending": 0.3333333333333333,
    "sam": 0.3333333333333333,
    "blanks": 0.3333333333333333
  },
  "and ascending": {
    "sam": 0.5,
    "first": 0.5
  },
  "ascending sam": {
    "field2": 1.0
  },
  "field2 sort": {
    "order": 1.0
  },
  "sort order": {
    "of": 0.75,
    "possible": 0.25
  },
  "course it": {
    "could": 1.0
  },
  "it could": {
    "be": 1.0
  },
  "built in": {
    "any": 1.0
  },
  "any sort": {
    "order": 1.0
  },
  "order possible": {
    "for": 1.0
  },
  "than their": {
    "maintenance": 1.0
  },
  "their maintenance": {
    "key": 1.0
  },
  "maintenance key": {
    "and": 1.0
  },
  "are functionally": {
    "equivalent": 1.0
  },
  "functionally equivalent": {
    "they": 0.5,
    "the": 0.5
  },
  "equivalent they": {
    "share": 1.0
  },
  "file format": {
    "and": 1.0
  },
  "format and": {
    "may": 1.0
  },
  "used interchangeably": {
    "in": 1.0
  },
  "interchangeably in": {
    "all": 1.0
  },
  "all executable": {
    "file": 1.0
  },
  "executable file": {
    "access": 1.0
  },
  "access statements": {
    "which": 1.0
  },
  "statements which": {
    "require": 0.5,
    "perform": 0.5
  },
  "which require": {
    "a": 1.0
  },
  "index parameter": {
    "to": 1.0
  },
  "to simplify": {
    "this": 1.0
  },
  "simplify this": {
    "discussion": 1.0
  },
  "discussion wherever": {
    "the": 1.0
  },
  "wherever the": {
    "phrase": 1.0
  },
  "the phrase": {
    "key": 1.0
  },
  "phrase key": {
    "and": 1.0
  },
  "and or": {
    "index": 1.0
  },
  "index would": {
    "be": 1.0
  },
  "be appropriate": {
    "it": 1.0
  },
  "appropriate it": {
    "is": 1.0
  },
  "is replaced": {
    "with": 1.0
  },
  "replaced with": {
    "the": 1.0
  },
  "the generic": {
    "term": 1.0
  },
  "generic term": {
    "index": 1.0
  },
  "term index": {
    "all": 1.0
  },
  "index all": {
    "reference": 1.0
  },
  "all reference": {
    "s": 1.0
  },
  "reference s": {
    "to": 1.0
  },
  "to index": {
    "apply": 0.3333333333333333,
    "rec": 0.6666666666666666
  },
  "index apply": {
    "equally": 1.0
  },
  "apply equally": {
    "to": 1.0
  },
  "equally to": {
    "both": 1.0
  },
  "to both": {
    "keys": 1.0
  },
  "both keys": {
    "and": 1.0
  },
  "and indexes": {
    "unless": 1.0
  },
  "indexes unless": {
    "otherwise": 1.0
  },
  "unless otherwise": {
    "noted": 1.0
  },
  "otherwise noted": {
    "sequential": 1.0
  },
  "noted sequential": {
    "file": 1.0
  },
  "access there": {
    "are": 0.5,
    "is": 0.5
  },
  "three clarion": {
    "statements": 1.0
  },
  "clarion statements": {
    "which": 1.0
  },
  "which perform": {
    "sequential": 1.0
  },
  "perform sequential": {
    "file": 1.0
  },
  "access set": {
    "next": 1.0
  },
  "set next": {
    "and": 0.6666666666666666,
    "or": 0.3333333333333333
  },
  "next and": {
    "previous": 0.75,
    "set": 0.25
  },
  "and previous": {
    "the": 0.3333333333333333,
    "statements": 0.3333333333333333,
    "would": 0.3333333333333333
  },
  "previous the": {
    "set": 1.0
  },
  "set statement": {
    "initializ": 0.14285714285714285,
    "is": 0.2857142857142857,
    "must": 0.14285714285714285,
    "listed": 0.14285714285714285,
    "sets": 0.14285714285714285,
    "initializes": 0.14285714285714285
  },
  "statement initializ": {
    "es": 1.0
  },
  "initializ es": {
    "the": 1.0
  },
  "es the": {
    "sequential": 1.0
  },
  "the sequential": {
    "processing": 1.0
  },
  "sequential processing": {
    "it": 0.16666666666666666,
    "record": 0.16666666666666666,
    "in": 0.16666666666666666,
    "this": 0.16666666666666666,
    "set": 0.16666666666666666,
    "a": 0.16666666666666666
  },
  "processing it": {
    "does": 1.0
  },
  "not read": {
    "a": 0.5,
    "the": 0.5
  },
  "read a": {
    "record": 1.0
  },
  "record the": {
    "next": 0.25,
    "process": 0.25,
    "user": 0.5
  },
  "previous statements": {
    "read": 1.0
  },
  "statements read": {
    "the": 1.0
  },
  "read the": {
    "records": 0.125,
    "same": 0.25,
    "following": 0.125,
    "prior": 0.125,
    "record": 0.25,
    "held": 0.125
  },
  "ascending next": {
    "or": 1.0
  },
  "next or": {
    "descending": 0.125,
    "previous": 0.625,
    "pre": 0.125,
    "set": 0.125
  },
  "descending previous": {
    "order": 1.0
  },
  "previous order": {
    "within": 1.0
  },
  "order within": {
    "the": 1.0
  },
  "sequence established": {
    "by": 1.0
  },
  "established by": {
    "set": 1.0
  },
  "by set": {
    "the": 1.0
  },
  "the ruling": {
    "element": 1.0
  },
  "ruling element": {
    "in": 1.0
  },
  "element in": {
    "sequential": 1.0
  },
  "in sequential": {
    "file": 1.0
  },
  "processing a": {
    "set": 1.0
  },
  "statement must": {
    "come": 0.5,
    "have": 0.5
  },
  "come before": {
    "next": 1.0
  },
  "before next": {
    "or": 1.0
  },
  "or previous": {
    "to": 0.4,
    "is": 0.2,
    "set": 0.2,
    "statement": 0.2
  },
  "previous to": {
    "initialize": 0.5,
    "begin": 0.5
  },
  "the starting": {
    "point": 1.0
  },
  "point and": {
    "sequence": 1.0
  },
  "and sequence": {
    "in": 1.0
  },
  "records will": {
    "be": 1.0
  },
  "be read": {
    "usually": 0.5,
    "again": 0.5
  },
  "read usually": {
    "the": 1.0
  },
  "last executable": {
    "stat": 1.0
  },
  "executable stat": {
    "ement": 1.0
  },
  "stat ement": {
    "before": 1.0
  },
  "ement before": {
    "the": 1.0
  },
  "the loop": {
    "structure": 0.16666666666666666,
    "as": 0.16666666666666666,
    "next": 0.16666666666666666,
    "53": 0.16666666666666666,
    "will": 0.16666666666666666,
    "in": 0.16666666666666666
  },
  "loop structure": {
    "which": 1.0
  },
  "which sequentially": {
    "processes": 1.0
  },
  "sequentially processes": {
    "the": 1.0
  },
  "processes the": {
    "records": 0.5,
    "service": 0.5
  },
  "previous is": {
    "then": 1.0
  },
  "is then": {
    "the": 1.0
  },
  "loop as": {
    "in": 1.0
  },
  "example file": {
    "definition": 1.0
  },
  "definition set": {
    "sam": 1.0
  },
  "set sam": {
    "field1key": 0.16666666666666666,
    "fieldskey": 0.6666666666666666,
    "field2n": 0.16666666666666666
  },
  "field1key set": {
    "to": 1.0
  },
  "to top": {
    "of": 1.0
  },
  "top of": {
    "file": 1.0
  },
  "in key": {
    "order": 1.0
  },
  "order loop": {
    "loop": 1.0
  },
  "loop loop": {
    "until": 1.0
  },
  "until end": {
    "of": 1.0
  },
  "the sample": {
    "file": 1.0
  },
  "file next": {
    "sample": 1.0
  },
  "next sample": {
    "read": 0.25,
    "one": 0.25,
    "gets": 0.25,
    "if": 0.25
  },
  "sample read": {
    "each": 1.0
  },
  "read each": {
    "record": 1.0
  },
  "in turn": {
    "if": 1.0
  },
  "turn if": {
    "errorcode": 1.0
  },
  "break break": {
    "at": 0.75,
    "from": 0.25
  },
  "break at": {
    "end": 1.0
  },
  "at end": {
    "of": 1.0
  },
  "record processing": {
    "s": 0.2,
    "statements": 0.6,
    "clarion": 0.2
  },
  "processing s": {
    "tatements": 1.0
  },
  "s tatements": {
    "end": 1.0
  },
  "tatements end": {
    "end": 1.0
  },
  "end loop": {
    "there": 0.25,
    "and": 0.75
  },
  "loop there": {
    "are": 1.0
  },
  "are seven": {
    "forms": 1.0
  },
  "seven forms": {
    "of": 1.0
  },
  "statement listed": {
    "in": 1.0
  },
  "listed in": {
    "the": 1.0
  },
  "reference manual": {
    "these": 1.0
  },
  "manual these": {
    "essentially": 1.0
  },
  "these essentially": {
    "break": 1.0
  },
  "essentially break": {
    "down": 1.0
  },
  "break down": {
    "into": 1.0
  },
  "down into": {
    "two": 1.0
  },
  "two categories": {
    "three": 1.0
  },
  "categories three": {
    "starting": 1.0
  },
  "three starting": {
    "points": 1.0
  },
  "starting points": {
    "for": 1.0
  },
  "points for": {
    "physical": 0.5,
    "indexed": 0.5
  },
  "for physical": {
    "record": 1.0
  },
  "order access": {
    "and": 0.5,
    "physical": 0.5
  },
  "and four": {
    "starting": 1.0
  },
  "four starting": {
    "points": 1.0
  },
  "for indexed": {
    "order": 1.0
  },
  "indexed order": {
    "access": 0.3333333333333333,
    "top": 0.3333333333333333,
    "starting": 0.3333333333333333
  },
  "access physical": {
    "order": 1.0
  },
  "order indexed": {
    "order": 1.0
  },
  "order top": {
    "bottom": 1.0
  },
  "top bottom": {
    "of": 1.0
  },
  "bottom of": {
    "file": 0.5,
    "the": 0.5
  },
  "file top": {
    "bottom": 1.0
  },
  "file physical": {
    "record": 1.0
  },
  "number index": {
    "record": 0.5,
    "value": 0.5
  },
  "index value": {
    "index": 0.2,
    "if": 0.1,
    "it": 0.1,
    "set": 0.1,
    "and": 0.2,
    "in": 0.2,
    "physical": 0.1
  },
  "value index": {
    "value": 0.5,
    "va": 0.5
  },
  "index va": {
    "lue": 1.0
  },
  "va lue": {
    "and": 1.0
  },
  "lue and": {
    "physical": 1.0
  },
  "and physical": {
    "record": 1.0
  },
  "number set": {
    "initializes": 1.0
  },
  "set initializes": {
    "the": 1.0
  },
  "initializes the": {
    "sequential": 0.5,
    "order": 0.5
  },
  "processing record": {
    "pointer": 1.0
  },
  "record pointer": {
    "and": 0.16666666666666666,
    "is": 0.3333333333333333,
    "after": 0.16666666666666666,
    "positioned": 0.16666666666666666,
    "for": 0.16666666666666666
  },
  "pointer and": {
    "it": 1.0
  },
  "it employs": {
    "a": 1.0
  },
  "employs a": {
    "type": 1.0
  },
  "of fuzzy": {
    "logic": 1.0
  },
  "fuzzy logic": {
    "when": 0.25,
    "is": 0.25,
    "lies": 0.25,
    "with": 0.25
  },
  "logic when": {
    "you": 1.0
  },
  "you set": {
    "to": 1.0
  },
  "the top": {
    "bottom": 1.0
  },
  "pointer is": {
    "not": 0.5,
    "left": 0.5
  },
  "not actually": {
    "pointing": 1.0
  },
  "actually pointing": {
    "at": 1.0
  },
  "pointing at": {
    "either": 1.0
  },
  "at either": {
    "if": 1.0
  },
  "either if": {
    "you": 1.0
  },
  "you issue": {
    "a": 1.0
  },
  "issue a": {
    "next": 0.5,
    "previous": 0.5
  },
  "a next": {
    "after": 1.0
  },
  "next after": {
    "the": 1.0
  },
  "set you": {
    "read": 0.5,
    "must": 0.5
  },
  "you read": {
    "records": 1.0
  },
  "read records": {
    "forward": 0.25,
    "backwards": 0.25,
    "and": 0.25,
    "the": 0.25
  },
  "records forward": {
    "from": 1.0
  },
  "forward from": {
    "the": 1.0
  },
  "file if": {
    "you": 0.3333333333333333,
    "sam": 0.16666666666666666,
    "the": 0.16666666666666666,
    "error": 0.3333333333333333
  },
  "a previous": {
    "instead": 0.5,
    "page": 0.5
  },
  "previous instead": {
    "you": 1.0
  },
  "instead you": {
    "read": 1.0
  },
  "records backwards": {
    "from": 1.0
  },
  "backwards from": {
    "the": 1.0
  },
  "file once": {
    "you": 1.0
  },
  "once you": {
    "have": 1.0
  },
  "have issued": {
    "the": 1.0
  },
  "issued the": {
    "next": 0.5,
    "second": 0.5
  },
  "to begin": {
    "reading": 0.5,
    "processing": 0.5
  },
  "begin reading": {
    "records": 1.0
  },
  "reading records": {
    "in": 1.0
  },
  "one direction": {
    "you": 1.0
  },
  "direction you": {
    "cannot": 1.0
  },
  "cannot go": {
    "back": 1.0
  },
  "back across": {
    "the": 1.0
  },
  "across the": {
    "top": 0.3333333333333333,
    "network": 0.3333333333333333,
    "n": 0.3333333333333333
  },
  "file without": {
    "another": 1.0
  },
  "without another": {
    "set": 1.0
  },
  "another set": {
    "the": 1.0
  },
  "same fuzzy": {
    "logic": 1.0
  },
  "logic is": {
    "active": 1.0
  },
  "is active": {
    "when": 1.0
  },
  "active when": {
    "you": 1.0
  },
  "value if": {
    "set": 1.0
  },
  "if set": {
    "finds": 1.0
  },
  "set finds": {
    "a": 1.0
  },
  "finds a": {
    "record": 1.0
  },
  "record containing": {
    "an": 1.0
  },
  "containing an": {
    "exact": 1.0
  },
  "an exact": {
    "match": 1.0
  },
  "exact match": {
    "to": 0.75,
    "record": 0.25
  },
  "match to": {
    "that": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "that index": {
    "value": 1.0
  },
  "value it": {
    "points": 1.0
  },
  "it points": {
    "to": 1.0
  },
  "case either": {
    "next": 1.0
  },
  "either next": {
    "or": 1.0
  },
  "or pre": {
    "vious": 1.0
  },
  "pre vious": {
    "would": 1.0
  },
  "vious would": {
    "read": 1.0
  },
  "would read": {
    "the": 1.0
  },
  "same record": {
    "if": 0.125,
    "next": 0.125,
    "at": 0.25,
    "concurrency": 0.125,
    "twice": 0.125,
    "make": 0.125,
    "the": 0.125
  },
  "if however": {
    "there": 1.0
  },
  "however there": {
    "is": 0.3333333333333333,
    "are": 0.6666666666666666
  },
  "no exact": {
    "match": 1.0
  },
  "value set": {
    "points": 1.0
  },
  "set points": {
    "between": 1.0
  },
  "points between": {
    "the": 1.0
  },
  "last record": {
    "in": 1.0
  },
  "in sequence": {
    "containing": 1.0
  },
  "sequence containing": {
    "a": 1.0
  },
  "value less": {
    "than": 1.0
  },
  "less than": {
    "or": 0.3333333333333333,
    "in": 0.3333333333333333,
    "10": 0.3333333333333333
  },
  "than or": {
    "greater": 0.5,
    "less": 0.5
  },
  "or greater": {
    "than": 1.0
  },
  "greater than": {
    "in": 0.3333333333333333,
    "or": 0.3333333333333333,
    "10": 0.3333333333333333
  },
  "than in": {
    "a": 1.0
  },
  "a descending": {
    "index": 1.0
  },
  "descending index": {
    "the": 1.0
  },
  "next record": {
    "in": 1.0
  },
  "in sequen": {
    "ce": 1.0
  },
  "sequen ce": {
    "containing": 1.0
  },
  "ce containing": {
    "a": 1.0
  },
  "value greater": {
    "than": 1.0
  },
  "case next": {
    "and": 1.0
  },
  "previous would": {
    "not": 0.5,
    "read": 0.5
  },
  "record next": {
    "would": 0.5,
    "sample": 0.5
  },
  "next would": {
    "read": 1.0
  },
  "following record": {
    "in": 1.0
  },
  "index sequence": {
    "previous": 0.3333333333333333,
    "51": 0.3333333333333333,
    "as": 0.3333333333333333
  },
  "sequence previous": {
    "would": 1.0
  },
  "the prior": {
    "record": 1.0
  },
  "prior record": {
    "in": 1.0
  },
  "in th": {
    "e": 1.0
  },
  "e index": {
    "sequence": 1.0
  },
  "sequence 51": {
    "data": 1.0
  },
  "51 data": {
    "file": 1.0
  },
  "processing the": {
    "advantage": 1.0
  },
  "this fuzzy": {
    "logic": 1.0
  },
  "logic lies": {
    "in": 1.0
  },
  "in its": {
    "use": 1.0
  },
  "its use": {
    "with": 1.0
  },
  "use with": {
    "a": 1.0
  },
  "component index": {
    "as": 0.5,
    "mus": 0.5
  },
  "index as": {
    "in": 1.0
  },
  "example sample": {
    "file": 1.0
  },
  "sam fieldskey": {
    "key": 0.18181818181818182,
    "sam": 0.18181818181818182,
    "is": 0.09090909090909091,
    "1": 0.2727272727272727,
    "5": 0.09090909090909091,
    "gets": 0.09090909090909091,
    "set": 0.09090909090909091
  },
  "fieldskey key": {
    "sam": 0.5,
    "sequence": 0.5
  },
  "field2 dup": {
    "key": 1.0
  },
  "dup key": {
    "on": 1.0
  },
  "1 and": {
    "field": 0.2,
    "start": 0.8
  },
  "and field": {
    "2": 1.0
  },
  "field 2": {
    "record": 1.0
  },
  "2 record": {
    "re": 1.0
  },
  "record re": {
    "cord": 1.0
  },
  "re cord": {
    "field1": 0.5,
    "a": 0.5
  },
  "cord field1": {
    "long": 1.0
  },
  "none clear": {
    "sam": 1.0
  },
  "clear sam": {
    "record": 1.0
  },
  "sam record": {
    "clear": 0.05555555555555555,
    "pre": 0.1111111111111111,
    "save": 0.2777777777777778,
    "sav": 0.3333333333333333,
    "compare": 0.05555555555555555,
    "over": 0.05555555555555555,
    "declare": 0.05555555555555555,
    "savrecpos": 0.05555555555555555
  },
  "buffer sam": {
    "field1": 1.0
  },
  "field1 10": {
    "initialize": 0.3333333333333333,
    "check": 0.3333333333333333,
    "sam": 0.3333333333333333
  },
  "10 initialize": {
    "first": 1.0
  },
  "initialize first": {
    "key": 1.0
  },
  "first key": {
    "component": 1.0
  },
  "component set": {
    "sam": 1.0
  },
  "fieldskey sam": {
    "fieldskey": 1.0
  },
  "key sequence": {
    "start": 1.0
  },
  "sequence start": {
    "at": 1.0
  },
  "at 10": {
    "blank": 1.0
  },
  "10 blank": {
    "loop": 0.3333333333333333,
    "and": 0.3333333333333333,
    "therefore": 0.3333333333333333
  },
  "blank loop": {
    "process": 1.0
  },
  "loop process": {
    "each": 1.0
  },
  "process each": {
    "record": 1.0
  },
  "sample one": {
    "at": 1.0
  },
  "if sam": {
    "field1": 1.0
  },
  "10 check": {
    "for": 1.0
  },
  "of group": {
    "break": 1.0
  },
  "group break": {
    "if": 1.0
  },
  "break if": {
    "so": 1.0
  },
  "if so": {
    "get": 1.0
  },
  "so get": {
    "out": 1.0
  },
  "of process": {
    "loop": 1.0
  },
  "process loop": {
    "end": 0.4444444444444444,
    "this": 0.1111111111111111,
    "case": 0.3333333333333333,
    "61": 0.1111111111111111
  },
  "loop end": {
    "record": 0.25,
    "loop": 0.75
  },
  "end record": {
    "processing": 1.0
  },
  "end process": {
    "loop": 1.0
  },
  "loop this": {
    "code": 1.0
  },
  "this code": {
    "first": 0.25,
    "with": 0.25,
    "opens": 0.25,
    "will": 0.25
  },
  "code first": {
    "clears": 0.5,
    "saves": 0.5
  },
  "first clears": {
    "the": 1.0
  },
  "clears the": {
    "record": 1.0
  },
  "buffer assigning": {
    "zeroes": 1.0
  },
  "assigning zeroes": {
    "to": 1.0
  },
  "zeroes to": {
    "sam": 1.0
  },
  "to sam": {
    "field1": 0.5,
    "field2": 0.5
  },
  "and sam": {
    "field3": 1.0
  },
  "sam field3": {
    "and": 1.0
  },
  "field3 and": {
    "blanks": 1.0
  },
  "and blanks": {
    "to": 0.5,
    "in": 0.5
  },
  "blanks to": {
    "sam": 1.0
  },
  "field2 the": {
    "first": 1.0
  },
  "component field": {
    "of": 1.0
  },
  "field of": {
    "sam": 0.3333333333333333,
    "okbutton": 0.3333333333333333,
    "a": 0.3333333333333333
  },
  "of sam": {
    "fieldskey": 1.0
  },
  "fieldskey is": {
    "initialized": 1.0
  },
  "is initialized": {
    "to": 1.0
  },
  "initialized to": {
    "the": 1.0
  },
  "that must": {
    "be": 1.0
  },
  "records you": {
    "need": 1.0
  },
  "process the": {
    "set": 0.5,
    "data": 0.5
  },
  "statement sets": {
    "up": 1.0
  },
  "sets up": {
    "sequential": 1.0
  },
  "up sequential": {
    "processing": 1.0
  },
  "processing in": {
    "indexed": 1.0
  },
  "in indexed": {
    "order": 1.0
  },
  "order starting": {
    "at": 1.0
  },
  "starting at": {
    "the": 1.0
  },
  "case a": {
    "value": 1.0
  },
  "value of": {
    "10": 0.25,
    "the": 0.25,
    "a": 0.25,
    "both": 0.25
  },
  "of 10": {
    "in": 1.0
  },
  "10 in": {
    "sam": 1.0
  },
  "in sam": {
    "field1": 0.5,
    "field2": 0.5
  },
  "blanks in": {
    "sam": 1.0
  },
  "field2 sample": {
    "file": 1.0
  },
  "records index": {
    "record": 1.0
  },
  "field1 field2": {
    "field3": 1.0
  },
  "field2 field3": {
    "1": 1.0
  },
  "field3 1": {
    "5": 0.5,
    "3": 0.5
  },
  "1 5": {
    "abc": 0.5,
    "or": 0.25,
    "9": 0.25
  },
  "5 abc": {
    "14": 1.0
  },
  "abc 14": {
    "52": 1.0
  },
  "14 52": {
    "2": 0.16666666666666666,
    "record": 0.08333333333333333,
    "4": 0.16666666666666666,
    "6": 0.08333333333333333,
    "7": 0.16666666666666666,
    "set": 0.08333333333333333,
    "3": 0.08333333333333333,
    "5": 0.08333333333333333,
    "clarion": 0.08333333333333333
  },
  "52 2": {
    "5": 0.5,
    "6": 0.5
  },
  "2 5": {
    "def": 1.0
  },
  "5 def": {
    "14": 0.6666666666666666,
    "is": 0.3333333333333333
  },
  "def 14": {
    "52": 1.0
  },
  "52 record": {
    "pointer": 1.0
  },
  "pointer after": {
    "set": 1.0
  },
  "after set": {
    "3": 1.0
  },
  "set 3": {
    "10": 1.0
  },
  "3 10": {
    "abc": 1.0
  },
  "10 abc": {
    "14": 0.5,
    "is": 0.25,
    "29": 0.25
  },
  "52 4": {
    "10": 0.5,
    "2": 0.5
  },
  "4 10": {
    "ab": 0.5,
    "abc": 0.5
  },
  "10 ab": {
    "c": 1.0
  },
  "ab c": {
    "29": 1.0
  },
  "c 29": {
    "04": 1.0
  },
  "29 04": {
    "5": 0.5,
    "6": 0.5
  },
  "04 5": {
    "10": 1.0
  },
  "5 10": {
    "def": 1.0
  },
  "10 def": {
    "14": 1.0
  },
  "52 6": {
    "15": 1.0
  },
  "6 15": {
    "abc": 1.0
  },
  "15 abc": {
    "14": 1.0
  },
  "52 7": {
    "15": 0.5,
    "1": 0.5
  },
  "7 15": {
    "def": 1.0
  },
  "15 def": {
    "14": 1.0
  },
  "52 set": {
    "leaves": 1.0
  },
  "set leaves": {
    "the": 1.0
  },
  "leaves the": {
    "record": 1.0
  },
  "pointer positioned": {
    "as": 1.0
  },
  "positioned as": {
    "shown": 1.0
  },
  "as shown": {
    "above": 1.0
  },
  "shown above": {
    "bec": 1.0
  },
  "above bec": {
    "ause": 1.0
  },
  "bec ause": {
    "there": 1.0
  },
  "ause there": {
    "is": 1.0
  },
  "match record": {
    "2": 1.0
  },
  "record 2": {
    "s": 1.0
  },
  "2 s": {
    "value": 1.0
  },
  "s value": {
    "5": 0.25,
    "10": 0.25,
    "must": 0.5
  },
  "value 5": {
    "def": 1.0
  },
  "def is": {
    "less": 1.0
  },
  "is less": {
    "than": 1.0
  },
  "than 10": {
    "blank": 1.0
  },
  "blank and": {
    "record": 1.0
  },
  "and record": {
    "3": 1.0
  },
  "record 3": {
    "s": 1.0
  },
  "3 s": {
    "value": 1.0
  },
  "value 10": {
    "abc": 1.0
  },
  "abc is": {
    "greater": 1.0
  },
  "is greater": {
    "than": 1.0
  },
  "blank therefore": {
    "the": 1.0
  },
  "left between": {
    "the": 1.0
  },
  "two the": {
    "first": 1.0
  },
  "first time": {
    "through": 1.0
  },
  "time through": {
    "the": 1.0
  },
  "through the": {
    "loop": 0.2857142857142857,
    "entire": 0.14285714285714285,
    "file": 0.14285714285714285,
    "adoption": 0.14285714285714285,
    "database": 0.14285714285714285,
    "null": 0.14285714285714285
  },
  "loop next": {
    "reads": 0.5,
    "sample": 0.5
  },
  "next reads": {
    "record": 1.0
  },
  "reads record": {
    "number": 0.5,
    "6": 0.5
  },
  "number 3": {
    "the": 1.0
  },
  "3 the": {
    "if": 1.0
  },
  "the if": {
    "st": 1.0
  },
  "if st": {
    "atement": 1.0
  },
  "st atement": {
    "terminates": 1.0
  },
  "atement terminates": {
    "the": 1.0
  },
  "terminates the": {
    "processing": 1.0
  },
  "the processing": {
    "loop": 1.0
  },
  "processing loop": {
    "after": 1.0
  },
  "loop after": {
    "next": 1.0
  },
  "after next": {
    "reads": 1.0
  },
  "record 6": {
    "there": 1.0
  },
  "6 there": {
    "is": 1.0
  },
  "a distinct": {
    "difference": 1.0
  },
  "distinct difference": {
    "between": 1.0
  },
  "number and": {
    "the": 1.0
  },
  "number is": {
    "the": 1.0
  },
  "the relative": {
    "physical": 0.5,
    "record": 0.5
  },
  "relative physical": {
    "position": 1.0
  },
  "physical position": {
    "within": 1.0
  },
  "position within": {
    "the": 1.0
  },
  "as returned": {
    "b": 0.5,
    "by": 0.5
  },
  "returned b": {
    "y": 1.0
  },
  "b y": {
    "the": 0.5,
    "another": 0.5
  },
  "y the": {
    "pointer": 1.0
  },
  "the pointer": {
    "label": 1.0
  },
  "pointer label": {
    "of": 1.0
  },
  "file procedure": {
    "the": 1.0
  },
  "relative record": {
    "position": 1.0
  },
  "record position": {
    "within": 0.16666666666666666,
    "save": 0.3333333333333333,
    "display": 0.3333333333333333,
    "is": 0.16666666666666666
  },
  "sequence as": {
    "returned": 1.0
  },
  "returned by": {
    "the": 1.0
  },
  "index procedure": {
    "in": 1.0
  },
  "in physical": {
    "order": 0.5,
    "record": 0.5
  },
  "same file": {
    "might": 0.25,
    "the": 0.5,
    "this": 0.25
  },
  "file might": {
    "look": 1.0
  },
  "look like": {
    "this": 0.5,
    "update": 0.5
  },
  "this of": {
    "course": 0.5,
    "list": 0.5
  },
  "course the": {
    "physi": 1.0
  },
  "the physi": {
    "cal": 1.0
  },
  "physi cal": {
    "and": 1.0
  },
  "cal and": {
    "index": 1.0
  },
  "record numbers": {
    "are": 1.0
  },
  "numbers are": {
    "not": 0.5,
    "very": 0.5
  },
  "not stored": {
    "in": 1.0
  },
  "file sample": {
    "file": 1.0
  },
  "record index": {
    "record": 1.0
  },
  "1 3": {
    "10": 1.0
  },
  "2 6": {
    "15": 1.0
  },
  "52 3": {
    "5": 1.0
  },
  "3 5": {
    "10": 1.0
  },
  "4 2": {
    "5": 1.0
  },
  "52 5": {
    "4": 1.0
  },
  "5 4": {
    "10": 1.0
  },
  "abc 29": {
    "04": 1.0
  },
  "04 6": {
    "7": 1.0
  },
  "6 7": {
    "15": 1.0
  },
  "7 1": {
    "5": 1.0
  },
  "52 clarion": {
    "language": 1.0
  },
  "guide 52": {
    "the": 1.0
  },
  "52 the": {
    "forms": 1.0
  },
  "the forms": {
    "of": 1.0
  },
  "of set": {
    "that": 0.3333333333333333,
    "allows": 0.3333333333333333,
    "next": 0.3333333333333333
  },
  "set that": {
    "use": 0.5,
    "the": 0.5
  },
  "that use": {
    "record": 1.0
  },
  "use record": {
    "nu": 1.0
  },
  "record nu": {
    "mbers": 1.0
  },
  "nu mbers": {
    "as": 1.0
  },
  "mbers as": {
    "the": 1.0
  },
  "point look": {
    "very": 1.0
  },
  "look very": {
    "similar": 1.0
  },
  "similar therefore": {
    "you": 1.0
  },
  "very clear": {
    "about": 1.0
  },
  "clear about": {
    "which": 1.0
  },
  "about which": {
    "you": 1.0
  },
  "are using": {
    "physical": 1.0
  },
  "using physical": {
    "vs": 1.0
  },
  "physical vs": {
    "index": 1.0
  },
  "vs index": {
    "set": 1.0
  },
  "index set": {
    "sample": 1.0
  },
  "set sample": {
    "1": 1.0
  },
  "sample 1": {
    "physical": 0.2,
    "gets": 0.2,
    "hold": 0.2,
    "arm": 0.2,
    "lock": 0.2
  },
  "1 physical": {
    "order": 0.3333333333333333,
    "rec": 0.6666666666666666
  },
  "order sets": {
    "to": 1.0
  },
  "sets to": {
    "physical": 0.3333333333333333,
    "index": 0.6666666666666666
  },
  "to physical": {
    "rec": 1.0
  },
  "physical rec": {
    "1": 0.3333333333333333,
    "7": 0.3333333333333333,
    "5": 0.16666666666666666,
    "2": 0.16666666666666666
  },
  "rec 1": {
    "index": 0.5,
    "physical": 0.5
  },
  "1 index": {
    "rec": 0.6666666666666666,
    "order": 0.3333333333333333
  },
  "index rec": {
    "3": 0.3333333333333333,
    "1": 0.3333333333333333,
    "4": 0.16666666666666666,
    "6": 0.16666666666666666
  },
  "rec 3": {
    "set": 0.5,
    "get": 0.5
  },
  "3 set": {
    "sam": 1.0
  },
  "fieldskey 1": {
    "index": 0.3333333333333333,
    "gets": 0.6666666666666666
  },
  "index order": {
    "sets": 0.2857142857142857,
    "that": 0.14285714285714285,
    "next": 0.14285714285714285,
    "random": 0.14285714285714285,
    "after": 0.14285714285714285,
    "is": 0.14285714285714285
  },
  "rec 7": {
    "sam": 0.5,
    "the": 0.5
  },
  "7 sam": {
    "field1": 1.0
  },
  "10 sam": {
    "field2": 1.0
  },
  "field2 abc": {
    "set": 0.5,
    "get": 0.5
  },
  "abc set": {
    "sam": 1.0
  },
  "fieldskey 5": {
    "index": 1.0
  },
  "5 index": {
    "order": 1.0
  },
  "rec 4": {
    "physical": 1.0
  },
  "4 physical": {
    "rec": 1.0
  },
  "rec 5": {
    "this": 1.0
  },
  "5 this": {
    "last": 1.0
  },
  "this last": {
    "form": 1.0
  },
  "last form": {
    "of": 1.0
  },
  "set allows": {
    "you": 1.0
  },
  "to set": {
    "to": 0.5,
    "up": 0.5
  },
  "record within": {
    "a": 0.5,
    "those": 0.5
  },
  "a sequence": {
    "of": 1.0
  },
  "sequence of": {
    "records": 1.0
  },
  "records which": {
    "contain": 1.0
  },
  "duplicate index": {
    "field": 0.3333333333333333,
    "entries": 0.3333333333333333,
    "values": 0.3333333333333333
  },
  "index field": {
    "values": 1.0
  },
  "field values": {
    "it": 1.0
  },
  "values it": {
    "searches": 0.5,
    "did": 0.5
  },
  "it searches": {
    "the": 1.0
  },
  "searches the": {
    "duplicate": 1.0
  },
  "the duplicate": {
    "index": 1.0
  },
  "index entries": {
    "for": 1.0
  },
  "entries for": {
    "an": 1.0
  },
  "index entry": {
    "which": 1.0
  },
  "entry which": {
    "points": 1.0
  },
  "number specified": {
    "as": 1.0
  },
  "specified as": {
    "the": 1.0
  },
  "the third": {
    "parameter": 0.5,
    "retrieves": 0.5
  },
  "third parameter": {
    "this": 1.0
  },
  "parameter this": {
    "is": 1.0
  },
  "files where": {
    "there": 1.0
  },
  "where there": {
    "are": 1.0
  },
  "are multiple": {
    "records": 1.0
  },
  "records with": {
    "duplicate": 1.0
  },
  "with duplicate": {
    "index": 1.0
  },
  "index values": {
    "and": 1.0
  },
  "begin processing": {
    "at": 1.0
  },
  "processing at": {
    "one": 1.0
  },
  "at one": {
    "specific": 1.0
  },
  "within those": {
    "duplicates": 1.0
  },
  "those duplicates": {
    "random": 1.0
  },
  "duplicates random": {
    "file": 1.0
  },
  "one clarion": {
    "statement": 1.0
  },
  "clarion statement": {
    "which": 1.0
  },
  "which performs": {
    "random": 1.0
  },
  "performs random": {
    "access": 0.5,
    "record": 0.5
  },
  "to individual": {
    "records": 1.0
  },
  "get statement": {
    "unlike": 0.3333333333333333,
    "they": 0.3333333333333333,
    "performs": 0.3333333333333333
  },
  "unlike set": {
    "get": 1.0
  },
  "set get": {
    "either": 1.0
  },
  "get either": {
    "reads": 1.0
  },
  "either reads": {
    "the": 1.0
  },
  "reads the": {
    "record": 1.0
  },
  "record you": {
    "attempt": 1.0
  },
  "you attempt": {
    "to": 1.0
  },
  "attempt to": {
    "retrieve": 0.5,
    "lock": 0.5
  },
  "to retrieve": {
    "or": 0.2,
    "a": 0.2,
    "records": 0.2,
    "the": 0.4
  },
  "retrieve or": {
    "returns": 1.0
  },
  "or returns": {
    "an": 1.0
  },
  "returns an": {
    "error": 1.0
  },
  "an error": {
    "there": 0.2,
    "if": 0.2,
    "on": 0.2,
    "condition": 0.2,
    "occurs": 0.2
  },
  "error there": {
    "is": 1.0
  },
  "no fuzzy": {
    "logic": 1.0
  },
  "logic with": {
    "get": 1.0
  },
  "with get": {
    "there": 1.0
  },
  "get there": {
    "are": 1.0
  },
  "three forms": {
    "of": 1.0
  },
  "statement they": {
    "allow": 1.0
  },
  "record based": {
    "on": 1.0
  },
  "on an": {
    "index": 0.5,
    "enterprise": 0.5
  },
  "value physical": {
    "record": 1.0
  },
  "number or": {
    "index": 1.0
  },
  "number sam": {
    "field1": 1.0
  },
  "field1 15": {
    "sam": 1.0
  },
  "15 sam": {
    "field2": 1.0
  },
  "abc get": {
    "sample": 1.0
  },
  "get sample": {
    "sam": 0.5,
    "1": 0.5
  },
  "sample sam": {
    "fieldskey": 1.0
  },
  "fieldskey gets": {
    "index": 1.0
  },
  "gets index": {
    "rec": 1.0
  },
  "rec 6": {
    "physical": 1.0
  },
  "6 physical": {
    "rec": 1.0
  },
  "rec 2": {
    "get": 1.0
  },
  "2 get": {
    "sample": 0.25,
    "saveque": 0.25,
    "this": 0.5
  },
  "1 gets": {
    "physical": 0.3333333333333333,
    "index": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "gets physical": {
    "rec": 1.0
  },
  "3 get": {
    "sam": 1.0
  },
  "get sam": {
    "fieldskey": 1.0
  },
  "7 the": {
    "first": 1.0
  },
  "first get": {
    "example": 1.0
  },
  "get example": {
    "retrieves": 1.0
  },
  "example retrieves": {
    "the": 1.0
  },
  "retrieves the": {
    "first": 0.75,
    "record": 0.25
  },
  "first record": {
    "in": 0.8333333333333334,
    "every": 0.16666666666666666
  },
  "order that": {
    "contains": 1.0
  },
  "fields at": {
    "the": 1.0
  },
  "get is": {
    "issued": 0.3333333333333333,
    "completely": 0.6666666666666666
  },
  "is issued": {
    "the": 1.0
  },
  "second example": {
    "retrieves": 1.0
  },
  "record num": {
    "ber": 1.0
  },
  "num ber": {
    "order": 1.0
  },
  "ber order": {
    "the": 1.0
  },
  "third retrieves": {
    "the": 1.0
  },
  "in index": {
    "record": 0.2,
    "order": 0.8
  },
  "order get": {
    "always": 1.0
  },
  "get always": {
    "looks": 1.0
  },
  "always looks": {
    "for": 1.0
  },
  "looks for": {
    "an": 1.0
  },
  "and returns": {
    "an": 0.5,
    "it": 0.5
  },
  "error if": {
    "it": 1.0
  },
  "not find": {
    "one": 1.0
  },
  "find one": {
    "therefore": 1.0
  },
  "one therefore": {
    "all": 1.0
  },
  "therefore all": {
    "component": 1.0
  },
  "all component": {
    "fields": 1.0
  },
  "index mus": {
    "t": 1.0
  },
  "mus t": {
    "be": 0.5,
    "not": 0.5
  },
  "t be": {
    "initialized": 1.0
  },
  "be initialized": {
    "before": 1.0
  },
  "initialized before": {
    "issuing": 1.0
  },
  "before issuing": {
    "a": 1.0
  },
  "issuing a": {
    "get": 1.0
  },
  "a get": {
    "get": 0.5,
    "into": 0.5
  },
  "get get": {
    "is": 1.0
  },
  "is completely": {
    "independent": 0.6666666666666666,
    "different": 0.3333333333333333
  },
  "completely independent": {
    "of": 0.6666666666666666,
    "therefore": 0.3333333333333333
  },
  "independent of": {
    "set": 0.5,
    "the": 0.5
  },
  "or set": {
    "previous": 1.0
  },
  "set previous": {
    "sequential": 1.0
  },
  "previous sequential": {
    "processing": 0.5,
    "record": 0.5
  },
  "processing this": {
    "means": 1.0
  },
  "get into": {
    "a": 1.0
  },
  "being sequentially": {
    "processed": 1.0
  },
  "sequentially processed": {
    "does": 1.0
  },
  "processed does": {
    "not": 1.0
  },
  "not change": {
    "the": 1.0
  },
  "pointer for": {
    "sequential": 1.0
  },
  "for sequential": {
    "processing": 1.0
  },
  "processing set": {
    "sam": 1.0
  },
  "fieldskey set": {
    "to": 1.0
  },
  "order next": {
    "sample": 1.0
  },
  "sample gets": {
    "each": 1.0
  },
  "gets each": {
    "sequential": 1.0
  },
  "each sequential": {
    "record": 1.0
  },
  "sequential record": {
    "if": 0.3333333333333333,
    "processing": 0.6666666666666666
  },
  "statements get": {
    "sam": 1.0
  },
  "gets the": {
    "first": 0.5,
    "saved": 0.5
  },
  "access record": {
    "processing": 1.0
  },
  "code processes": {
    "through": 1.0
  },
  "processes through": {
    "the": 1.0
  },
  "entire file": {
    "in": 1.0
  },
  "order after": {
    "each": 1.0
  },
  "after each": {
    "record": 1.0
  },
  "record i": {
    "s": 1.0
  },
  "s processed": {
    "the": 1.0
  },
  "processed the": {
    "first": 1.0
  },
  "is retrieved": {
    "and": 0.6666666666666666,
    "from": 0.3333333333333333
  },
  "retrieved and": {
    "processed": 0.5,
    "release": 0.5
  },
  "and processed": {
    "this": 1.0
  },
  "processed this": {
    "does": 1.0
  },
  "this does": {
    "not": 1.0
  },
  "not affect": {
    "the": 1.0
  },
  "affect the": {
    "sequence": 1.0
  },
  "sequence therefore": {
    "next": 1.0
  },
  "therefore next": {
    "will": 1.0
  },
  "next will": {
    "progress": 1.0
  },
  "will progress": {
    "through": 1.0
  },
  "progress through": {
    "the": 1.0
  },
  "file despite": {
    "the": 1.0
  },
  "get of": {
    "the": 1.0
  },
  "record every": {
    "time": 1.0
  },
  "loop 53": {
    "data": 1.0
  },
  "53 data": {
    "file": 1.0
  },
  "processing summary": {
    "sequential": 1.0
  },
  "summary sequential": {
    "access": 1.0
  },
  "and rando": {
    "m": 1.0
  },
  "rando m": {
    "access": 1.0
  },
  "m access": {
    "are": 1.0
  },
  "access are": {
    "the": 1.0
  },
  "methods used": {
    "to": 1.0
  },
  "retrieve records": {
    "from": 1.0
  },
  "declarations define": {
    "alternate": 1.0
  },
  "define alternate": {
    "sort": 1.0
  },
  "orders of": {
    "the": 0.5,
    "sequence": 0.5
  },
  "declared a": {
    "key": 1.0
  },
  "always ready": {
    "for": 1.0
  },
  "ready for": {
    "use": 1.0
  },
  "use an": {
    "index": 1.0
  },
  "not main": {
    "tained": 1.0
  },
  "main tained": {
    "and": 1.0
  },
  "tained and": {
    "must": 1.0
  },
  "built before": {
    "use": 1.0
  },
  "before use": {
    "a": 1.0
  },
  "index allows": {
    "sort": 1.0
  },
  "allows sort": {
    "orders": 1.0
  },
  "orders to": {
    "be": 1.0
  },
  "defined at": {
    "run": 1.0
  },
  "statement initializes": {
    "the": 1.0
  },
  "and starting": {
    "point": 1.0
  },
  "of sequential": {
    "processing": 1.0
  },
  "set is": {
    "required": 1.0
  },
  "required before": {
    "the": 1.0
  },
  "first next": {
    "or": 1.0
  },
  "previous set": {
    "employs": 1.0
  },
  "set employs": {
    "fuzz": 1.0
  },
  "employs fuzz": {
    "y": 1.0
  },
  "fuzz y": {
    "logic": 1.0
  },
  "y logic": {
    "to": 1.0
  },
  "logic to": {
    "determine": 1.0
  },
  "to determine": {
    "the": 0.6666666666666666,
    "if": 0.3333333333333333
  },
  "determine the": {
    "starting": 0.5,
    "exact": 0.5
  },
  "point it": {
    "either": 1.0
  },
  "it either": {
    "points": 1.0
  },
  "either points": {
    "to": 1.0
  },
  "or between": {
    "records": 1.0
  },
  "between records": {
    "at": 1.0
  },
  "records at": {
    "the": 0.5,
    "once": 0.5
  },
  "the position": {
    "where": 0.5,
    "of": 0.5
  },
  "position where": {
    "it": 1.0
  },
  "it determined": {
    "no": 1.0
  },
  "determined no": {
    "record": 1.0
  },
  "no record": {
    "fit": 1.0
  },
  "record fit": {
    "the": 1.0
  },
  "fit the": {
    "starting": 1.0
  },
  "point parameters": {
    "it": 1.0
  },
  "parameters it": {
    "was": 1.0
  },
  "was given": {
    "physical": 1.0
  },
  "given physical": {
    "and": 1.0
  },
  "physical and": {
    "index": 1.0
  },
  "are very": {
    "different": 1.0
  },
  "very different": {
    "and": 1.0
  },
  "different and": {
    "mus": 1.0
  },
  "and mus": {
    "t": 1.0
  },
  "t not": {
    "be": 1.0
  },
  "be confused": {
    "with": 1.0
  },
  "confused with": {
    "each": 1.0
  },
  "with each": {
    "other": 1.0
  },
  "each other": {
    "the": 1.0
  },
  "other the": {
    "get": 1.0
  },
  "statement performs": {
    "random": 1.0
  },
  "random record": {
    "access": 1.0
  },
  "access within": {
    "a": 1.0
  },
  "file get": {
    "is": 1.0
  },
  "processing clarion": {
    "language": 1.0
  },
  "guide 54": {
    "55": 1.0
  },
  "54 55": {
    "developing": 1.0
  },
  "55 developing": {
    "client": 1.0
  },
  "applications 6": {
    "multi": 1.0
  },
  "considerations multi": {
    "user": 1.0
  },
  "considerations the": {
    "world": 1.0
  },
  "world of": {
    "database": 1.0
  },
  "applications programming": {
    "is": 1.0
  },
  "is rapidly": {
    "heading": 1.0
  },
  "rapidly heading": {
    "towards": 1.0
  },
  "heading towards": {
    "networking": 1.0
  },
  "towards networking": {
    "stand": 1.0
  },
  "networking stand": {
    "alone": 1.0
  },
  "stand alone": {
    "applications": 1.0
  },
  "alone applications": {
    "are": 1.0
  },
  "applications are": {
    "expanding": 0.2,
    "built": 0.4,
    "usually": 0.2,
    "front": 0.2
  },
  "are expanding": {
    "into": 1.0
  },
  "expanding into": {
    "multi": 1.0
  },
  "into multi": {
    "user": 1.0
  },
  "user environments": {
    "as": 0.5,
    "opening": 0.5
  },
  "environments as": {
    "more": 1.0
  },
  "as more": {
    "companie": 1.0
  },
  "more companie": {
    "s": 1.0
  },
  "companie s": {
    "connect": 1.0
  },
  "s connect": {
    "their": 1.0
  },
  "connect their": {
    "pcs": 1.0
  },
  "their pcs": {
    "to": 1.0
  },
  "pcs to": {
    "local": 1.0
  },
  "to local": {
    "area": 1.0
  },
  "local area": {
    "networks": 1.0
  },
  "area networks": {
    "lans": 1.0
  },
  "networks lans": {
    "mainframe": 1.0
  },
  "lans mainframe": {
    "applications": 1.0
  },
  "mainframe applications": {
    "in": 1.0
  },
  "applications in": {
    "large": 0.5,
    "the": 0.5
  },
  "in large": {
    "companies": 1.0
  },
  "large companies": {
    "are": 1.0
  },
  "companies are": {
    "being": 1.0
  },
  "are being": {
    "right": 0.3333333333333333,
    "performed": 0.3333333333333333,
    "updated": 0.3333333333333333
  },
  "being right": {
    "sized": 1.0
  },
  "right sized": {
    "and": 1.0
  },
  "sized and": {
    "re": 1.0
  },
  "for lan": {
    "operation": 1.0
  },
  "lan operation": {
    "with": 1.0
  },
  "operation with": {
    "the": 1.0
  },
  "the emergence": {
    "of": 1.0
  },
  "emergence of": {
    "multi": 1.0
  },
  "of multi": {
    "threading": 1.0
  },
  "multi threading": {
    "multi": 1.0
  },
  "threading multi": {
    "tasking": 1.0
  },
  "multi tasking": {
    "operating": 1.0
  },
  "tasking operating": {
    "systems": 1.0
  },
  "operating systems": {
    "for": 1.0
  },
  "systems for": {
    "pcs": 1.0
  },
  "for pcs": {
    "even": 1.0
  },
  "pcs even": {
    "standalone": 1.0
  },
  "even standalone": {
    "computers": 1.0
  },
  "standalone computers": {
    "need": 1.0
  },
  "computers need": {
    "applications": 1.0
  },
  "need applications": {
    "that": 1.0
  },
  "applications that": {
    "are": 0.25,
    "write": 0.25,
    "logically": 0.25,
    "access": 0.25
  },
  "are written": {
    "with": 1.0
  },
  "written with": {
    "multi": 1.0
  },
  "with multi": {
    "user": 1.0
  },
  "user shared": {
    "access": 1.0
  },
  "shared access": {
    "considerations": 0.5,
    "the": 0.5
  },
  "access considerations": {
    "in": 1.0
  },
  "considerations in": {
    "mind": 1.0
  },
  "in mind": {
    "this": 0.5,
    "about": 0.5
  },
  "mind this": {
    "essay": 1.0
  },
  "tools provided": {
    "to": 1.0
  },
  "provided to": {
    "write": 1.0
  },
  "write applications": {
    "specifically": 0.5,
    "that": 0.5
  },
  "applications specifically": {
    "designed": 1.0
  },
  "specifically designed": {
    "for": 1.0
  },
  "designed for": {
    "use": 1.0
  },
  "in multi": {
    "user": 1.0
  },
  "environments opening": {
    "files": 1.0
  },
  "any data": {
    "file": 0.5,
    "validation": 0.5
  },
  "file can": {
    "be": 1.0
  },
  "be processed": {
    "it": 0.5,
    "on": 0.5
  },
  "processed it": {
    "must": 1.0
  },
  "it must": {
    "first": 1.0
  },
  "must first": {
    "be": 1.0
  },
  "first be": {
    "opened": 1.0
  },
  "be opened": {
    "the": 0.5,
    "before": 0.5
  },
  "opened the": {
    "open": 1.0
  },
  "the open": {
    "and": 0.5,
    "statement": 0.5
  },
  "open and": {
    "share": 1.0
  },
  "and share": {
    "statements": 0.5,
    "are": 0.5
  },
  "share statements": {
    "provide": 1.0
  },
  "statements provide": {
    "this": 1.0
  },
  "provide this": {
    "function": 1.0
  },
  "this function": {
    "open": 1.0
  },
  "function open": {
    "and": 1.0
  },
  "share are": {
    "functionally": 1.0
  },
  "equivalent the": {
    "only": 0.5,
    "clarion": 0.5
  },
  "only difference": {
    "between": 1.0
  },
  "two is": {
    "the": 1.0
  },
  "the default": {
    "value": 1.0
  },
  "default value": {
    "of": 1.0
  },
  "second access": {
    "mode": 1.0
  },
  "mode parameter": {
    "of": 1.0
  },
  "parameter of": {
    "each": 1.0
  },
  "of each": {
    "the": 1.0
  },
  "each the": {
    "access": 1.0
  },
  "the access": {
    "mode": 1.0
  },
  "mode specifies": {
    "the": 1.0
  },
  "of access": {
    "the": 0.3333333333333333,
    "allowed": 0.3333333333333333,
    "dos": 0.3333333333333333
  },
  "user opening": {
    "the": 1.0
  },
  "opening the": {
    "file": 1.0
  },
  "file receives": {
    "and": 1.0
  },
  "receives and": {
    "the": 1.0
  },
  "access allowed": {
    "to": 1.0
  },
  "allowed to": {
    "other": 0.3333333333333333,
    "make": 0.3333333333333333,
    "try": 0.3333333333333333
  },
  "to other": {
    "users": 0.5,
    "fields": 0.5
  },
  "other users": {
    "of": 0.08333333333333333,
    "from": 0.3333333333333333,
    "to": 0.16666666666666666,
    "are": 0.16666666666666666,
    "access": 0.08333333333333333,
    "locks": 0.08333333333333333,
    "multi": 0.08333333333333333
  },
  "users of": {
    "the": 1.0
  },
  "two values": {
    "are": 1.0
  },
  "values are": {
    "added": 0.25,
    "access": 0.25,
    "not": 0.25,
    "valid": 0.25
  },
  "added together": {
    "to": 1.0
  },
  "together to": {
    "create": 1.0
  },
  "dos access": {
    "code": 1.0
  },
  "access code": {
    "for": 1.0
  },
  "mode values": {
    "are": 1.0
  },
  "are access": {
    "dec": 1.0
  },
  "access dec": {
    "hex": 1.0
  },
  "dec hex": {
    "user": 1.0
  },
  "hex user": {
    "s": 1.0
  },
  "user s": {
    "access": 0.058823529411764705,
    "changes": 0.8235294117647058,
    "use": 0.058823529411764705,
    "request": 0.058823529411764705
  },
  "s access": {
    "read": 0.5,
    "deny": 0.5
  },
  "access read": {
    "only": 1.0
  },
  "read only": {
    "0": 0.25,
    "deny": 0.75
  },
  "only 0": {
    "0h": 1.0
  },
  "0 0h": {
    "write": 1.0
  },
  "0h write": {
    "only": 1.0
  },
  "write only": {
    "1": 1.0
  },
  "only 1": {
    "1h": 1.0
  },
  "1 1h": {
    "read": 1.0
  },
  "1h read": {
    "write": 1.0
  },
  "write 2": {
    "2h": 1.0
  },
  "2 2h": {
    "other": 1.0
  },
  "2h other": {
    "s": 1.0
  },
  "other s": {
    "access": 0.2,
    "changes": 0.8
  },
  "access deny": {
    "all": 1.0
  },
  "deny all": {
    "16": 1.0
  },
  "all 16": {
    "10h": 1.0
  },
  "16 10h": {
    "deny": 1.0
  },
  "10h deny": {
    "write": 1.0
  },
  "deny write": {
    "32": 0.2,
    "22h": 0.2,
    "open": 0.2,
    "share": 0.4
  },
  "write 32": {
    "20h": 1.0
  },
  "32 20h": {
    "deny": 1.0
  },
  "20h deny": {
    "read": 1.0
  },
  "deny read": {
    "48": 1.0
  },
  "read 48": {
    "30h": 1.0
  },
  "48 30h": {
    "deny": 1.0
  },
  "30h deny": {
    "none": 1.0
  },
  "none 64": {
    "40h": 1.0
  },
  "64 40h": {
    "the": 1.0
  },
  "40h the": {
    "open": 1.0
  },
  "statement s": {
    "default": 1.0
  },
  "s default": {
    "access": 1.0
  },
  "default access": {
    "mode": 1.0
  },
  "mode is": {
    "read": 1.0
  },
  "is read": {
    "write": 1.0
  },
  "write 22h": {
    "which": 1.0
  },
  "22h which": {
    "only": 1.0
  },
  "which only": {
    "allows": 1.0
  },
  "allows exclusive": {
    "single": 1.0
  },
  "exclusive single": {
    "user": 1.0
  },
  "single user": {
    "disk": 1.0
  },
  "user disk": {
    "write": 1.0
  },
  "disk write": {
    "access": 0.16666666666666666,
    "add": 0.6666666666666666,
    "this": 0.16666666666666666
  },
  "write access": {
    "to": 1.0
  },
  "the share": {
    "statement": 1.0
  },
  "share statement": {
    "s": 1.0
  },
  "none 42h": {
    "allowing": 0.5,
    "which": 0.5
  },
  "42h allowing": {
    "non": 1.0
  },
  "allowing non": {
    "exclusive": 1.0
  },
  "non exclusive": {
    "multi": 1.0
  },
  "exclusive multi": {
    "user": 1.0
  },
  "user access": {
    "to": 1.0
  },
  "to anybody": {
    "who": 1.0
  },
  "anybody who": {
    "opens": 1.0
  },
  "who opens": {
    "the": 1.0
  },
  "opens the": {
    "file": 1.0
  },
  "file either": {
    "open": 1.0
  },
  "either open": {
    "or": 1.0
  },
  "open or": {
    "share": 1.0
  },
  "or share": {
    "may": 1.0
  },
  "share may": {
    "open": 1.0
  },
  "may open": {
    "the": 1.0
  },
  "open the": {
    "file": 1.0
  },
  "the possib": {
    "le": 1.0
  },
  "possib le": {
    "access": 1.0
  },
  "le access": {
    "modes": 1.0
  },
  "access modes": {
    "open": 0.5,
    "for": 0.5
  },
  "modes open": {
    "file": 1.0
  },
  "open file": {
    "open": 0.25,
    "22h": 0.25,
    "42h": 0.25,
    "40h": 0.25
  },
  "write open": {
    "file": 1.0
  },
  "file 22h": {
    "open": 1.0
  },
  "22h open": {
    "read": 1.0
  },
  "write share": {
    "file": 1.0
  },
  "share file": {
    "22h": 0.25,
    "open": 0.25,
    "42h": 0.25,
    "40h": 0.25
  },
  "none share": {
    "file": 1.0
  },
  "file 42h": {
    "op": 0.5,
    "open": 0.5
  },
  "42h op": {
    "en": 1.0
  },
  "op en": {
    "read": 1.0
  },
  "en read": {
    "write": 1.0
  },
  "none open": {
    "file": 1.0
  },
  "file 40h": {
    "open": 1.0
  },
  "40h open": {
    "read": 1.0
  },
  "only deny": {
    "none": 1.0
  },
  "none these": {
    "examples": 1.0
  },
  "these examples": {
    "demonstrate": 0.5,
    "return": 0.5
  },
  "examples demonstrate": {
    "the": 1.0
  },
  "demonstrate the": {
    "three": 0.5,
    "preferred": 0.5
  },
  "commonly used": {
    "access": 0.2,
    "the": 0.4,
    "in": 0.2,
    "to": 0.2
  },
  "used access": {
    "modes": 1.0
  },
  "modes for": {
    "mult": 1.0
  },
  "for mult": {
    "i": 1.0
  },
  "mult i": {
    "user": 1.0
  },
  "i user": {
    "applications": 1.0
  },
  "user applications": {
    "the": 1.0
  },
  "applications the": {
    "most": 0.3333333333333333,
    "fact": 0.3333333333333333,
    "only": 0.3333333333333333
  },
  "common access": {
    "mode": 1.0
  },
  "42h which": {
    "permits": 1.0
  },
  "which permits": {
    "all": 1.0
  },
  "permits all": {
    "users": 1.0
  },
  "all users": {
    "complete": 0.5,
    "are": 0.5
  },
  "users complete": {
    "access": 1.0
  },
  "complete access": {
    "to": 1.0
  },
  "file read": {
    "only": 1.0
  },
  "none 40h": {
    "is": 1.0
  },
  "40h is": {
    "usually": 1.0
  },
  "usually used": {
    "in": 0.5,
    "by": 0.5
  },
  "user situations": {
    "where": 1.0
  },
  "user will": {
    "not": 1.0
  },
  "will not": {
    "update": 0.25,
    "be": 0.25,
    "generate": 0.25,
    "address": 0.25
  },
  "not update": {
    "the": 1.0
  },
  "update the": {
    "file": 0.3333333333333333,
    "database": 0.6666666666666666
  },
  "a lookup": {
    "only": 1.0
  },
  "lookup only": {
    "f": 1.0
  },
  "only f": {
    "ile": 1.0
  },
  "f ile": {
    "but": 1.0
  },
  "ile but": {
    "there": 1.0
  },
  "but there": {
    "may": 1.0
  },
  "be some": {
    "other": 1.0
  },
  "other user": {
    "who": 0.1,
    "assume": 0.1,
    "s": 0.4,
    "attempting": 0.1,
    "makes": 0.1,
    "a": 0.1,
    "can": 0.1
  },
  "user who": {
    "may": 1.0
  },
  "who may": {
    "need": 1.0
  },
  "write to": {
    "that": 0.5,
    "it": 0.25,
    "a": 0.25
  },
  "guide 56": {
    "concurrency": 1.0
  },
  "56 concurrency": {
    "checking": 1.0
  },
  "checking the": {
    "biggest": 1.0
  },
  "biggest consideration": {
    "to": 1.0
  },
  "consideration to": {
    "keep": 1.0
  },
  "keep in": {
    "mind": 1.0
  },
  "mind about": {
    "multi": 1.0
  },
  "about multi": {
    "user": 1.0
  },
  "to files": {
    "is": 1.0
  },
  "files is": {
    "the": 1.0
  },
  "the possibility": {
    "that": 0.25,
    "a": 0.25,
    "of": 0.5
  },
  "possibility that": {
    "several": 1.0
  },
  "that several": {
    "users": 1.0
  },
  "several users": {
    "could": 1.0
  },
  "users could": {
    "be": 1.0
  },
  "be updating": {
    "the": 1.0
  },
  "updating the": {
    "same": 0.5,
    "data": 0.5
  },
  "record at": {
    "the": 0.5,
    "a": 0.5
  },
  "a process": {
    "known": 1.0
  },
  "process known": {
    "as": 1.0
  },
  "as concurrency": {
    "checking": 1.0
  },
  "checking prevents": {
    "the": 1.0
  },
  "prevents the": {
    "data": 1.0
  },
  "file from": {
    "being": 1.0
  },
  "from being": {
    "corrupted": 1.0
  },
  "being corrupted": {
    "by": 1.0
  },
  "corrupted by": {
    "multiple": 1.0
  },
  "multiple user": {
    "updates": 1.0
  },
  "user updates": {
    "to": 0.5,
    "don": 0.5
  },
  "updates to": {
    "the": 1.0
  },
  "record concurrency": {
    "checking": 1.0
  },
  "checking means": {
    "determining": 1.0
  },
  "means determining": {
    "that": 1.0
  },
  "determining that": {
    "the": 1.0
  },
  "record on": {
    "disk": 0.5,
    "screen": 0.5
  },
  "on disk": {
    "which": 0.5,
    "is": 0.5
  },
  "disk which": {
    "is": 1.0
  },
  "is about": {
    "to": 1.0
  },
  "be overwr": {
    "itten": 1.0
  },
  "overwr itten": {
    "still": 1.0
  },
  "itten still": {
    "contains": 1.0
  },
  "still contains": {
    "the": 1.0
  },
  "same values": {
    "it": 1.0
  },
  "it did": {
    "when": 1.0
  },
  "did when": {
    "it": 1.0
  },
  "was retrieved": {
    "for": 1.0
  },
  "retrieved for": {
    "update": 1.0
  },
  "update obviously": {
    "there": 1.0
  },
  "obviously there": {
    "is": 1.0
  },
  "of concurrency": {
    "checking": 1.0
  },
  "checking when": {
    "a": 1.0
  },
  "being added": {
    "if": 1.0
  },
  "added if": {
    "the": 1.0
  },
  "key two": {
    "users": 1.0
  },
  "two users": {
    "adding": 0.5,
    "attempt": 0.5
  },
  "users adding": {
    "the": 1.0
  },
  "adding the": {
    "same": 0.3333333333333333,
    "record": 0.3333333333333333,
    "inner": 0.3333333333333333
  },
  "record twice": {
    "is": 1.0
  },
  "twice is": {
    "impossible": 1.0
  },
  "is impossible": {
    "because": 1.0
  },
  "impossible because": {
    "the": 1.0
  },
  "second add": {
    "returns": 1.0
  },
  "add returns": {
    "a": 1.0
  },
  "returns a": {
    "creates": 0.5,
    "ushort": 0.5
  },
  "a creates": {
    "duplicate": 1.0
  },
  "creates duplicate": {
    "key": 1.0
  },
  "duplicate key": {
    "error": 1.0
  },
  "key error": {
    "without": 1.0
  },
  "error without": {
    "adding": 1.0
  },
  "without adding": {
    "the": 1.0
  },
  "if duplicate": {
    "keys": 1.0
  },
  "duplicate keys": {
    "are": 1.0
  },
  "allowed there": {
    "is": 1.0
  },
  "no generic": {
    "way": 1.0
  },
  "generic way": {
    "for": 1.0
  },
  "to check": {
    "for": 1.0
  },
  "for inadvertent": {
    "incorrect": 1.0
  },
  "inadvertent incorrect": {
    "duplicates": 1.0
  },
  "incorrect duplicates": {
    "as": 1.0
  },
  "duplicates as": {
    "opposed": 1.0
  },
  "as opposed": {
    "to": 1.0
  },
  "opposed to": {
    "deliberate": 1.0
  },
  "to deliberate": {
    "correct": 1.0
  },
  "deliberate correct": {
    "duplic": 1.0
  },
  "correct duplic": {
    "ate": 1.0
  },
  "duplic ate": {
    "records": 1.0
  },
  "ate records": {
    "there": 1.0
  },
  "records there": {
    "is": 1.0
  },
  "also no": {
    "need": 1.0
  },
  "for concurrency": {
    "checking": 1.0
  },
  "being deleted": {
    "once": 1.0
  },
  "deleted once": {
    "the": 1.0
  },
  "once the": {
    "first": 0.5,
    "build": 0.5
  },
  "first user": {
    "has": 0.2,
    "to": 0.4,
    "simply": 0.2,
    "needs": 0.2
  },
  "user has": {
    "deleted": 0.3333333333333333,
    "page": 0.3333333333333333,
    "never": 0.3333333333333333
  },
  "has deleted": {
    "the": 0.5,
    "it": 0.5
  },
  "record it": {
    "is": 1.0
  },
  "is gone": {
    "any": 1.0
  },
  "gone any": {
    "subsequent": 1.0
  },
  "any subsequent": {
    "user": 1.0
  },
  "subsequent user": {
    "that": 1.0
  },
  "user that": {
    "attempts": 1.0
  },
  "that attempts": {
    "to": 1.0
  },
  "delete that": {
    "record": 1.0
  },
  "that record": {
    "will": 0.2,
    "and": 0.2,
    "in": 0.2,
    "that": 0.2,
    "or": 0.2
  },
  "record will": {
    "not": 1.0
  },
  "first place": {
    "concu": 1.0
  },
  "place concu": {
    "rrency": 1.0
  },
  "concu rrency": {
    "checking": 1.0
  },
  "rrency checking": {
    "is": 1.0
  },
  "checking is": {
    "necessary": 0.5,
    "done": 0.5
  },
  "necessary when": {
    "a": 1.0
  },
  "a user": {
    "is": 0.5,
    "b": 0.5
  },
  "user is": {
    "making": 0.14285714285714285,
    "allowed": 0.14285714285714285,
    "changing": 0.14285714285714285,
    "alerted": 0.42857142857142855,
    "still": 0.14285714285714285
  },
  "is making": {
    "a": 1.0
  },
  "making a": {
    "change": 1.0
  },
  "the process": {
    "of": 1.0
  },
  "process of": {
    "changing": 1.0
  },
  "of changing": {
    "a": 1.0
  },
  "changing a": {
    "record": 1.0
  },
  "is get": {
    "the": 1.0
  },
  "get the": {
    "record": 0.8,
    "same": 0.2
  },
  "record make": {
    "the": 0.5,
    "some": 0.5
  },
  "the changes": {
    "and": 0.16666666666666666,
    "back": 0.16666666666666666,
    "to": 0.5,
    "if": 0.16666666666666666
  },
  "changes and": {
    "write": 0.5,
    "is": 0.5
  },
  "write the": {
    "changes": 0.2857142857142857,
    "changed": 0.14285714285714285,
    "record": 0.2857142857142857,
    "data": 0.2857142857142857
  },
  "changes back": {
    "to": 0.5,
    "in": 0.5
  },
  "is during": {
    "the": 1.0
  },
  "during the": {
    "time": 0.5,
    "concurrency": 0.5
  },
  "time it": {
    "takes": 1.0
  },
  "takes the": {
    "first": 0.5,
    "ultimate": 0.5
  },
  "user to": {
    "make": 0.14285714285714285,
    "write": 0.14285714285714285,
    "select": 0.14285714285714285,
    "hold": 0.2857142857142857,
    "lock": 0.14285714285714285,
    "browse": 0.14285714285714285
  },
  "to make": {
    "changes": 0.16666666666666666,
    "the": 0.3333333333333333,
    "sure": 0.16666666666666666,
    "it": 0.16666666666666666,
    "full": 0.16666666666666666
  },
  "make changes": {
    "to": 1.0
  },
  "changes to": {
    "the": 0.2727272727272727,
    "disk": 0.36363636363636365,
    "be": 0.09090909090909091,
    "a": 0.18181818181818182,
    "those": 0.09090909090909091
  },
  "second user": {
    "a": 0.5,
    "s": 0.5
  },
  "user a": {
    "faster": 0.2,
    "locks": 0.2,
    "attempts": 0.2,
    "has": 0.2,
    "chance": 0.2
  },
  "a faster": {
    "typist": 1.0
  },
  "faster typist": {
    "could": 1.0
  },
  "typist could": {
    "get": 1.0
  },
  "could get": {
    "the": 1.0
  },
  "make some": {
    "change": 1.0
  },
  "some change": {
    "and": 1.0
  },
  "change and": {
    "write": 0.5,
    "cascade": 0.5
  },
  "the changed": {
    "record": 1.0
  },
  "changed record": {
    "back": 0.6666666666666666,
    "is": 0.3333333333333333
  },
  "to disk": {
    "when": 0.14285714285714285,
    "the": 0.14285714285714285,
    "and": 0.14285714285714285,
    "if": 0.2857142857142857,
    "clarion": 0.14285714285714285,
    "using": 0.14285714285714285
  },
  "disk when": {
    "the": 1.0
  },
  "time comes": {
    "for": 1.0
  },
  "comes for": {
    "the": 1.0
  },
  "write his": {
    "her": 1.0
  },
  "his her": {
    "changes": 1.0
  },
  "her changes": {
    "to": 1.0
  },
  "disk the": {
    "record": 1.0
  },
  "disk is": {
    "no": 1.0
  },
  "no longer": {
    "the": 1.0
  },
  "longer the": {
    "same": 1.0
  },
  "as whe": {
    "n": 1.0
  },
  "whe n": {
    "it": 1.0
  },
  "n it": {
    "was": 1.0
  },
  "was first": {
    "retrieved": 1.0
  },
  "first retrieved": {
    "does": 1.0
  },
  "retrieved does": {
    "the": 1.0
  },
  "user simply": {
    "overwrite": 1.0
  },
  "simply overwrite": {
    "the": 1.0
  },
  "overwrite the": {
    "second": 1.0
  },
  "second faster": {
    "user": 1.0
  },
  "faster user": {
    "s": 1.0
  },
  "s changes": {
    "if": 0.05555555555555555,
    "cannot": 0.05555555555555555,
    "to": 0.2222222222222222,
    "sam": 0.1111111111111111,
    "sav": 0.05555555555555555,
    "beep": 0.16666666666666666,
    "is": 0.05555555555555555,
    "the": 0.05555555555555555,
    "are": 0.05555555555555555,
    "because": 0.05555555555555555,
    "would": 0.05555555555555555,
    "while": 0.05555555555555555
  },
  "changes if": {
    "both": 0.5,
    "necessary": 0.5
  },
  "if both": {
    "users": 0.3333333333333333,
    "fields": 0.6666666666666666
  },
  "both users": {
    "are": 0.5,
    "hung": 0.5
  },
  "users are": {
    "changing": 0.2,
    "completely": 0.2,
    "gone": 0.2,
    "denied": 0.2,
    "not": 0.2
  },
  "are changing": {
    "different": 1.0
  },
  "changing different": {
    "data": 1.0
  },
  "different data": {
    "elements": 1.0
  },
  "data elements": {
    "within": 1.0
  },
  "elements within": {
    "that": 1.0
  },
  "and both": {
    "changes": 1.0
  },
  "both changes": {
    "are": 1.0
  },
  "changes are": {
    "valid": 0.25,
    "made": 0.5,
    "retrieved": 0.25
  },
  "valid overwriting": {
    "the": 1.0
  },
  "overwriting the": {
    "second": 1.0
  },
  "changes cannot": {
    "be": 1.0
  },
  "be allowed": {
    "e": 1.0
  },
  "allowed e": {
    "ven": 1.0
  },
  "e ven": {
    "if": 1.0
  },
  "ven if": {
    "they": 1.0
  },
  "are both": {
    "making": 1.0
  },
  "both making": {
    "the": 1.0
  },
  "same change": {
    "the": 1.0
  },
  "user needs": {
    "to": 1.0
  },
  "that someone": {
    "else": 1.0
  },
  "someone else": {
    "has": 0.375,
    "delete": 0.375,
    "got": 0.25
  },
  "else has": {
    "already": 0.25,
    "deleted": 0.25,
    "a": 0.25,
    "it": 0.25
  },
  "has already": {
    "made": 1.0
  },
  "already made": {
    "that": 1.0
  },
  "made that": {
    "change": 1.0
  },
  "that change": {
    "the": 1.0
  },
  "the simplest": {
    "concurrency": 0.6666666666666666,
    "type": 0.3333333333333333
  },
  "simplest concurrency": {
    "checking": 1.0
  },
  "checking method": {
    "is": 0.5,
    "without": 0.5
  },
  "the watch": {
    "statement": 1.0
  },
  "watch statement": {
    "just": 1.0
  },
  "statement just": {
    "before": 1.0
  },
  "just before": {
    "getting": 0.5,
    "writing": 0.5
  },
  "before getting": {
    "the": 1.0
  },
  "getting the": {
    "record": 1.0
  },
  "record from": {
    "disk": 0.08333333333333333,
    "the": 0.5833333333333334,
    "queue": 0.08333333333333333,
    "file": 0.25
  },
  "from disk": {
    "this": 0.5,
    "and": 0.5
  },
  "disk this": {
    "tells": 1.0
  },
  "this tells": {
    "the": 1.0
  },
  "the fi": {
    "le": 1.0
  },
  "fi le": {
    "driver": 1.0
  },
  "le driver": {
    "to": 1.0
  },
  "driver to": {
    "automatically": 0.3333333333333333,
    "set": 0.3333333333333333,
    "consider": 0.3333333333333333
  },
  "to automatically": {
    "perform": 1.0
  },
  "automatically perform": {
    "concurrency": 1.0
  },
  "perform concurrency": {
    "checking": 1.0
  },
  "checking and": {
    "report": 0.5,
    "the": 0.5
  },
  "and report": {
    "an": 1.0
  },
  "report an": {
    "error": 1.0
  },
  "error on": {
    "the": 1.0
  },
  "the put": {
    "statement": 0.5,
    "that": 0.5
  },
  "put statement": {
    "if": 1.0
  },
  "statement if": {
    "there": 1.0
  },
  "a conflict": {
    "unfortunately": 1.0
  },
  "conflict unfortunately": {
    "not": 1.0
  },
  "unfortunately not": {
    "all": 1.0
  },
  "not all": {
    "file": 1.0
  },
  "all file": {
    "drivers": 1.0
  },
  "file drivers": {
    "support": 0.25,
    "can": 0.25,
    "are": 0.25,
    "whic": 0.25
  },
  "drivers support": {
    "this": 1.0
  },
  "support this": {
    "for": 1.0
  },
  "this for": {
    "the": 1.0
  },
  "method without": {
    "using": 1.0
  },
  "without using": {
    "watch": 1.0
  },
  "using watch": {
    "your": 0.5,
    "it": 0.5
  },
  "watch your": {
    "program": 1.0
  },
  "code s": {
    "hould": 1.0
  },
  "s hould": {
    "1": 1.0
  },
  "hould 1": {
    "save": 1.0
  },
  "1 save": {
    "a": 1.0
  },
  "save a": {
    "copy": 1.0
  },
  "a copy": {
    "of": 0.5,
    "saverecord": 0.5
  },
  "record before": {
    "any": 0.5,
    "changes": 0.5
  },
  "any changes": {
    "are": 1.0
  },
  "are made": {
    "2": 0.5,
    "then": 0.5
  },
  "made 2": {
    "re": 1.0
  },
  "2 re": {
    "read": 1.0
  },
  "re read": {
    "the": 0.5,
    "from": 0.5
  },
  "record immediately": {
    "before": 1.0
  },
  "before writing": {
    "the": 1.0
  },
  "disk and": {
    "compare": 0.5,
    "the": 0.5
  },
  "and compare": {
    "it": 1.0
  },
  "compare it": {
    "with": 1.0
  },
  "it with": {
    "the": 1.0
  },
  "the saved": {
    "original": 0.6666666666666666,
    "record": 0.3333333333333333
  },
  "saved original": {
    "3": 0.5,
    "record": 0.5
  },
  "original 3": {
    "if": 1.0
  },
  "3 if": {
    "the": 1.0
  },
  "two are": {
    "the": 1.0
  },
  "same allow": {
    "the": 1.0
  },
  "be written": {
    "to": 0.6666666666666666,
    "such": 0.3333333333333333
  },
  "written to": {
    "disk": 0.5,
    "handle": 0.5
  },
  "disk if": {
    "not": 0.5,
    "someone": 0.5
  },
  "not alert": {
    "the": 1.0
  },
  "alert the": {
    "user": 1.0
  },
  "user and": {
    "display": 1.0
  },
  "and display": {
    "the": 1.0
  },
  "display the": {
    "record": 0.75,
    "reco": 0.25
  },
  "record as": {
    "changed": 0.5,
    "an": 0.5
  },
  "as changed": {
    "by": 1.0
  },
  "changed by": {
    "the": 0.3333333333333333,
    "another": 0.6666666666666666
  },
  "user assume": {
    "the": 1.0
  },
  "assume the": {
    "following": 1.0
  },
  "following global": {
    "declarations": 1.0
  },
  "global declarations": {
    "and": 1.0
  },
  "and compiler": {
    "equates": 1.0
  },
  "compiler equates": {
    "sample": 1.0
  },
  "equates sample": {
    "file": 1.0
  },
  "sam a": {
    "data": 1.0
  },
  "declaration field1key": {
    "key": 1.0
  },
  "field1 record": {
    "record": 1.0
  },
  "10 action": {
    "long": 1.0
  },
  "action long": {
    "record": 1.0
  },
  "long record": {
    "update": 1.0
  },
  "record update": {
    "action": 0.5,
    "conflicts": 0.5
  },
  "update action": {
    "variable": 1.0
  },
  "action variable": {
    "addrec": 1.0
  },
  "variable addrec": {
    "equate": 1.0
  },
  "addrec equate": {
    "1": 1.0
  },
  "equate 1": {
    "changerec": 1.0
  },
  "1 changerec": {
    "equate": 1.0
  },
  "2 57": {
    "developing": 1.0
  },
  "57 developing": {
    "client": 1.0
  },
  "applications assume": {
    "that": 1.0
  },
  "assume that": {
    "some": 1.0
  },
  "procedure allows": {
    "the": 1.0
  },
  "to select": {
    "a": 1.0
  },
  "select a": {
    "record": 1.0
  },
  "file define": {
    "s": 1.0
  },
  "define s": {
    "the": 1.0
  },
  "the expected": {
    "file": 1.0
  },
  "expected file": {
    "action": 1.0
  },
  "file action": {
    "add": 1.0
  },
  "action add": {
    "change": 1.0
  },
  "add change": {
    "or": 1.0
  },
  "change or": {
    "delete": 1.0
  },
  "record then": {
    "calls": 0.5,
    "the": 0.5
  },
  "then calls": {
    "an": 1.0
  },
  "calls an": {
    "update": 1.0
  },
  "an update": {
    "procedure": 1.0
  },
  "update procedure": {
    "the": 0.08333333333333333,
    "operates": 0.08333333333333333,
    "s": 0.08333333333333333,
    "an": 0.25,
    "screen": 0.25,
    "code": 0.16666666666666666,
    "end": 0.08333333333333333
  },
  "the update": {
    "procedure": 1.0
  },
  "procedure operates": {
    "only": 1.0
  },
  "operates only": {
    "on": 1.0
  },
  "only on": {
    "that": 1.0
  },
  "that selected": {
    "record": 1.0
  },
  "selected record": {
    "and": 1.0
  },
  "and accomplishes": {
    "the": 1.0
  },
  "accomplishes the": {
    "action": 1.0
  },
  "action the": {
    "user": 1.0
  },
  "user set": {
    "in": 1.0
  },
  "set in": {
    "the": 1.0
  },
  "previous procedure": {
    "the": 1.0
  },
  "s logic": {
    "woul": 1.0
  },
  "logic woul": {
    "d": 1.0
  },
  "d be": {
    "something": 1.0
  },
  "be something": {
    "like": 1.0
  },
  "something like": {
    "this": 1.0
  },
  "this update": {
    "procedure": 1.0
  },
  "procedure screen": {
    "window": 1.0
  },
  "screen window": {
    "data": 1.0
  },
  "window data": {
    "entry": 1.0
  },
  "entry screen": {
    "declarations": 1.0
  },
  "screen declarations": {
    "go": 1.0
  },
  "declarations go": {
    "here": 1.0
  },
  "go here": {
    "end": 1.0
  },
  "here end": {
    "saveque": 0.16666666666666666,
    "sav": 0.16666666666666666,
    "this": 0.3333333333333333,
    "code": 0.3333333333333333
  },
  "end saveque": {
    "queue": 1.0
  },
  "saveque queue": {
    "pre": 1.0
  },
  "queue pre": {
    "sav": 1.0
  },
  "pre sav": {
    "record": 0.3333333333333333,
    "of": 0.3333333333333333,
    "static": 0.3333333333333333
  },
  "sav record": {
    "save": 1.0
  },
  "record save": {
    "queue": 0.16666666666666666,
    "copy": 0.16666666666666666,
    "changes": 0.5,
    "new": 0.16666666666666666
  },
  "save queue": {
    "is": 1.0
  },
  "queue is": {
    "a": 1.0
  },
  "copy saverecord": {
    "like": 1.0
  },
  "saverecord like": {
    "sam": 1.0
  },
  "like sam": {
    "record": 1.0
  },
  "record pre": {
    "sav": 1.0
  },
  "sav of": {
    "the": 1.0
  },
  "s record": {
    "buffer": 1.0
  },
  "buffer end": {
    "with": 1.0
  },
  "end with": {
    "a": 1.0
  },
  "a different": {
    "prefix": 0.6666666666666666,
    "manner": 0.3333333333333333
  },
  "different prefix": {
    "savrecpos": 0.5,
    "passarray": 0.5
  },
  "prefix savrecpos": {
    "string": 1.0
  },
  "savrecpos string": {
    "512": 1.0
  },
  "string 512": {
    "record": 1.0
  },
  "512 record": {
    "position": 1.0
  },
  "position save": {
    "variable": 1.0
  },
  "open screen": {
    "sav": 0.3333333333333333,
    "savcrc": 0.3333333333333333,
    "display": 0.3333333333333333
  },
  "screen sav": {
    "saverecord": 1.0
  },
  "sav saverecord": {
    "sam": 0.42857142857142855,
    "put": 0.42857142857142855,
    "like": 0.07142857142857142,
    "declared": 0.07142857142857142
  },
  "saverecord sam": {
    "record": 1.0
  },
  "save copy": {
    "of": 1.0
  },
  "of record": {
    "add": 0.5,
    "update": 0.5
  },
  "record add": {
    "saveque": 1.0
  },
  "add saveque": {
    "1": 0.6666666666666666,
    "2": 0.3333333333333333
  },
  "saveque 1": {
    "to": 0.6666666666666666,
    "get": 0.3333333333333333
  },
  "to queue": {
    "entry": 1.0
  },
  "entry 1": {
    "savrecpos": 0.5,
    "display": 0.5
  },
  "1 savrecpos": {
    "position": 1.0
  },
  "savrecpos position": {
    "sample": 1.0
  },
  "position sample": {
    "save": 1.0
  },
  "sample save": {
    "record": 1.0
  },
  "save record": {
    "position": 1.0
  },
  "position display": {
    "display": 1.0
  },
  "display display": {
    "the": 0.5,
    "other": 0.5
  },
  "the reco": {
    "rd": 1.0
  },
  "reco rd": {
    "on": 1.0
  },
  "rd on": {
    "screen": 1.0
  },
  "on screen": {
    "accept": 1.0
  },
  "screen accept": {
    "screen": 1.0
  },
  "accept screen": {
    "field": 1.0
  },
  "screen field": {
    "process": 0.5,
    "edit": 0.5
  },
  "field process": {
    "loop": 1.0
  },
  "loop case": {
    "accepted": 0.6666666666666666,
    "field": 0.3333333333333333
  },
  "accepted individual": {
    "screen": 1.0
  },
  "individual screen": {
    "field": 1.0
  },
  "field edit": {
    "code": 1.0
  },
  "edit code": {
    "goes": 1.0
  },
  "code goes": {
    "here": 1.0
  },
  "goes here": {
    "of": 0.6,
    "end": 0.4
  },
  "here of": {
    "okbutton": 1.0
  },
  "completion field": {
    "if": 0.75,
    "case": 0.25
  },
  "field if": {
    "action": 1.0
  },
  "action ch": {
    "angerec": 1.0
  },
  "ch angerec": {
    "if": 1.0
  },
  "angerec if": {
    "changing": 1.0
  },
  "if changing": {
    "an": 1.0
  },
  "changing an": {
    "existing": 1.0
  },
  "an existing": {
    "record": 1.0
  },
  "existing record": {
    "sav": 0.5,
    "59": 0.25,
    "was": 0.25
  },
  "record sav": {
    "saverecord": 1.0
  },
  "save changes": {
    "made": 1.0
  },
  "changes made": {
    "add": 0.3333333333333333,
    "reget": 0.3333333333333333,
    "hold": 0.3333333333333333
  },
  "made add": {
    "saveque": 1.0
  },
  "saveque 2": {
    "to": 0.3333333333333333,
    "get": 0.6666666666666666
  },
  "2 to": {
    "queue": 1.0
  },
  "entry 2": {
    "get": 1.0
  },
  "get saveque": {
    "1": 0.3333333333333333,
    "2": 0.6666666666666666
  },
  "1 get": {
    "original": 1.0
  },
  "get original": {
    "record": 1.0
  },
  "original record": {
    "from": 0.4,
    "in": 0.2,
    "then": 0.2,
    "but": 0.2
  },
  "from queue": {
    "reget": 1.0
  },
  "queue reget": {
    "sample": 1.0
  },
  "reget sample": {
    "savrecpos": 0.75,
    "que": 0.25
  },
  "sample savrecpos": {
    "get": 1.0
  },
  "savrecpos get": {
    "record": 1.0
  },
  "get record": {
    "from": 0.75,
    "number": 0.25
  },
  "from file": {
    "again": 0.75,
    "structure": 0.25
  },
  "file again": {
    "if": 1.0
  },
  "again if": {
    "errorcode": 0.5,
    "the": 0.5
  },
  "if error": {
    "record": 0.5714285714285714,
    "file": 0.42857142857142855
  },
  "error record": {
    "not": 0.6,
    "already": 0.4
  },
  "record not": {
    "found": 1.0
  },
  "not found": {
    "did": 0.75,
    "in": 0.25
  },
  "found did": {
    "someone": 1.0
  },
  "did someone": {
    "else": 1.0
  },
  "else delete": {
    "it": 1.0
  },
  "it action": {
    "addrec": 0.75,
    "changerec": 0.25
  },
  "action addrec": {
    "change": 1.0
  },
  "addrec change": {
    "action": 1.0
  },
  "action to": {
    "add": 1.0
  },
  "to add": {
    "it": 1.0
  },
  "add it": {
    "back": 1.0
  },
  "back get": {
    "saveque": 1.0
  },
  "get this": {
    "user": 1.0
  },
  "this user": {
    "s": 0.75,
    "is": 0.25
  },
  "changes sam": {
    "record": 1.0
  },
  "saverecord put": {
    "them": 0.6666666666666666,
    "changes": 0.16666666666666666,
    "these": 0.16666666666666666
  },
  "put them": {
    "in": 0.5,
    "back": 0.5
  },
  "in record": {
    "buffer": 1.0
  },
  "buffer else": {
    "stop": 1.0
  },
  "else stop": {
    "error": 1.0
  },
  "error stop": {
    "on": 1.0
  },
  "stop on": {
    "any": 1.0
  },
  "other error": {
    "end": 1.0
  },
  "end elsif": {
    "sav": 0.3333333333333333,
    "savcrc": 0.6666666666666666
  },
  "elsif sav": {
    "saverecord": 1.0
  },
  "record compare": {
    "for": 1.0
  },
  "compare for": {
    "other": 1.0
  },
  "changes sav": {
    "saverecord": 1.0
  },
  "save new": {
    "disk": 0.3333333333333333,
    "crc": 0.6666666666666666
  },
  "new disk": {
    "record": 1.0
  },
  "disk record": {
    "add": 1.0
  },
  "1 display": {
    "display": 1.0
  },
  "display other": {
    "s": 1.0
  },
  "changes beep": {
    "alert": 1.0
  },
  "beep alert": {
    "the": 1.0
  },
  "user message": {
    "changed": 0.5,
    "locked": 0.5
  },
  "message changed": {
    "by": 0.6666666666666666,
    "b": 0.3333333333333333
  },
  "by another": {
    "station": 0.75,
    "user": 0.25
  },
  "another station": {
    "select": 0.7142857142857143,
    "then": 0.14285714285714285,
    "return": 0.14285714285714285
  },
  "station select": {
    "1": 0.8,
    "list": 0.2
  },
  "and start": {
    "over": 1.0
  },
  "cycle at": {
    "first": 1.0
  },
  "at first": {
    "field": 1.0
  },
  "first field": {
    "else": 0.75,
    "elsif": 0.25
  },
  "field else": {
    "if": 1.0
  },
  "if nobody": {
    "changed": 1.0
  },
  "nobody changed": {
    "it": 1.0
  },
  "changed it": {
    "get": 0.3333333333333333,
    "sam": 0.6666666666666666
  },
  "it get": {
    "saveque": 1.0
  },
  "them back": {
    "in": 1.0
  },
  "back in": {
    "r": 0.25,
    "buffer": 0.5,
    "record": 0.25
  },
  "in r": {
    "ecord": 1.0
  },
  "r ecord": {
    "buffer": 1.0
  },
  "ecord buffer": {
    "execute": 1.0
  },
  "buffer execute": {
    "action": 1.0
  },
  "execute action": {
    "execute": 1.0
  },
  "action execute": {
    "disk": 1.0
  },
  "execute disk": {
    "write": 1.0
  },
  "write add": {
    "sample": 1.0
  },
  "add sample": {
    "if": 1.0
  },
  "sample if": {
    "action": 0.9166666666666666,
    "errorcode": 0.08333333333333333
  },
  "action 1": {
    "addrec": 1.0
  },
  "1 addrec": {
    "put": 1.0
  },
  "addrec put": {
    "sample": 1.0
  },
  "put sample": {
    "if": 1.0
  },
  "action 2": {
    "changerec": 1.0
  },
  "2 changerec": {
    "delete": 1.0
  },
  "changerec delete": {
    "sam": 0.25,
    "sample": 0.75
  },
  "delete sam": {
    "ple": 1.0
  },
  "sam ple": {
    "if": 1.0
  },
  "ple if": {
    "action": 1.0
  },
  "action 3": {
    "deleterec": 1.0
  },
  "3 deleterec": {
    "end": 1.0
  },
  "deleterec end": {
    "errorcheck": 1.0
  },
  "end errorcheck": {
    "a": 1.0
  },
  "errorcheck a": {
    "generic": 1.0
  },
  "a generic": {
    "error": 0.8,
    "sql": 0.2
  },
  "generic error": {
    "checking": 1.0
  },
  "error checking": {
    "procedure": 1.0
  },
  "checking procedure": {
    "free": 0.25,
    "break": 0.75
  },
  "procedure free": {
    "saveque": 1.0
  },
  "free saveque": {
    "free": 1.0
  },
  "saveque free": {
    "memory": 1.0
  },
  "free memory": {
    "used": 1.0
  },
  "by queue": {
    "entries": 1.0
  },
  "entries break": {
    "and": 1.0
  },
  "and break": {
    "out": 1.0
  },
  "break out": {
    "of": 1.0
  },
  "loop and": {
    "case": 1.0
  },
  "and case": {
    "this": 0.3333333333333333,
    "you": 0.3333333333333333,
    "clarion": 0.3333333333333333
  },
  "case this": {
    "example": 1.0
  },
  "code demonstrates": {
    "the": 0.5,
    "this": 0.5
  },
  "demonstrates the": {
    "simplest": 0.5,
    "principle": 0.5
  },
  "simplest type": {
    "of": 1.0
  },
  "checking you": {
    "can": 1.0
  },
  "do without": {
    "using": 1.0
  },
  "watch it": {
    "saves": 1.0
  },
  "it saves": {
    "the": 1.0
  },
  "saves the": {
    "original": 1.0
  },
  "in memory": {
    "queue": 1.0
  },
  "memory queue": {
    "entry": 0.8,
    "s": 0.2
  },
  "entry one": {
    "and": 0.3333333333333333,
    "which": 0.3333333333333333,
    "trade": 0.3333333333333333
  },
  "position of": {
    "that": 1.0
  },
  "string variable": {
    "after": 1.0
  },
  "variable after": {
    "that": 1.0
  },
  "after that": {
    "the": 1.0
  },
  "is allowed": {
    "to": 1.0
  },
  "the screen": {
    "data": 0.5,
    "to": 0.5
  },
  "screen data": {
    "the": 1.0
  },
  "data the": {
    "code": 0.2,
    "database": 0.2,
    "buffer": 0.2,
    "file": 0.2,
    "concept": 0.2
  },
  "changes is": {
    "contained": 1.0
  },
  "is contained": {
    "in": 1.0
  },
  "the case": {
    "field": 0.5,
    "accepted": 0.5
  },
  "case field": {
    "of": 0.5,
    "individual": 0.5
  },
  "okbutton this": {
    "would": 1.0
  },
  "the field": {
    "which": 0.16666666666666666,
    "s": 0.3333333333333333,
    "null": 0.16666666666666666,
    "this": 0.16666666666666666,
    "is": 0.16666666666666666
  },
  "field which": {
    "the": 0.3333333333333333,
    "has": 0.6666666666666666
  },
  "user completes": {
    "when": 1.0
  },
  "completes when": {
    "he": 1.0
  },
  "when he": {
    "she": 1.0
  },
  "he she": {
    "is": 1.0
  },
  "she is": {
    "done": 1.0
  },
  "is done": {
    "making": 0.5,
    "to": 0.5
  },
  "done making": {
    "changes": 1.0
  },
  "making changes": {
    "and": 0.5,
    "to": 0.5
  },
  "is ready": {
    "to": 1.0
  },
  "ready to": {
    "write": 1.0
  },
  "record to": {
    "disk": 1.0
  },
  "disk clarion": {
    "language": 1.0
  },
  "guide 58": {
    "to": 1.0
  },
  "58 to": {
    "check": 1.0
  },
  "first saves": {
    "this": 1.0
  },
  "saves this": {
    "user": 1.0
  },
  "second memory": {
    "queue": 1.0
  },
  "entry then": {
    "gets": 1.0
  },
  "then gets": {
    "the": 1.0
  },
  "queue the": {
    "saved": 1.0
  },
  "saved record": {
    "position": 1.0
  },
  "position is": {
    "used": 1.0
  },
  "found in": {
    "the": 1.0
  },
  "file someone": {
    "else": 1.0
  },
  "deleted it": {
    "therefore": 0.5,
    "is": 0.5
  },
  "it therefore": {
    "since": 1.0
  },
  "therefore since": {
    "this": 1.0
  },
  "since this": {
    "user": 0.5,
    "sql": 0.5
  },
  "is changing": {
    "it": 1.0
  },
  "changing it": {
    "simply": 1.0
  },
  "it simply": {
    "add": 1.0
  },
  "simply add": {
    "the": 1.0
  },
  "back into": {
    "the": 1.0
  },
  "record w": {
    "as": 1.0
  },
  "w as": {
    "not": 1.0
  },
  "as not": {
    "deleted": 1.0
  },
  "not deleted": {
    "it": 1.0
  },
  "is compared": {
    "against": 1.0
  },
  "compared against": {
    "the": 1.0
  },
  "original saved": {
    "copy": 1.0
  },
  "saved copy": {
    "if": 1.0
  },
  "copy if": {
    "they": 1.0
  },
  "same the": {
    "changed": 0.3333333333333333,
    "user": 0.3333333333333333,
    "record": 0.3333333333333333
  },
  "is saved": {
    "to": 1.0
  },
  "saved to": {
    "the": 1.0
  },
  "same memory": {
    "queue": 1.0
  },
  "one which": {
    "contained": 1.0
  },
  "which contained": {
    "the": 1.0
  },
  "contained the": {
    "original": 1.0
  },
  "is alerted": {
    "to": 0.6666666666666666,
    "and": 0.3333333333333333
  },
  "alerted to": {
    "the": 0.5,
    "that": 0.5
  },
  "problem and": {
    "sent": 1.0
  },
  "and sent": {
    "back": 1.0
  },
  "sent back": {
    "to": 1.0
  },
  "the fir": {
    "st": 1.0
  },
  "fir st": {
    "field": 1.0
  },
  "st field": {
    "on": 1.0
  },
  "field on": {
    "the": 1.0
  },
  "screen to": {
    "re": 1.0
  },
  "re enter": {
    "the": 1.0
  },
  "enter the": {
    "changes": 1.0
  },
  "if necessary": {
    "if": 1.0
  },
  "necessary if": {
    "the": 0.5,
    "it": 0.5
  },
  "still the": {
    "same": 1.0
  },
  "are retrieved": {
    "from": 1.0
  },
  "retrieved from": {
    "the": 0.5,
    "disk": 0.5
  },
  "entry and": {
    "put": 1.0
  },
  "buffer for": {
    "the": 0.5,
    "anticipated": 0.5
  },
  "the disk": {
    "write": 1.0
  },
  "write this": {
    "method": 1.0
  },
  "is fairly": {
    "straight": 1.0
  },
  "fairly straight": {
    "forward": 1.0
  },
  "forward an": {
    "d": 1.0
  },
  "d logical": {
    "however": 1.0
  },
  "logical however": {
    "it": 1.0
  },
  "however it": {
    "uses": 1.0
  },
  "it uses": {
    "three": 1.0
  },
  "uses three": {
    "extra": 1.0
  },
  "three extra": {
    "chunks": 1.0
  },
  "extra chunks": {
    "of": 1.0
  },
  "chunks of": {
    "memory": 0.5,
    "data": 0.5
  },
  "memory the": {
    "size": 1.0
  },
  "buffer the": {
    "memory": 0.5,
    "passarray": 0.5
  },
  "queue s": {
    "buffer": 1.0
  },
  "s buffer": {
    "and": 1.0
  },
  "buffer and": {
    "the": 1.0
  },
  "two entries": {
    "in": 1.0
  },
  "entries in": {
    "that": 1.0
  },
  "that queue": {
    "plus": 1.0
  },
  "queue plus": {
    "each": 1.0
  },
  "plus each": {
    "queue": 1.0
  },
  "each queue": {
    "entry": 1.0
  },
  "entry s": {
    "28": 1.0
  },
  "s 28": {
    "byte": 1.0
  },
  "28 byte": {
    "overhead": 1.0
  },
  "byte overhead": {
    "if": 1.0
  },
  "overhead if": {
    "you": 1.0
  },
  "are dealing": {
    "with": 1.0
  },
  "dealing with": {
    "a": 1.0
  },
  "that has": {
    "many": 1.0
  },
  "has many": {
    "fields": 1.0
  },
  "many fields": {
    "the": 1.0
  },
  "fields the": {
    "record": 1.0
  },
  "buffer could": {
    "be": 0.5,
    "easily": 0.5
  },
  "very large": {
    "and": 1.0
  },
  "large and": {
    "this": 1.0
  },
  "and this": {
    "could": 1.0
  },
  "this could": {
    "use": 1.0
  },
  "a significant": {
    "amount": 0.5,
    "period": 0.5
  },
  "significant amount": {
    "of": 1.0
  },
  "amount of": {
    "memory": 0.5,
    "time": 0.5
  },
  "memory another": {
    "method": 1.0
  },
  "another method": {
    "of": 1.0
  },
  "checking does": {
    "not": 1.0
  },
  "not copy": {
    "and": 1.0
  },
  "copy and": {
    "save": 1.0
  },
  "and save": {
    "the": 1.0
  },
  "save the": {
    "original": 1.0
  },
  "record but": {
    "instead": 0.5,
    "not": 0.5
  },
  "but instead": {
    "calculates": 1.0
  },
  "instead calculates": {
    "a": 1.0
  },
  "calculates a": {
    "checksum": 0.5,
    "16": 0.5
  },
  "a checksum": {
    "or": 1.0
  },
  "checksum or": {
    "cyclical": 1.0
  },
  "or cyclical": {
    "redundancy": 1.0
  },
  "cyclical redundancy": {
    "check": 1.0
  },
  "redundancy check": {
    "crc": 1.0
  },
  "check crc": {
    "value": 0.5,
    "ulong": 0.5
  },
  "crc value": {
    "the": 0.16666666666666666,
    "for": 0.16666666666666666,
    "save": 0.16666666666666666,
    "savrecpos": 0.16666666666666666,
    "display": 0.3333333333333333
  },
  "the calculation": {
    "is": 1.0
  },
  "calculation is": {
    "performed": 1.0
  },
  "is performed": {
    "on": 0.5,
    "again": 0.5
  },
  "performed on": {
    "the": 1.0
  },
  "before changes": {
    "are": 1.0
  },
  "made then": {
    "the": 1.0
  },
  "performed again": {
    "if": 1.0
  },
  "record has": {
    "been": 1.0
  },
  "been changed": {
    "this": 1.0
  },
  "changed this": {
    "method": 1.0
  },
  "method still": {
    "requires": 1.0
  },
  "still requires": {
    "a": 1.0
  },
  "requires a": {
    "save": 1.0
  },
  "a save": {
    "area": 1.0
  },
  "save area": {
    "for": 0.2,
    "the": 0.2,
    "is": 0.2,
    "should": 0.2,
    "were": 0.2
  },
  "area for": {
    "the": 0.5,
    "a": 0.5
  },
  "changes because": {
    "the": 1.0
  },
  "record must": {
    "be": 1.0
  },
  "read again": {
    "for": 1.0
  },
  "second calculation": {
    "and": 1.0
  },
  "calculation and": {
    "all": 0.5,
    "passarray": 0.5
  },
  "all disk": {
    "reads": 1.0
  },
  "disk reads": {
    "are": 1.0
  },
  "reads are": {
    "placed": 1.0
  },
  "are placed": {
    "in": 1.0
  },
  "buffer without": {
    "a": 1.0
  },
  "without a": {
    "save": 1.0
  },
  "area the": {
    "user": 1.0
  },
  "changes would": {
    "be": 1.0
  },
  "be overwritten": {
    "here": 1.0
  },
  "overwritten here": {
    "is": 1.0
  },
  "a 16": {
    "bit": 1.0
  },
  "16 bit": {
    "crc": 0.75,
    "unsigned": 0.25
  },
  "bit crc": {
    "procedure": 0.25,
    "value": 0.25,
    "check": 0.25,
    "bshift": 0.25
  },
  "crc procedure": {
    "and": 1.0
  },
  "its prototype": {
    "for": 1.0
  },
  "is similar": {
    "to": 1.0
  },
  "the crc": {
    "calculations": 1.0
  },
  "crc calculations": {
    "used": 1.0
  },
  "calculations used": {
    "in": 1.0
  },
  "some serial": {
    "communications": 1.0
  },
  "serial communications": {
    "protocols": 1.0
  },
  "communications protocols": {
    "an": 1.0
  },
  "protocols an": {
    "array": 1.0
  },
  "an array": {
    "of": 0.6,
    "byte": 0.2,
    "declared": 0.2
  },
  "array of": {
    "byte": 0.3333333333333333,
    "bytes": 0.6666666666666666
  },
  "of byte": {
    "fields": 1.0
  },
  "byte fields": {
    "is": 1.0
  },
  "fields is": {
    "passed": 1.0
  },
  "procedure it": {
    "calculates": 0.5,
    "would": 0.5
  },
  "it calculates": {
    "a": 1.0
  },
  "that array": {
    "and": 1.0
  },
  "array and": {
    "returns": 1.0
  },
  "returns it": {
    "to": 1.0
  },
  "a ushort": {
    "16": 0.5,
    "value": 0.5
  },
  "ushort 16": {
    "bit": 1.0
  },
  "bit unsigned": {
    "variable": 1.0
  },
  "unsigned variable": {
    "map": 1.0
  },
  "variable map": {
    "the": 1.0
  },
  "map crc16": {
    "byte": 1.0
  },
  "crc16 byte": {
    "ushort": 1.0
  },
  "byte ushort": {
    "crc16": 1.0
  },
  "ushort crc16": {
    "expects": 1.0
  },
  "crc16 expects": {
    "an": 1.0
  },
  "expects an": {
    "array": 1.0
  },
  "of bytes": {
    "to": 0.5,
    "it": 0.5
  },
  "bytes to": {
    "be": 1.0
  },
  "be end": {
    "passed": 1.0
  },
  "end passed": {
    "to": 1.0
  },
  "it returns": {
    "a": 1.0
  },
  "ushort value": {
    "crc16": 1.0
  },
  "value crc16": {
    "procedure": 1.0
  },
  "crc16 procedure": {
    "array": 0.5,
    "the": 0.5
  },
  "procedure array": {
    "16": 1.0
  },
  "array 16": {
    "bit": 1.0
  },
  "crc check": {
    "crc": 0.5,
    "procedure": 0.5
  },
  "crc ulong": {
    "work": 1.0
  },
  "ulong work": {
    "variable": 1.0
  },
  "work variable": {
    "code": 1.0
  },
  "to maximum": {
    "array": 1.0
  },
  "maximum array": {
    "1": 1.0
  },
  "array 1": {
    "loop": 1.0
  },
  "1 loop": {
    "through": 1.0
  },
  "loop through": {
    "whole": 0.5,
    "each": 0.5
  },
  "through whole": {
    "array": 1.0
  },
  "whole array": {
    "crc": 1.0
  },
  "array crc": {
    "bor": 1.0
  },
  "crc bor": {
    "crc": 1.0
  },
  "bor crc": {
    "array": 1.0
  },
  "crc array": {
    "x": 1.0
  },
  "array x": {
    "concatenate": 1.0
  },
  "x concatenate": {
    "an": 1.0
  },
  "concatenate an": {
    "array": 1.0
  },
  "array byte": {
    "to": 1.0
  },
  "byte to": {
    "crc": 1.0
  },
  "to crc": {
    "loop": 1.0
  },
  "crc loop": {
    "8": 1.0
  },
  "loop 8": {
    "times": 1.0
  },
  "8 times": {
    "loop": 1.0
  },
  "times loop": {
    "through": 1.0
  },
  "through each": {
    "bit": 1.0
  },
  "each bit": {
    "crc": 1.0
  },
  "crc bshift": {
    "crc": 1.0
  },
  "bshift crc": {
    "1": 0.5,
    "8": 0.5
  },
  "crc 1": {
    "shift": 1.0
  },
  "1 shift": {
    "crc": 1.0
  },
  "shift crc": {
    "left": 0.5,
    "bx": 0.5
  },
  "crc left": {
    "one": 1.0
  },
  "left one": {
    "bit": 1.0
  },
  "one bit": {
    "if": 1.0
  },
  "bit if": {
    "band": 1.0
  },
  "if band": {
    "crc": 1.0
  },
  "band crc": {
    "1000000h": 1.0
  },
  "crc 1000000h": {
    "was": 1.0
  },
  "1000000h was": {
    "crc": 1.0
  },
  "was crc": {
    "24th": 1.0
  },
  "crc 24th": {
    "bit": 1.0
  },
  "24th bit": {
    "on": 1.0
  },
  "bit on": {
    "before": 1.0
  },
  "on before": {
    "shift": 1.0
  },
  "before shift": {
    "crc": 1.0
  },
  "crc bx": {
    "or": 1.0
  },
  "bx or": {
    "crc": 1.0
  },
  "or crc": {
    "102100h": 1.0
  },
  "crc 102100h": {
    "xor": 1.0
  },
  "102100h xor": {
    "shifted": 1.0
  },
  "xor shifted": {
    "value": 1.0
  },
  "shifted value": {
    "with": 1.0
  },
  "value with": {
    "crc": 1.0
  },
  "with crc": {
    "mask": 1.0
  },
  "crc mask": {
    "end": 1.0
  },
  "mask end": {
    "both": 1.0
  },
  "end both": {
    "loops": 1.0
  },
  "both loops": {
    "return": 1.0
  },
  "loops return": {
    "band": 1.0
  },
  "return band": {
    "bshift": 1.0
  },
  "band bshift": {
    "crc": 1.0
  },
  "crc 8": {
    "0000ffffh": 1.0
  },
  "8 0000ffffh": {
    "shift": 1.0
  },
  "0000ffffh shift": {
    "and": 1.0
  },
  "shift and": {
    "mask": 1.0
  },
  "and mask": {
    "return": 1.0
  },
  "mask return": {
    "value": 1.0
  },
  "return value": {
    "using": 1.0
  },
  "value using": {
    "this": 1.0
  },
  "using this": {
    "crc": 0.5,
    "method": 0.5
  },
  "this crc": {
    "check": 1.0
  },
  "check procedure": {
    "the": 1.0
  },
  "be changed": {
    "to": 1.0
  },
  "to look": {
    "like": 1.0
  },
  "like update": {
    "procedure": 1.0
  },
  "end sav": {
    "saverecord": 1.0
  },
  "sav static": {
    "record": 1.0
  },
  "static record": {
    "buffer": 1.0
  },
  "buffer sa": {
    "ve": 1.0
  },
  "sa ve": {
    "area": 1.0
  },
  "ve area": {
    "with": 0.5,
    "for": 0.5
  },
  "area with": {
    "a": 1.0
  },
  "prefix passarray": {
    "byte": 1.0
  },
  "passarray byte": {
    "dim": 1.0
  },
  "byte dim": {
    "size": 1.0
  },
  "dim size": {
    "sam": 1.0
  },
  "size sam": {
    "record": 1.0
  },
  "record over": {
    "sam": 1.0
  },
  "over sam": {
    "record": 1.0
  },
  "record declare": {
    "array": 1.0
  },
  "declare array": {
    "over": 1.0
  },
  "array over": {
    "sam": 1.0
  },
  "record savrecpos": {
    "string": 1.0
  },
  "variable savcrc": {
    "ushort": 1.0
  },
  "savcrc ushort": {
    "crc": 1.0
  },
  "ushort crc": {
    "value": 1.0
  },
  "value save": {
    "variable": 1.0
  },
  "screen savcrc": {
    "crc16": 1.0
  },
  "savcrc crc16": {
    "passarray": 1.0
  },
  "crc16 passarray": {
    "save": 0.6,
    "compare": 0.4
  },
  "passarray save": {
    "original": 0.3333333333333333,
    "new": 0.6666666666666666
  },
  "save original": {
    "crc": 1.0
  },
  "original crc": {
    "value": 0.5,
    "calculation": 0.5
  },
  "value savrecpos": {
    "position": 1.0
  },
  "okbutton scree": {
    "n": 1.0
  },
  "scree n": {
    "completion": 1.0
  },
  "n completion": {
    "field": 1.0
  },
  "changerec if": {
    "changing": 1.0
  },
  "record 59": {
    "developing": 1.0
  },
  "59 developing": {
    "client": 1.0
  },
  "applications sav": {
    "saverecord": 1.0
  },
  "made reget": {
    "sample": 1.0
  },
  "back sam": {
    "record": 1.0
  },
  "elsif savcrc": {
    "crc16": 1.0
  },
  "passarray compare": {
    "crcs": 0.5,
    "crc": 0.5
  },
  "compare crcs": {
    "for": 1.0
  },
  "crcs for": {
    "changes": 1.0
  },
  "for changes": {
    "savcrc": 0.3333333333333333,
    "reget": 0.3333333333333333,
    "release": 0.3333333333333333
  },
  "changes savcrc": {
    "crc16": 1.0
  },
  "new crc": {
    "value": 1.0
  },
  "value display": {
    "display": 1.0
  },
  "user if": {
    "message": 1.0
  },
  "if message": {
    "changed": 0.6666666666666666,
    "held": 0.3333333333333333
  },
  "it sam": {
    "record": 1.0
  },
  "put changes": {
    "back": 1.0
  },
  "in buffer": {
    "execute": 1.0
  },
  "delete sample": {
    "if": 1.0
  },
  "procedure break": {
    "and": 1.0
  },
  "case you": {
    "can": 1.0
  },
  "bit smaller": {
    "and": 1.0
  },
  "smaller and": {
    "easier": 1.0
  },
  "follow logically": {
    "there": 1.0
  },
  "logically there": {
    "are": 1.0
  },
  "two new": {
    "data": 1.0
  },
  "new data": {
    "declarations": 1.0
  },
  "declarations savcrc": {
    "is": 1.0
  },
  "savcrc is": {
    "declared": 1.0
  },
  "declared to": {
    "save": 1.0
  },
  "to save": {
    "the": 1.0
  },
  "crc calculation": {
    "and": 1.0
  },
  "and passarray": {
    "is": 1.0
  },
  "passarray is": {
    "an": 1.0
  },
  "array declared": {
    "over": 1.0
  },
  "declared over": {
    "the": 1.0
  },
  "over the": {
    "file": 0.5,
    "years": 0.5
  },
  "the passarray": {
    "declarati": 1.0
  },
  "passarray declarati": {
    "on": 1.0
  },
  "declarati on": {
    "simply": 1.0
  },
  "on simply": {
    "provides": 1.0
  },
  "simply provides": {
    "a": 1.0
  },
  "a way": {
    "to": 1.0
  },
  "to pass": {
    "the": 1.0
  },
  "pass the": {
    "crc16": 1.0
  },
  "the crc16": {
    "procedure": 1.0
  },
  "entire record": {
    "as": 1.0
  },
  "bytes it": {
    "does": 1.0
  },
  "not allocate": {
    "any": 1.0
  },
  "allocate any": {
    "memory": 1.0
  },
  "any memory": {
    "a": 1.0
  },
  "memory a": {
    "valid": 1.0
  },
  "a valid": {
    "question": 0.5,
    "primary": 0.5
  },
  "valid question": {
    "at": 1.0
  },
  "question at": {
    "this": 1.0
  },
  "point would": {
    "be": 1.0
  },
  "be why": {
    "is": 1.0
  },
  "the sav": {
    "saverecord": 1.0
  },
  "saverecord declared": {
    "in": 1.0
  },
  "code with": {
    "a": 1.0
  },
  "attribute there": {
    "are": 1.0
  },
  "are fou": {
    "r": 1.0
  },
  "fou r": {
    "reasons": 1.0
  },
  "r reasons": {
    "a": 1.0
  },
  "reasons a": {
    "save": 1.0
  },
  "area is": {
    "still": 1.0
  },
  "still needed": {
    "to": 1.0
  },
  "to temporarily": {
    "keep": 1.0
  },
  "temporarily keep": {
    "the": 1.0
  },
  "keep the": {
    "user": 1.0
  },
  "changes while": {
    "concurrency": 1.0
  },
  "while concurrency": {
    "checking": 1.0
  },
  "checking calculations": {
    "are": 1.0
  },
  "calculations are": {
    "being": 1.0
  },
  "being performed": {
    "variables": 1.0
  },
  "performed variables": {
    "declared": 1.0
  },
  "are assigned": {
    "memory": 0.5,
    "static": 0.5
  },
  "assigned memory": {
    "on": 1.0
  },
  "the sa": {
    "ve": 1.0
  },
  "a large": {
    "record": 1.0
  },
  "large record": {
    "buffer": 1.0
  },
  "could easily": {
    "take": 1.0
  },
  "easily take": {
    "more": 1.0
  },
  "take more": {
    "memory": 1.0
  },
  "more memory": {
    "than": 1.0
  },
  "memory than": {
    "is": 1.0
  },
  "than is": {
    "available": 1.0
  },
  "is available": {
    "on": 1.0
  },
  "available on": {
    "the": 0.5,
    "an": 0.5
  },
  "stack therefore": {
    "the": 1.0
  },
  "the save": {
    "area": 1.0
  },
  "area should": {
    "be": 1.0
  },
  "in static": {
    "memory": 1.0
  },
  "memory in": {
    "a": 1.0
  },
  "procedure only": {
    "data": 1.0
  },
  "only data": {
    "structures": 1.0
  },
  "structures window": {
    "report": 1.0
  },
  "window report": {
    "file": 1.0
  },
  "report file": {
    "view": 1.0
  },
  "file view": {
    "and": 1.0
  },
  "view and": {
    "queue": 1.0
  },
  "and queue": {
    "and": 1.0
  },
  "queue and": {
    "variables": 1.0
  },
  "and variables": {
    "with": 1.0
  },
  "variables with": {
    "the": 1.0
  },
  "the stati": {
    "c": 1.0
  },
  "stati c": {
    "attribute": 1.0
  },
  "c attribute": {
    "are": 1.0
  },
  "assigned static": {
    "memory": 1.0
  },
  "memory of": {
    "course": 1.0
  },
  "course if": {
    "the": 1.0
  },
  "area were": {
    "declared": 1.0
  },
  "were declared": {
    "in": 1.0
  },
  "code or": {
    "a": 1.0
  },
  "keywords member": {
    "and": 1.0
  },
  "and procedure": {
    "it": 1.0
  },
  "be dec": {
    "lared": 1.0
  },
  "dec lared": {
    "with": 1.0
  },
  "lared with": {
    "the": 1.0
  },
  "attribute it": {
    "would": 1.0
  },
  "would automatically": {
    "be": 1.0
  },
  "automatically be": {
    "assigned": 1.0
  },
  "be assigned": {
    "static": 1.0
  },
  "memory clarion": {
    "language": 1.0
  },
  "guide 60": {
    "hold": 1.0
  },
  "60 hold": {
    "and": 1.0
  },
  "release a": {
    "tool": 1.0
  },
  "a tool": {
    "to": 1.0
  },
  "tool to": {
    "prevent": 1.0
  },
  "prevent other": {
    "users": 1.0
  },
  "users from": {
    "making": 0.25,
    "any": 0.25,
    "all": 0.25,
    "accessing": 0.25
  },
  "from making": {
    "changes": 1.0
  },
  "record while": {
    "it": 1.0
  },
  "while it": {
    "is": 1.0
  },
  "being updated": {
    "is": 0.5,
    "then": 0.5
  },
  "updated is": {
    "the": 1.0
  },
  "the hold": {
    "statement": 0.25,
    "automatically": 0.125,
    "savcrc": 0.125,
    "should": 0.125,
    "would": 0.125,
    "reget": 0.125,
    "cannot": 0.125
  },
  "hold statement": {
    "hold": 0.5,
    "only": 0.5
  },
  "statement hold": {
    "tells": 1.0
  },
  "hold tells": {
    "the": 1.0
  },
  "the f": {
    "ollowing": 1.0
  },
  "f ollowing": {
    "get": 1.0
  },
  "ollowing get": {
    "next": 1.0
  },
  "get next": {
    "or": 1.0
  },
  "previous statement": {
    "to": 1.0
  },
  "set a": {
    "flag": 1.0
  },
  "a flag": {
    "that": 1.0
  },
  "flag that": {
    "tells": 1.0
  },
  "that tells": {
    "any": 1.0
  },
  "tells any": {
    "other": 1.0
  },
  "user attempting": {
    "to": 1.0
  },
  "attempting to": {
    "get": 1.0
  },
  "get that": {
    "record": 1.0
  },
  "record that": {
    "it": 1.0
  },
  "record lock": {
    "the": 1.0
  },
  "lock the": {
    "record": 0.25,
    "file": 0.5,
    "same": 0.25
  },
  "record remains": {
    "held": 1.0
  },
  "remains held": {
    "until": 1.0
  },
  "held until": {
    "it": 1.0
  },
  "until it": {
    "is": 1.0
  },
  "is explicitly": {
    "released": 1.0
  },
  "explicitly released": {
    "with": 1.0
  },
  "released with": {
    "a": 1.0
  },
  "a release": {
    "statement": 1.0
  },
  "release statement": {
    "implic": 1.0
  },
  "statement implic": {
    "itly": 1.0
  },
  "implic itly": {
    "released": 1.0
  },
  "itly released": {
    "by": 1.0
  },
  "released by": {
    "a": 0.3333333333333333,
    "retrieving": 0.3333333333333333,
    "whatever": 0.3333333333333333
  },
  "a put": {
    "or": 1.0
  },
  "put or": {
    "delete": 1.0
  },
  "or implicitly": {
    "released": 1.0
  },
  "implicitly released": {
    "by": 1.0
  },
  "by retrieving": {
    "another": 1.0
  },
  "retrieving another": {
    "record": 1.0
  },
  "another record": {
    "from": 1.0
  },
  "language supports": {
    "multiple": 0.5,
    "null": 0.5
  },
  "supports multiple": {
    "file": 1.0
  },
  "multiple file": {
    "systems": 1.0
  },
  "file systems": {
    "through": 0.2,
    "a": 0.4,
    "release": 0.2,
    "lock": 0.2
  },
  "systems through": {
    "its": 1.0
  },
  "through its": {
    "file": 1.0
  },
  "its file": {
    "driver": 1.0
  },
  "driver technology": {
    "each": 0.3333333333333333,
    "allows": 0.3333333333333333,
    "lets": 0.3333333333333333
  },
  "technology each": {
    "file": 1.0
  },
  "each file": {
    "system": 0.3333333333333333,
    "driver": 0.6666666666666666
  },
  "file system": {
    "may": 0.08333333333333333,
    "in": 0.16666666666666666,
    "being": 0.25,
    "blocks": 0.08333333333333333,
    "code": 0.08333333333333333,
    "an": 0.08333333333333333,
    "utilities": 0.08333333333333333,
    "contains": 0.08333333333333333,
    "requires": 0.08333333333333333
  },
  "system may": {
    "implement": 1.0
  },
  "may implement": {
    "record": 1.0
  },
  "implement record": {
    "lockin": 1.0
  },
  "record lockin": {
    "g": 1.0
  },
  "lockin g": {
    "in": 1.0
  },
  "g in": {
    "a": 1.0
  },
  "different manner": {
    "therefore": 1.0
  },
  "manner therefore": {
    "the": 1.0
  },
  "actual effect": {
    "of": 1.0
  },
  "effect of": {
    "hold": 0.25,
    "lock": 0.25,
    "this": 0.5
  },
  "of hold": {
    "is": 0.5,
    "in": 0.16666666666666666,
    "and": 0.16666666666666666,
    "only": 0.16666666666666666
  },
  "hold is": {
    "dependent": 0.25,
    "described": 0.25,
    "the": 0.25,
    "most": 0.25
  },
  "upon the": {
    "file": 0.75,
    "actual": 0.25
  },
  "driver which": {
    "takes": 1.0
  },
  "which takes": {
    "whatever": 1.0
  },
  "takes whatever": {
    "action": 1.0
  },
  "whatever action": {
    "is": 1.0
  },
  "system in": {
    "some": 1.0
  },
  "some file": {
    "systems": 0.8,
    "drivers": 0.2
  },
  "systems a": {
    "hold": 0.5,
    "system": 0.5
  },
  "a hold": {
    "on": 0.6,
    "state": 0.4
  },
  "hold on": {
    "a": 0.3333333333333333,
    "the": 0.6666666666666666
  },
  "record allows": {
    "other": 1.0
  },
  "allows other": {
    "users": 1.0
  },
  "users to": {
    "read": 0.6666666666666666,
    "glean": 0.3333333333333333
  },
  "to read": {
    "the": 0.6666666666666666,
    "2": 0.3333333333333333
  },
  "not to": {
    "write": 1.0
  },
  "in others": {
    "hold": 0.5,
    "it": 0.5
  },
  "others hold": {
    "blocks": 1.0
  },
  "hold blocks": {
    "other": 1.0
  },
  "blocks other": {
    "users": 1.0
  },
  "record some": {
    "file": 1.0
  },
  "systems release": {
    "the": 1.0
  },
  "release the": {
    "hold": 1.0
  },
  "hold automatically": {
    "if": 1.0
  },
  "automatically if": {
    "the": 1.0
  },
  "the system": {
    "crashes": 0.5,
    "is": 0.5
  },
  "system crashes": {
    "others": 1.0
  },
  "crashes others": {
    "don": 1.0
  },
  "others don": {
    "t": 1.0
  },
  "t and": {
    "leave": 1.0
  },
  "and leave": {
    "it": 1.0
  },
  "leave it": {
    "flagged": 1.0
  },
  "it flagged": {
    "as": 1.0
  },
  "flagged as": {
    "held": 1.0
  },
  "as held": {
    "the": 0.5,
    "by": 0.5
  },
  "held the": {
    "specific": 1.0
  },
  "specific action": {
    "of": 0.5,
    "lock": 0.5
  },
  "action of": {
    "hold": 1.0
  },
  "is described": {
    "in": 1.0
  },
  "described in": {
    "each": 1.0
  },
  "driver s": {
    "docu": 0.5,
    "documentation": 0.5
  },
  "s docu": {
    "mentation": 1.0
  },
  "docu mentation": {
    "if": 1.0
  },
  "mentation if": {
    "you": 1.0
  },
  "you hold": {
    "a": 1.0
  },
  "hold a": {
    "record": 1.0
  },
  "record when": {
    "it": 1.0
  },
  "release it": {
    "when": 0.5,
    "and": 0.5
  },
  "you write": {
    "it": 1.0
  },
  "write it": {
    "back": 1.0
  },
  "back you": {
    "can": 1.0
  },
  "checking previously": {
    "described": 1.0
  },
  "previously described": {
    "is": 1.0
  },
  "described is": {
    "this": 1.0
  },
  "is this": {
    "a": 0.5,
    "creating": 0.5
  },
  "good idea": {
    "though": 1.0
  },
  "idea though": {
    "depending": 1.0
  },
  "though depending": {
    "upon": 1.0
  },
  "depending upon": {
    "the": 1.0
  },
  "actual implementation": {
    "of": 1.0
  },
  "hold in": {
    "the": 0.5,
    "this": 0.5
  },
  "system being": {
    "used": 0.6666666666666666,
    "us": 0.3333333333333333
  },
  "being used": {
    "the": 0.5,
    "does": 0.5
  },
  "used the": {
    "answer": 0.3333333333333333,
    "most": 0.3333333333333333,
    "second": 0.3333333333333333
  },
  "answer may": {
    "be": 1.0
  },
  "be either": {
    "yes": 0.5,
    "one": 0.5
  },
  "either yes": {
    "or": 1.0
  },
  "yes or": {
    "no": 1.0
  },
  "or no": {
    "if": 1.0
  },
  "no if": {
    "your": 1.0
  },
  "your file": {
    "system": 0.5,
    "declaration": 0.5
  },
  "system blocks": {
    "other": 1.0
  },
  "from all": {
    "access": 1.0
  },
  "all access": {
    "to": 1.0
  },
  "or there": {
    "is": 1.0
  },
  "possibility a": {
    "system": 1.0
  },
  "a system": {
    "crash": 1.0
  },
  "system crash": {
    "could": 0.3333333333333333,
    "in": 0.3333333333333333,
    "automatic": 0.3333333333333333
  },
  "crash could": {
    "leav": 1.0
  },
  "could leav": {
    "e": 1.0
  },
  "leav e": {
    "it": 1.0
  },
  "hold state": {
    "the": 0.5,
    "by": 0.5
  },
  "state the": {
    "answer": 1.0
  },
  "is probably": {
    "no": 0.5,
    "better": 0.5
  },
  "probably no": {
    "this": 1.0
  },
  "no this": {
    "does": 1.0
  },
  "not mean": {
    "that": 1.0
  },
  "you should": {
    "not": 0.6666666666666666,
    "use": 0.3333333333333333
  },
  "should not": {
    "use": 0.6666666666666666,
    "require": 0.3333333333333333
  },
  "not use": {
    "hold": 1.0
  },
  "use hold": {
    "at": 0.3333333333333333,
    "where": 0.3333333333333333,
    "during": 0.3333333333333333
  },
  "hold at": {
    "all": 1.0
  },
  "all it": {
    "does": 1.0
  },
  "does mean": {
    "that": 1.0
  },
  "hold where": {
    "a": 1.0
  },
  "be held": {
    "during": 1.0
  },
  "held during": {
    "user": 1.0
  },
  "during user": {
    "input": 0.5,
    "data": 0.5
  },
  "user input": {
    "an": 0.5,
    "this": 0.5
  },
  "input an": {
    "indeterminate": 1.0
  },
  "an indeterminate": {
    "amount": 1.0
  },
  "indeterminate amount": {
    "of": 1.0
  },
  "of time": {
    "more": 0.3333333333333333,
    "is": 0.3333333333333333,
    "d": 0.3333333333333333
  },
  "time more": {
    "likely": 1.0
  },
  "more likely": {
    "you": 1.0
  },
  "likely you": {
    "would": 1.0
  },
  "would use": {
    "hold": 1.0
  },
  "hold during": {
    "the": 1.0
  },
  "the concurrency": {
    "check": 1.0
  },
  "concurrency check": {
    "described": 1.0
  },
  "check described": {
    "above": 1.0
  },
  "described above": {
    "this": 1.0
  },
  "above this": {
    "is": 1.0
  },
  "make sure": {
    "that": 1.0
  },
  "that nobody": {
    "changes": 1.0
  },
  "nobody changes": {
    "the": 1.0
  },
  "record between": {
    "the": 1.0
  },
  "second get": {
    "for": 1.0
  },
  "get for": {
    "concurrency": 1.0
  },
  "put that": {
    "writes": 1.0
  },
  "that writes": {
    "the": 1.0
  },
  "writes the": {
    "user": 1.0
  },
  "disk using": {
    "hold": 1.0
  },
  "using hold": {
    "in": 0.5,
    "this": 0.5
  },
  "this manner": {
    "only": 1.0
  },
  "manner only": {
    "changes": 1.0
  },
  "only changes": {
    "the": 1.0
  },
  "accepted of": {
    "okbutton": 1.0
  },
  "okbutton of": {
    "okbutton": 1.0
  },
  "made hold": {
    "sample": 1.0
  },
  "hold sample": {
    "1": 1.0
  },
  "1 hold": {
    "while": 1.0
  },
  "hold while": {
    "checking": 1.0
  },
  "while checking": {
    "for": 1.0
  },
  "checking for": {
    "changes": 1.0
  },
  "changes reget": {
    "sample": 1.0
  },
  "record already": {
    "held": 1.0
  },
  "already held": {
    "has": 1.0
  },
  "held has": {
    "someone": 1.0
  },
  "has someone": {
    "else": 1.0
  },
  "else got": {
    "it": 1.0
  },
  "got it": {
    "beep": 1.0
  },
  "it beep": {
    "alert": 1.0
  },
  "user show": {
    "25": 1.0
  },
  "show 25": {
    "1": 1.0
  },
  "25 1": {
    "held": 1.0
  },
  "1 held": {
    "by": 1.0
  },
  "held by": {
    "another": 1.0
  },
  "field elsif": {
    "error": 1.0
  },
  "elsif error": {
    "record": 1.0
  },
  "compare crc": {
    "values": 1.0
  },
  "crc values": {
    "for": 1.0
  },
  "values for": {
    "changes": 0.5,
    "example": 0.5
  },
  "changes release": {
    "sample": 1.0
  },
  "release sample": {
    "release": 1.0
  },
  "sample release": {
    "the": 1.0
  },
  "hold savcrc": {
    "crc16": 1.0
  },
  "changed b": {
    "y": 1.0
  },
  "y another": {
    "station": 1.0
  },
  "put these": {
    "ch": 1.0
  },
  "these ch": {
    "anges": 1.0
  },
  "ch anges": {
    "back": 1.0
  },
  "anges back": {
    "in": 1.0
  },
  "loop 61": {
    "developing": 1.0
  },
  "61 developing": {
    "client": 1.0
  },
  "applications this": {
    "change": 0.5,
    "means": 0.5
  },
  "this change": {
    "puts": 1.0
  },
  "change puts": {
    "a": 1.0
  },
  "puts a": {
    "hold": 1.0
  },
  "record only": {
    "long": 1.0
  },
  "only long": {
    "enough": 1.0
  },
  "long enough": {
    "to": 1.0
  },
  "enough to": {
    "determine": 1.0
  },
  "determine if": {
    "it": 1.0
  },
  "user started": {
    "with": 1.0
  },
  "started with": {
    "and": 1.0
  },
  "with and": {
    "write": 1.0
  },
  "if someone": {
    "else": 1.0
  },
  "that fact": {
    "and": 1.0
  },
  "fact and": {
    "allowed": 1.0
  },
  "and allowed": {
    "to": 1.0
  },
  "to try": {
    "again": 1.0
  },
  "try again": {
    "if": 0.2,
    "cycle": 0.2,
    "end": 0.4,
    "the": 0.2
  },
  "record continually": {
    "comes": 1.0
  },
  "continually comes": {
    "up": 1.0
  },
  "up as": {
    "held": 1.0
  },
  "station then": {
    "it": 1.0
  },
  "has probably": {
    "been": 1.0
  },
  "probably been": {
    "left": 1.0
  },
  "been left": {
    "in": 1.0
  },
  "left in": {
    "a": 1.0
  },
  "state by": {
    "a": 1.0
  },
  "crash in": {
    "that": 1.0
  },
  "that case": {
    "the": 1.0
  },
  "hold should": {
    "be": 1.0
  },
  "be released": {
    "by": 1.0
  },
  "by whatever": {
    "action": 1.0
  },
  "system code": {
    "could": 1.0
  },
  "code could": {
    "be": 1.0
  },
  "this eventuality": {
    "but": 1.0
  },
  "eventuality but": {
    "it": 1.0
  },
  "be specific": {
    "to": 1.0
  },
  "system an": {
    "d": 1.0
  },
  "d this": {
    "is": 1.0
  },
  "is generic": {
    "example": 1.0
  },
  "generic example": {
    "code": 1.0
  },
  "code if": {
    "the": 1.0
  },
  "the prevention": {
    "of": 1.0
  },
  "prevention of": {
    "record": 1.0
  },
  "update conflicts": {
    "is": 1.0
  },
  "conflicts is": {
    "a": 1.0
  },
  "a mission": {
    "critical": 1.0
  },
  "mission critical": {
    "concern": 1.0
  },
  "critical concern": {
    "then": 1.0
  },
  "concern then": {
    "hold": 1.0
  },
  "then hold": {
    "could": 1.0
  },
  "hold could": {
    "be": 1.0
  },
  "keep control": {
    "of": 1.0
  },
  "control of": {
    "the": 0.75,
    "a": 0.25
  },
  "record during": {
    "user": 1.0
  },
  "user data": {
    "entry": 1.0
  },
  "one trade": {
    "off": 1.0
  },
  "trade off": {
    "with": 1.0
  },
  "off with": {
    "this": 1.0
  },
  "this use": {
    "of": 1.0
  },
  "the nuisance": {
    "of": 1.0
  },
  "nuisance of": {
    "dealing": 1.0
  },
  "of dealing": {
    "wit": 1.0
  },
  "dealing wit": {
    "h": 1.0
  },
  "wit h": {
    "records": 1.0
  },
  "h records": {
    "that": 1.0
  },
  "are left": {
    "locked": 0.5,
    "empty": 0.5
  },
  "left locked": {
    "when": 0.5,
    "the": 0.5
  },
  "locked when": {
    "users": 1.0
  },
  "when users": {
    "systems": 1.0
  },
  "users systems": {
    "crash": 1.0
  },
  "systems crash": {
    "while": 1.0
  },
  "crash while": {
    "records": 1.0
  },
  "while records": {
    "are": 1.0
  },
  "are held": {
    "correcting": 1.0
  },
  "held correcting": {
    "that": 1.0
  },
  "correcting that": {
    "situation": 1.0
  },
  "that situation": {
    "could": 1.0
  },
  "situation could": {
    "involve": 1.0
  },
  "could involve": {
    "some": 1.0
  },
  "involve some": {
    "manual": 1.0
  },
  "some manual": {
    "work": 1.0
  },
  "manual work": {
    "with": 1.0
  },
  "work with": {
    "file": 1.0
  },
  "with file": {
    "system": 1.0
  },
  "system utilities": {
    "or": 1.0
  },
  "utilities or": {
    "could": 1.0
  },
  "or could": {
    "simply": 1.0
  },
  "could simply": {
    "be": 1.0
  },
  "simply be": {
    "a": 1.0
  },
  "of specific": {
    "coding": 1.0
  },
  "specific coding": {
    "considerations": 1.0
  },
  "coding considerations": {
    "for": 1.0
  },
  "considerations for": {
    "the": 1.0
  },
  "being us": {
    "ed": 1.0
  },
  "us ed": {
    "another": 1.0
  },
  "ed another": {
    "concern": 1.0
  },
  "another concern": {
    "with": 1.0
  },
  "concern with": {
    "using": 1.0
  },
  "hold this": {
    "way": 1.0
  },
  "this way": {
    "comes": 1.0
  },
  "way comes": {
    "when": 1.0
  },
  "comes when": {
    "the": 1.0
  },
  "used does": {
    "not": 1.0
  },
  "not allow": {
    "other": 0.5,
    "the": 0.5
  },
  "allow other": {
    "users": 1.0
  },
  "the held": {
    "records": 1.0
  },
  "held records": {
    "the": 0.3333333333333333,
    "would": 0.3333333333333333,
    "while": 0.3333333333333333
  },
  "records would": {
    "seem": 1.0
  },
  "would seem": {
    "to": 1.0
  },
  "seem to": {
    "disappear": 1.0
  },
  "to disappear": {
    "then": 1.0
  },
  "disappear then": {
    "reappear": 1.0
  },
  "then reappear": {
    "from": 1.0
  },
  "reappear from": {
    "time": 1.0
  },
  "from time": {
    "to": 1.0
  },
  "to time": {
    "as": 1.0
  },
  "as users": {
    "hold": 1.0
  },
  "users hold": {
    "records": 1.0
  },
  "hold records": {
    "either": 1.0
  },
  "records either": {
    "way": 1.0
  },
  "either way": {
    "this": 1.0
  },
  "way this": {
    "met": 1.0
  },
  "this met": {
    "hod": 1.0
  },
  "met hod": {
    "should": 1.0
  },
  "hod should": {
    "probably": 1.0
  },
  "should probably": {
    "not": 1.0
  },
  "probably not": {
    "be": 1.0
  },
  "used unless": {
    "the": 1.0
  },
  "application really": {
    "requires": 1.0
  },
  "really requires": {
    "it": 1.0
  },
  "requires it": {
    "to": 1.0
  },
  "utilize this": {
    "technique": 1.0
  },
  "technique the": {
    "hold": 1.0
  },
  "hold would": {
    "have": 1.0
  },
  "actually retrieves": {
    "the": 1.0
  },
  "most cases": {
    "that": 1.0
  },
  "cases that": {
    "procedure": 1.0
  },
  "procedure would": {
    "display": 1.0
  },
  "would display": {
    "some": 1.0
  },
  "display some": {
    "kind": 1.0
  },
  "of scr": {
    "olling": 1.0
  },
  "scr olling": {
    "list": 1.0
  },
  "olling list": {
    "of": 1.0
  },
  "list of": {
    "records": 1.0
  },
  "records usually": {
    "displayed": 1.0
  },
  "usually displayed": {
    "in": 1.0
  },
  "displayed in": {
    "a": 1.0
  },
  "a list": {
    "box": 1.0
  },
  "list box": {
    "the": 1.0
  },
  "box the": {
    "following": 1.0
  },
  "following example": {
    "code": 1.0
  },
  "demonstrates this": {
    "of": 1.0
  },
  "of list": {
    "list": 1.0
  },
  "list list": {
    "case": 1.0
  },
  "list case": {
    "event": 1.0
  },
  "case event": {
    "of": 1.0
  },
  "event of": {
    "event": 1.0
  },
  "of event": {
    "accepted": 1.0
  },
  "event accepted": {
    "an": 0.5,
    "execute": 0.5
  },
  "accepted an": {
    "existing": 1.0
  },
  "record was": {
    "selected": 1.0
  },
  "was selected": {
    "get": 1.0
  },
  "selected get": {
    "table": 1.0
  },
  "get table": {
    "que": 1.0
  },
  "table que": {
    "choice": 1.0
  },
  "que choice": {
    "get": 1.0
  },
  "choice get": {
    "record": 1.0
  },
  "number from": {
    "the": 1.0
  },
  "queue hold": {
    "sample": 1.0
  },
  "1 arm": {
    "the": 1.0
  },
  "arm the": {
    "hold": 1.0
  },
  "hold reget": {
    "sample": 1.0
  },
  "sample que": {
    "recposition": 1.0
  },
  "que recposition": {
    "and": 1.0
  },
  "recposition and": {
    "get": 1.0
  },
  "message held": {
    "by": 1.0
  },
  "select list": {
    "to": 1.0
  },
  "list to": {
    "try": 1.0
  },
  "again cycle": {
    "else": 1.0
  },
  "if no": {
    "one": 1.0
  },
  "one else": {
    "has": 1.0
  },
  "has it": {
    "action": 0.3333333333333333,
    "locked": 0.6666666666666666
  },
  "changerec set": {
    "up": 1.0
  },
  "set up": {
    "disk": 0.5,
    "a": 0.5
  },
  "up disk": {
    "action": 1.0
  },
  "disk action": {
    "for": 1.0
  },
  "action for": {
    "change": 1.0
  },
  "for change": {
    "update": 1.0
  },
  "change update": {
    "and": 1.0
  },
  "update and": {
    "call": 1.0
  },
  "and call": {
    "the": 1.0
  },
  "handle other": {
    "keycodes": 1.0
  },
  "other keycodes": {
    "goes": 1.0
  },
  "keycodes goes": {
    "here": 1.0
  },
  "technique grossly": {
    "simplifies": 1.0
  },
  "grossly simplifies": {
    "the": 1.0
  },
  "simplifies the": {
    "update": 1.0
  },
  "example update": {
    "procedure": 1.0
  },
  "entry controls": {
    "go": 1.0
  },
  "controls go": {
    "here": 1.0
  },
  "screen display": {
    "display": 1.0
  },
  "field individual": {
    "screen": 1.0
  },
  "field case": {
    "event": 1.0
  },
  "accepted execute": {
    "ac": 1.0
  },
  "execute ac": {
    "tion": 1.0
  },
  "ac tion": {
    "execute": 1.0
  },
  "tion execute": {
    "disk": 1.0
  },
  "case clarion": {
    "language": 0.5,
    "provides": 0.5
  },
  "guide 62": {
    "the": 1.0
  },
  "62 the": {
    "hold": 1.0
  },
  "statement only": {
    "allows": 1.0
  },
  "allows each": {
    "user": 1.0
  },
  "each user": {
    "to": 1.0
  },
  "hold one": {
    "record": 1.0
  },
  "in ea": {
    "ch": 1.0
  },
  "ea ch": {
    "file": 1.0
  },
  "ch file": {
    "if": 1.0
  },
  "to update": {
    "multiple": 0.5,
    "the": 0.5
  },
  "update multiple": {
    "records": 1.0
  },
  "be sure": {
    "that": 1.0
  },
  "user makes": {
    "changes": 1.0
  },
  "makes changes": {
    "to": 1.0
  },
  "records while": {
    "they": 0.5,
    "the": 0.5
  },
  "while they": {
    "are": 1.0
  },
  "updated then": {
    "you": 1.0
  },
  "must lock": {
    "the": 1.0
  },
  "file lock": {
    "and": 0.4,
    "is": 0.4,
    "then": 0.2
  },
  "the lock": {
    "statement": 0.2,
    "is": 0.2,
    "was": 0.2,
    "on": 0.2,
    "cannot": 0.2
  },
  "lock statement": {
    "pr": 1.0
  },
  "statement pr": {
    "events": 1.0
  },
  "pr events": {
    "other": 1.0
  },
  "events other": {
    "users": 1.0
  },
  "from accessing": {
    "any": 0.5,
    "records": 0.5
  },
  "accessing any": {
    "records": 1.0
  },
  "any records": {
    "in": 1.0
  },
  "file until": {
    "you": 1.0
  },
  "you unlock": {
    "it": 1.0
  },
  "unlock it": {
    "just": 1.0
  },
  "like hold": {
    "the": 1.0
  },
  "the effect": {
    "of": 1.0
  },
  "of lock": {
    "is": 0.3333333333333333,
    "would": 0.3333333333333333,
    "in": 0.3333333333333333
  },
  "lock is": {
    "dependent": 0.16666666666666666,
    "not": 0.16666666666666666,
    "usually": 0.16666666666666666,
    "attempted": 0.16666666666666666,
    "successful": 0.16666666666666666,
    "most": 0.16666666666666666
  },
  "crash automatic": {
    "ally": 1.0
  },
  "automatic ally": {
    "unlocks": 1.0
  },
  "ally unlocks": {
    "the": 1.0
  },
  "unlocks the": {
    "file": 1.0
  },
  "others it": {
    "is": 1.0
  },
  "locked the": {
    "specific": 1.0
  },
  "action lock": {
    "takes": 1.0
  },
  "lock takes": {
    "is": 1.0
  },
  "takes is": {
    "described": 1.0
  },
  "s documentation": {
    "because": 0.5,
    "for": 0.5
  },
  "documentation because": {
    "other": 1.0
  },
  "because other": {
    "users": 1.0
  },
  "are completely": {
    "barred": 0.5,
    "independent": 0.5
  },
  "completely barred": {
    "from": 1.0
  },
  "barred from": {
    "accessing": 1.0
  },
  "accessing records": {
    "in": 1.0
  },
  "the locked": {
    "file": 1.0
  },
  "locked file": {
    "lock": 0.5,
    "cycle": 0.5
  },
  "not commonly": {
    "used": 1.0
  },
  "lock would": {
    "be": 1.0
  },
  "index prior": {
    "to": 1.0
  },
  "to using": {
    "it": 1.0
  },
  "using it": {
    "and": 1.0
  },
  "not even": {
    "necessary": 1.0
  },
  "even necessary": {
    "if": 1.0
  },
  "of batch": {
    "update": 1.0
  },
  "batch update": {
    "processing": 1.0
  },
  "update processing": {
    "that": 1.0
  },
  "processing that": {
    "would": 1.0
  },
  "would require": {
    "a": 1.0
  },
  "be locked": {
    "for": 1.0
  },
  "locked for": {
    "a": 1.0
  },
  "significant period": {
    "of": 1.0
  },
  "period of": {
    "time": 1.0
  },
  "time is": {
    "generally": 1.0
  },
  "generally best": {
    "l": 1.0
  },
  "best l": {
    "eft": 1.0
  },
  "l eft": {
    "until": 1.0
  },
  "eft until": {
    "after": 1.0
  },
  "until after": {
    "hours": 1.0
  },
  "after hours": {
    "when": 1.0
  },
  "hours when": {
    "all": 1.0
  },
  "when all": {
    "users": 1.0
  },
  "are gone": {
    "other": 1.0
  },
  "gone other": {
    "than": 1.0
  },
  "than to": {
    "build": 1.0
  },
  "index a": {
    "file": 1.0
  },
  "usually only": {
    "needed": 1.0
  },
  "needed during": {
    "transaction": 1.0
  },
  "during transaction": {
    "processing": 1.0
  },
  "transaction processing": {
    "which": 0.4,
    "oltp": 0.6
  },
  "processing which": {
    "is": 0.5,
    "would": 0.5
  },
  "the subject": {
    "of": 0.5,
    "such": 0.5
  },
  "subject of": {
    "a": 1.0
  },
  "separate essay": {
    "if": 1.0
  },
  "essay if": {
    "an": 1.0
  },
  "application truly": {
    "demands": 1.0
  },
  "truly demands": {
    "a": 1.0
  },
  "demands a": {
    "file": 1.0
  },
  "lock then": {
    "the": 1.0
  },
  "the period": {
    "of": 1.0
  },
  "time d": {
    "uring": 1.0
  },
  "d uring": {
    "which": 1.0
  },
  "uring which": {
    "the": 1.0
  },
  "are denied": {
    "access": 1.0
  },
  "denied access": {
    "should": 1.0
  },
  "access should": {
    "be": 1.0
  },
  "be kept": {
    "to": 0.5,
    "as": 0.5
  },
  "kept to": {
    "an": 0.5,
    "a": 0.5
  },
  "an absolute": {
    "minimum": 1.0
  },
  "absolute minimum": {
    "the": 1.0
  },
  "minimum the": {
    "code": 1.0
  },
  "code between": {
    "the": 1.0
  },
  "its subsequent": {
    "unlock": 1.0
  },
  "subsequent unlock": {
    "statement": 1.0
  },
  "unlock statement": {
    "should": 1.0
  },
  "statement should": {
    "not": 1.0
  },
  "require any": {
    "user": 1.0
  },
  "any user": {
    "input": 1.0
  },
  "input this": {
    "means": 1.0
  },
  "code should": {
    "be": 1.0
  },
  "written such": {
    "that": 1.0
  },
  "such that": {
    "an": 0.5,
    "network": 0.5
  },
  "an end": {
    "user": 1.0
  },
  "user cann": {
    "ot": 1.0
  },
  "cann ot": {
    "go": 1.0
  },
  "ot go": {
    "to": 1.0
  },
  "to lunch": {
    "leaving": 1.0
  },
  "lunch leaving": {
    "a": 1.0
  },
  "leaving a": {
    "file": 1.0
  },
  "file locked": {
    "specifically": 1.0
  },
  "locked specifically": {
    "lock": 1.0
  },
  "specifically lock": {
    "should": 1.0
  },
  "lock should": {
    "come": 1.0
  },
  "should come": {
    "immediately": 1.0
  },
  "come immediately": {
    "before": 1.0
  },
  "build occurs": {
    "and": 1.0
  },
  "occurs and": {
    "the": 1.0
  },
  "file should": {
    "be": 1.0
  },
  "be unlocked": {
    "as": 1.0
  },
  "unlocked as": {
    "soon": 1.0
  },
  "as soon": {
    "as": 1.0
  },
  "soon as": {
    "it": 1.0
  },
  "as it": {
    "is": 1.0
  },
  "complete reportproc": {
    "procedure": 1.0
  },
  "reportproc procedure": {
    "sample": 1.0
  },
  "procedure sample": {
    "file": 1.0
  },
  "field1 field2ndx": {
    "index": 1.0
  },
  "field2 an": {
    "index": 1.0
  },
  "10 report": {
    "report": 1.0
  },
  "report report": {
    "report": 0.5,
    "declaration": 0.5
  },
  "report declaration": {
    "statements": 1.0
  },
  "declaration statements": {
    "go": 1.0
  },
  "statements go": {
    "here": 1.0
  },
  "1 lock": {
    "the": 1.0
  },
  "error file": {
    "is": 1.0
  },
  "is already": {
    "locked": 0.8,
    "valid": 0.2
  },
  "already locked": {
    "check": 0.25,
    "cycle": 0.25,
    "unlock": 0.25,
    "by": 0.25
  },
  "locked check": {
    "for": 1.0
  },
  "other locks": {
    "beep": 1.0
  },
  "locks beep": {
    "alert": 1.0
  },
  "message locked": {
    "by": 1.0
  },
  "locked by": {
    "another": 1.0
  },
  "station return": {
    "and": 1.0
  },
  "return and": {
    "get": 1.0
  },
  "end build": {
    "sam": 1.0
  },
  "sam field2ndx": {
    "build": 1.0
  },
  "field2ndx build": {
    "the": 1.0
  },
  "sample unlock": {
    "the": 1.0
  },
  "open report": {
    "set": 1.0
  },
  "report set": {
    "sam": 1.0
  },
  "sam field2n": {
    "dx": 1.0
  },
  "field2n dx": {
    "use": 1.0
  },
  "dx use": {
    "the": 1.0
  },
  "index loop": {
    "next": 1.0
  },
  "break report": {
    "processing": 1.0
  },
  "report processing": {
    "code": 1.0
  },
  "processing code": {
    "goes": 1.0
  },
  "code opens": {
    "the": 1.0
  },
  "in access": {
    "mode": 1.0
  },
  "mode 42h": {
    "read": 1.0
  },
  "42h read": {
    "write": 1.0
  },
  "none for": {
    "fully": 1.0
  },
  "for fully": {
    "shared": 1.0
  },
  "fully shared": {
    "access": 1.0
  },
  "is attempted": {
    "for": 0.5,
    "if": 0.5
  },
  "attempted for": {
    "one": 1.0
  },
  "one second": {
    "if": 0.5,
    "pause": 0.5
  },
  "second if": {
    "it": 0.3333333333333333,
    "error": 0.6666666666666666
  },
  "is successful": {
    "the": 1.0
  },
  "successful the": {
    "build": 0.5,
    "lock": 0.5
  },
  "build immediately": {
    "executes": 1.0
  },
  "immediately executes": {
    "if": 1.0
  },
  "lock was": {
    "unsuccessful": 1.0
  },
  "unsuccessful the": {
    "user": 1.0
  },
  "alerted and": {
    "returned": 1.0
  },
  "that called": {
    "the": 1.0
  },
  "the report": {
    "once": 0.5,
    "is": 0.5
  },
  "report once": {
    "the": 1.0
  },
  "build is": {
    "complete": 1.0
  },
  "complete unlock": {
    "once": 1.0
  },
  "unlock once": {
    "again": 1.0
  },
  "once again": {
    "allows": 1.0
  },
  "again allows": {
    "other": 1.0
  },
  "users access": {
    "t": 1.0
  },
  "access t": {
    "o": 1.0
  },
  "o the": {
    "file": 1.0
  },
  "report is": {
    "run": 1.0
  },
  "run based": {
    "on": 1.0
  },
  "the sort": {
    "order": 1.0
  },
  "index 63": {
    "developing": 1.0
  },
  "63 developing": {
    "client": 1.0
  },
  "applications deadly": {
    "embrace": 1.0
  },
  "embrace there": {
    "are": 1.0
  },
  "two forms": {
    "of": 1.0
  },
  "of deadly": {
    "embrace": 1.0
  },
  "embrace the": {
    "first": 1.0
  },
  "first occurs": {
    "when": 1.0
  },
  "occurs when": {
    "two": 1.0
  },
  "when two": {
    "users": 1.0
  },
  "users attempt": {
    "to": 1.0
  },
  "to lock": {
    "the": 0.25,
    "file": 0.5,
    "that": 0.25
  },
  "of files": {
    "in": 0.5,
    "you": 0.5
  },
  "separate orders": {
    "of": 1.0
  },
  "of sequence": {
    "the": 1.0
  },
  "sequence the": {
    "scenario": 1.0
  },
  "the scenario": {
    "is": 1.0
  },
  "scenario is": {
    "user": 1.0
  },
  "is user": {
    "a": 1.0
  },
  "a locks": {
    "file": 1.0
  },
  "locks file": {
    "a": 0.5,
    "b": 0.5
  },
  "user b": {
    "locks": 0.3333333333333333,
    "has": 0.3333333333333333,
    "attempts": 0.3333333333333333
  },
  "b locks": {
    "file": 1.0
  },
  "b at": {
    "the": 1.0
  },
  "time user": {
    "a": 1.0
  },
  "a attempts": {
    "to": 1.0
  },
  "lock file": {
    "b": 0.5,
    "a": 0.5
  },
  "cannot because": {
    "user": 1.0
  },
  "because user": {
    "b": 0.5,
    "a": 0.5
  },
  "b has": {
    "it": 1.0
  },
  "it locked": {
    "user": 0.5,
    "this": 0.5
  },
  "locked user": {
    "b": 1.0
  },
  "b attempts": {
    "to": 1.0
  },
  "a and": {
    "cannot": 1.0
  },
  "a has": {
    "it": 1.0
  },
  "locked this": {
    "leaves": 0.5,
    "implies": 0.5
  },
  "this leaves": {
    "both": 1.0
  },
  "leaves both": {
    "users": 1.0
  },
  "users hung": {
    "up": 1.0
  },
  "hung up": {
    "attem": 1.0
  },
  "up attem": {
    "pting": 1.0
  },
  "attem pting": {
    "to": 1.0
  },
  "pting to": {
    "gain": 1.0
  },
  "to gain": {
    "control": 0.5,
    "exclusive": 0.5
  },
  "gain control": {
    "of": 1.0
  },
  "the solution": {
    "to": 1.0
  },
  "solution to": {
    "this": 1.0
  },
  "this dilemma": {
    "is": 1.0
  },
  "dilemma is": {
    "the": 1.0
  },
  "the adoption": {
    "of": 1.0
  },
  "adoption of": {
    "a": 0.5,
    "co": 0.5
  },
  "simple coding": {
    "convention": 1.0
  },
  "coding convention": {
    "always": 1.0
  },
  "convention always": {
    "lock": 1.0
  },
  "always lock": {
    "files": 1.0
  },
  "lock files": {
    "in": 1.0
  },
  "same order": {
    "alphabetical": 1.0
  },
  "order alphabetical": {
    "works": 1.0
  },
  "alphabetical works": {
    "just": 1.0
  },
  "works just": {
    "fine": 1.0
  },
  "just fine": {
    "and": 1.0
  },
  "fine and": {
    "trap": 1.0
  },
  "and trap": {
    "for": 1.0
  },
  "trap for": {
    "other": 0.5,
    "held": 0.5
  },
  "users locks": {
    "this": 1.0
  },
  "locks this": {
    "example": 1.0
  },
  "example demonstrates": {
    "the": 1.0
  },
  "the principle": {
    "loop": 1.0
  },
  "principle loop": {
    "lock": 1.0
  },
  "loop lock": {
    "filea": 1.0
  },
  "lock filea": {
    "1": 1.0
  },
  "filea 1": {
    "attempt": 1.0
  },
  "1 attempt": {
    "lock": 1.0
  },
  "attempt lock": {
    "for": 1.0
  },
  "for 1": {
    "second": 1.0
  },
  "1 second": {
    "if": 1.0
  },
  "locked cycle": {
    "and": 1.0
  },
  "cycle and": {
    "try": 1.0
  },
  "again end": {
    "lock": 0.5,
    "break": 0.5
  },
  "end lock": {
    "fileb": 1.0
  },
  "lock fileb": {
    "1": 1.0
  },
  "fileb 1": {
    "attempt": 1.0
  },
  "locked unlock": {
    "filea": 1.0
  },
  "unlock filea": {
    "unlock": 1.0
  },
  "filea unlock": {
    "the": 1.0
  },
  "file cycle": {
    "and": 1.0
  },
  "end break": {
    "break": 1.0
  },
  "break from": {
    "loop": 0.5,
    "the": 0.5
  },
  "from loop": {
    "when": 1.0
  },
  "loop when": {
    "both": 1.0
  },
  "when both": {
    "locked": 1.0
  },
  "both locked": {
    "end": 1.0
  },
  "locked end": {
    "this": 1.0
  },
  "will ev": {
    "entually": 1.0
  },
  "ev entually": {
    "lock": 1.0
  },
  "entually lock": {
    "both": 1.0
  },
  "lock both": {
    "files": 1.0
  },
  "both files": {
    "if": 0.5,
    "are": 0.5
  },
  "if filea": {
    "is": 1.0
  },
  "filea is": {
    "already": 0.5,
    "immediately": 0.5
  },
  "another user": {
    "the": 0.3333333333333333,
    "filea": 0.3333333333333333,
    "to": 0.3333333333333333
  },
  "user the": {
    "loop": 1.0
  },
  "loop will": {
    "try": 1.0
  },
  "will try": {
    "again": 1.0
  },
  "again the": {
    "one": 0.5,
    "break": 0.5
  },
  "second pause": {
    "allows": 1.0
  },
  "pause allows": {
    "the": 1.0
  },
  "a chance": {
    "to": 1.0
  },
  "chance to": {
    "complete": 1.0
  },
  "to complete": {
    "their": 1.0
  },
  "complete their": {
    "action": 1.0
  },
  "their action": {
    "if": 1.0
  },
  "action if": {
    "the": 1.0
  },
  "first lock": {
    "is": 1.0
  },
  "lock on": {
    "fileb": 0.5,
    "the": 0.5
  },
  "on fileb": {
    "is": 1.0
  },
  "fileb is": {
    "attempted": 0.5,
    "alread": 0.5
  },
  "attempted if": {
    "fileb": 1.0
  },
  "if fileb": {
    "is": 1.0
  },
  "is alread": {
    "y": 1.0
  },
  "alread y": {
    "locked": 1.0
  },
  "y locked": {
    "by": 1.0
  },
  "user filea": {
    "is": 1.0
  },
  "is immediately": {
    "unlocked": 1.0
  },
  "immediately unlocked": {
    "for": 1.0
  },
  "unlocked for": {
    "other": 1.0
  },
  "s use": {
    "then": 1.0
  },
  "use then": {
    "re": 1.0
  },
  "re try": {
    "sequence": 1.0
  },
  "try sequence": {
    "occurs": 1.0
  },
  "sequence occurs": {
    "again": 1.0
  },
  "occurs again": {
    "the": 1.0
  },
  "the break": {
    "from": 1.0
  },
  "loop in": {
    "this": 1.0
  },
  "example is": {
    "only": 1.0
  },
  "allowed after": {
    "both": 1.0
  },
  "after both": {
    "files": 1.0
  },
  "are successfully": {
    "locked": 1.0
  },
  "successfully locked": {
    "mixing": 1.0
  },
  "locked mixing": {
    "the": 1.0
  },
  "mixing the": {
    "use": 1.0
  },
  "and lock": {
    "can": 0.5,
    "on": 0.5
  },
  "lock can": {
    "result": 1.0
  },
  "can result": {
    "in": 1.0
  },
  "result in": {
    "the": 1.0
  },
  "second form": {
    "of": 1.0
  },
  "embrace in": {
    "some": 1.0
  },
  "systems lock": {
    "and": 1.0
  },
  "and hold": {
    "are": 1.0
  },
  "hold are": {
    "completely": 1.0
  },
  "independent therefore": {
    "it": 1.0
  },
  "one user": {
    "to": 1.0
  },
  "and another": {
    "user": 1.0
  },
  "lock that": {
    "same": 1.0
  },
  "that same": {
    "file": 1.0
  },
  "user with": {
    "the": 1.0
  },
  "hold cannot": {
    "write": 1.0
  },
  "cannot write": {
    "the": 0.5,
    "to": 0.5
  },
  "back or": {
    "even": 1.0
  },
  "or even": {
    "release": 1.0
  },
  "even release": {
    "it": 1.0
  },
  "lock cannot": {
    "write": 1.0
  },
  "that held": {
    "record": 1.0
  },
  "held record": {
    "this": 0.5,
    "trapping": 0.5
  },
  "record this": {
    "situation": 1.0
  },
  "situation may": {
    "be": 1.0
  },
  "of two": {
    "ways": 1.0
  },
  "ways you": {
    "may": 1.0
  },
  "may choose": {
    "to": 1.0
  },
  "choose to": {
    "never": 0.5,
    "always": 0.5
  },
  "to never": {
    "mix": 1.0
  },
  "never mix": {
    "hold": 1.0
  },
  "mix hold": {
    "and": 1.0
  },
  "limits you": {
    "to": 1.0
  },
  "hold only": {
    "the": 1.0
  },
  "only the": {
    "most": 0.25,
    "result": 0.25,
    "specified": 0.25,
    "records": 0.25
  },
  "most commo": {
    "n": 1.0
  },
  "commo n": {
    "solution": 1.0
  },
  "n solution": {
    "or": 1.0
  },
  "solution or": {
    "lock": 1.0
  },
  "or lock": {
    "only": 1.0
  },
  "lock only": {
    "this": 1.0
  },
  "only this": {
    "solution": 1.0
  },
  "this solution": {
    "must": 1.0
  },
  "solution must": {
    "be": 1.0
  },
  "all applications": {
    "that": 0.5,
    "prop": 0.5
  },
  "that write": {
    "to": 1.0
  },
  "common set": {
    "of": 1.0
  },
  "files you": {
    "may": 1.0
  },
  "to always": {
    "trap": 1.0
  },
  "always trap": {
    "for": 1.0
  },
  "for held": {
    "records": 1.0
  },
  "is locked": {
    "this": 1.0
  },
  "this implies": {
    "that": 1.0
  },
  "implies that": {
    "you": 1.0
  },
  "know how": {
    "you": 1.0
  },
  "the deadly": {
    "embrace": 1.0
  },
  "embrace record": {
    "when": 1.0
  },
  "is detected": {
    "the": 1.0
  },
  "detected the": {
    "first": 1.0
  },
  "first solution": {
    "is": 1.0
  },
  "solution is": {
    "by": 1.0
  },
  "is by": {
    "far": 1.0
  },
  "second takes": {
    "you": 1.0
  },
  "takes you": {
    "into": 1.0
  },
  "you into": {
    "an": 1.0
  },
  "into an": {
    "area": 1.0
  },
  "an area": {
    "of": 1.0
  },
  "area of": {
    "programming": 1.0
  },
  "programming that": {
    "is": 1.0
  },
  "probably better": {
    "served": 1.0
  },
  "better served": {
    "by": 1.0
  },
  "served by": {
    "transaction": 1.0
  },
  "by transaction": {
    "processing": 1.0
  },
  "which would": {
    "include": 1.0
  },
  "would include": {
    "held": 1.0
  },
  "include held": {
    "record": 1.0
  },
  "record trapping": {
    "one": 1.0
  },
  "trapping one": {
    "final": 1.0
  },
  "one final": {
    "note": 1.0
  },
  "final note": {
    "some": 1.0
  },
  "note some": {
    "file": 1.0
  },
  "drivers can": {
    "perform": 1.0
  },
  "perform exclusive": {
    "locks": 1.0
  },
  "exclusive locks": {
    "internally": 1.0
  },
  "locks internally": {
    "on": 1.0
  },
  "internally on": {
    "update": 1.0
  },
  "on update": {
    "operations": 1.0
  },
  "update operations": {
    "and": 1.0
  },
  "operations and": {
    "stream": 1.0
  },
  "and stream": {
    "the": 1.0
  },
  "stream the": {
    "use": 1.0
  },
  "a stream": {
    "statement": 1.0
  },
  "stream statement": {
    "is": 1.0
  },
  "not safe": {
    "from": 1.0
  },
  "safe from": {
    "deadlock": 1.0
  },
  "from deadlock": {
    "on": 1.0
  },
  "deadlock on": {
    "multiple": 1.0
  },
  "on multiple": {
    "files": 1.0
  },
  "multiple files": {
    "for": 1.0
  },
  "for write": {
    "operations": 1.0
  },
  "write operations": {
    "you": 1.0
  },
  "operations you": {
    "should": 1.0
  },
  "should use": {
    "logout": 1.0
  },
  "use logout": {
    "instead": 1.0
  },
  "logout instead": {
    "of": 1.0
  },
  "lock in": {
    "these": 1.0
  },
  "in these": {
    "situations": 0.5,
    "columns": 0.5
  },
  "these situations": {
    "clarion": 1.0
  },
  "situations clarion": {
    "language": 1.0
  },
  "guide 64": {
    "summary": 1.0
  },
  "64 summary": {
    "a": 1.0
  },
  "summary a": {
    "file": 1.0
  },
  "opened before": {
    "its": 1.0
  },
  "before its": {
    "records": 1.0
  },
  "its records": {
    "may": 1.0
  },
  "records may": {
    "be": 1.0
  },
  "accessed the": {
    "access": 1.0
  },
  "mode determines": {
    "the": 1.0
  },
  "determines the": {
    "type": 1.0
  },
  "access dos": {
    "grants": 1.0
  },
  "dos grants": {
    "to": 1.0
  },
  "grants to": {
    "the": 1.0
  },
  "users multi": {
    "user": 1.0
  },
  "user programming": {
    "must": 1.0
  },
  "programming must": {
    "always": 1.0
  },
  "must always": {
    "take": 1.0
  },
  "always take": {
    "into": 1.0
  },
  "take into": {
    "consideration": 1.0
  },
  "into consideration": {
    "the": 1.0
  },
  "consideration the": {
    "possibility": 1.0
  },
  "possibility of": {
    "multiple": 0.5,
    "an": 0.5
  },
  "multiple users": {
    "accessing": 1.0
  },
  "users accessing": {
    "the": 1.0
  },
  "accessing the": {
    "same": 1.0
  },
  "time concurrency": {
    "checking": 1.0
  },
  "done to": {
    "ensure": 1.0
  },
  "that user": {
    "updates": 1.0
  },
  "updates don": {
    "t": 1.0
  },
  "t overwrite": {
    "other": 1.0
  },
  "overwrite other": {
    "user": 1.0
  },
  "records hold": {
    "is": 1.0
  },
  "with concurrency": {
    "checking": 1.0
  },
  "checking to": {
    "ensure": 1.0
  },
  "user can": {
    "c": 1.0
  },
  "can c": {
    "hange": 1.0
  },
  "c hange": {
    "the": 1.0
  },
  "hange the": {
    "record": 1.0
  },
  "being compared": {
    "for": 1.0
  },
  "compared for": {
    "previous": 1.0
  },
  "for previous": {
    "changes": 1.0
  },
  "previous changes": {
    "lock": 1.0
  },
  "changes lock": {
    "is": 1.0
  },
  "gain exclusive": {
    "control": 1.0
  },
  "exclusive control": {
    "of": 1.0
  },
  "file while": {
    "you": 1.0
  },
  "while you": {
    "build": 1.0
  },
  "embrace is": {
    "a": 1.0
  },
  "a programming": {
    "consideration": 1.0
  },
  "programming consideration": {
    "most": 1.0
  },
  "consideration most": {
    "easily": 1.0
  },
  "most easily": {
    "dealt": 1.0
  },
  "easily dealt": {
    "with": 1.0
  },
  "dealt with": {
    "through": 1.0
  },
  "with through": {
    "the": 1.0
  },
  "of co": {
    "nsistent": 1.0
  },
  "co nsistent": {
    "program": 1.0
  },
  "nsistent program": {
    "coding": 1.0
  },
  "program coding": {
    "conventions": 1.0
  },
  "coding conventions": {
    "65": 1.0
  },
  "conventions 65": {
    "developing": 1.0
  },
  "65 developing": {
    "client": 1.0
  },
  "applications 7": {
    "developing": 1.0
  },
  "applications introduction": {
    "to": 1.0
  },
  "server client": {
    "server": 1.0
  },
  "defined what": {
    "exactly": 1.0
  },
  "what exactly": {
    "constitutes": 1.0
  },
  "exactly constitutes": {
    "client": 1.0
  },
  "constitutes client": {
    "server": 1.0
  },
  "server computing": {
    "to": 0.16666666666666666,
    "comes": 0.16666666666666666,
    "is": 0.16666666666666666,
    "that": 0.16666666666666666,
    "programmatic": 0.16666666666666666,
    "therefore": 0.16666666666666666
  },
  "computing to": {
    "some": 1.0
  },
  "some it": {
    "indicates": 1.0
  },
  "it indicates": {
    "the": 1.0
  },
  "indicates the": {
    "use": 1.0
  },
  "of groupware": {
    "programs": 1.0
  },
  "groupware programs": {
    "such": 1.0
  },
  "programs such": {
    "as": 1.0
  },
  "as lotus": {
    "notes": 1.0
  },
  "lotus notes": {
    "or": 1.0
  },
  "notes or": {
    "object": 1.0
  },
  "or object": {
    "linking": 1.0
  },
  "object linking": {
    "and": 1.0
  },
  "linking and": {
    "embedding": 1.0
  },
  "and embedding": {
    "ole": 1.0
  },
  "embedding ole": {
    "between": 1.0
  },
  "ole between": {
    "ole": 1.0
  },
  "between ole": {
    "client": 1.0
  },
  "ole client": {
    "and": 1.0
  },
  "client and": {
    "ole": 1.0
  },
  "and ole": {
    "server": 1.0
  },
  "ole server": {
    "applications": 1.0
  },
  "applications or": {
    "just": 1.0
  },
  "or just": {
    "any": 1.0
  },
  "just any": {
    "program": 1.0
  },
  "any program": {
    "that": 1.0
  },
  "program that": {
    "splits": 1.0
  },
  "that splits": {
    "task": 1.0
  },
  "splits task": {
    "completion": 1.0
  },
  "task completion": {
    "between": 1.0
  },
  "completion between": {
    "client": 1.0
  },
  "between client": {
    "workstations": 1.0
  },
  "client workstations": {
    "and": 0.6666666666666666,
    "however": 0.3333333333333333
  },
  "workstations and": {
    "network": 0.5,
    "the": 0.5
  },
  "network servers": {
    "there": 1.0
  },
  "servers there": {
    "are": 1.0
  },
  "also many": {
    "buzzwords": 1.0
  },
  "many buzzwords": {
    "that": 1.0
  },
  "buzzwords that": {
    "go": 1.0
  },
  "that go": {
    "along": 1.0
  },
  "go along": {
    "with": 1.0
  },
  "along with": {
    "the": 1.0
  },
  "subject such": {
    "as": 1.0
  },
  "as downsizing": {
    "and": 1.0
  },
  "downsizing and": {
    "rightsizing": 1.0
  },
  "and rightsizing": {
    "at": 1.0
  },
  "rightsizing at": {
    "its": 1.0
  },
  "at its": {
    "most": 1.0
  },
  "its most": {
    "basic": 1.0
  },
  "most basic": {
    "level": 1.0
  },
  "basic level": {
    "the": 1.0
  },
  "level the": {
    "broadest": 1.0
  },
  "the broadest": {
    "definition": 1.0
  },
  "broadest definition": {
    "of": 1.0
  },
  "computing comes": {
    "down": 1.0
  },
  "comes down": {
    "to": 1.0
  },
  "a client": {
    "workstation": 0.75,
    "server": 0.25
  },
  "client workstation": {
    "computer": 0.3333333333333333,
    "and": 0.6666666666666666
  },
  "workstation computer": {
    "sends": 1.0
  },
  "computer sends": {
    "a": 1.0
  },
  "sends a": {
    "message": 1.0
  },
  "a message": {
    "requesting": 1.0
  },
  "message requesting": {
    "some": 1.0
  },
  "requesting some": {
    "kind": 1.0
  },
  "of service": {
    "across": 1.0
  },
  "service across": {
    "a": 1.0
  },
  "across a": {
    "network": 1.0
  },
  "a network": {
    "of": 0.5,
    "server": 0.5
  },
  "network of": {
    "some": 1.0
  },
  "kind to": {
    "a": 1.0
  },
  "a server": {
    "computer": 1.0
  },
  "server computer": {
    "which": 1.0
  },
  "computer which": {
    "processes": 1.0
  },
  "which processes": {
    "the": 1.0
  },
  "the service": {
    "request": 1.0
  },
  "service request": {
    "and": 1.0
  },
  "request and": {
    "responds": 1.0
  },
  "and responds": {
    "with": 1.0
  },
  "responds with": {
    "either": 1.0
  },
  "with either": {
    "a": 1.0
  },
  "either a": {
    "return": 1.0
  },
  "return message": {
    "returning": 1.0
  },
  "message returning": {
    "requested": 1.0
  },
  "returning requested": {
    "data": 1.0
  },
  "requested data": {
    "or": 0.5,
    "the": 0.5
  },
  "or an": {
    "acknowledgement": 1.0
  },
  "an acknowledgement": {
    "no": 1.0
  },
  "acknowledgement no": {
    "matter": 1.0
  },
  "matter what": {
    "form": 0.5,
    "application": 0.5
  },
  "what form": {
    "it": 1.0
  },
  "form it": {
    "takes": 1.0
  },
  "the ultimate": {
    "purpose": 1.0
  },
  "ultimate purpose": {
    "of": 1.0
  },
  "computing is": {
    "to": 1.0
  },
  "most efficient": {
    "use": 1.0
  },
  "efficient use": {
    "of": 1.0
  },
  "the computing": {
    "resources": 1.0
  },
  "computing resources": {
    "available": 1.0
  },
  "resources available": {
    "on": 1.0
  },
  "an enterprise": {
    "wide": 1.0
  },
  "enterprise wide": {
    "basis": 1.0
  },
  "wide basis": {
    "clarion": 1.0
  },
  "basis clarion": {
    "is": 1.0
  },
  "is optimized": {
    "to": 1.0
  },
  "optimized to": {
    "create": 0.5,
    "use": 0.5
  },
  "create business": {
    "database": 1.0
  },
  "common type": {
    "of": 1.0
  },
  "applications created": {
    "with": 1.0
  },
  "created with": {
    "clarion": 1.0
  },
  "with clarion": {
    "are": 1.0
  },
  "clarion are": {
    "the": 1.0
  },
  "type where": {
    "the": 1.0
  },
  "program executes": {
    "on": 1.0
  },
  "executes on": {
    "a": 1.0
  },
  "workstation and": {
    "accesses": 0.5,
    "requesting": 0.5
  },
  "and accesses": {
    "a": 1.0
  },
  "accesses a": {
    "database": 1.0
  },
  "a database": {
    "server": 0.4,
    "engine": 0.2,
    "over": 0.2,
    "is": 0.2
  },
  "database server": {
    "engine": 0.029411764705882353,
    "in": 0.058823529411764705,
    "by": 0.058823529411764705,
    "prop": 0.058823529411764705,
    "usually": 0.029411764705882353,
    "can": 0.08823529411764706,
    "will": 0.058823529411764705,
    "the": 0.058823529411764705,
    "you": 0.058823529411764705,
    "may": 0.029411764705882353,
    "performs": 0.029411764705882353,
    "to": 0.058823529411764705,
    "returns": 0.029411764705882353,
    "this": 0.058823529411764705,
    "t": 0.029411764705882353,
    "when": 0.029411764705882353,
    "for": 0.058823529411764705,
    "while": 0.029411764705882353,
    "given": 0.029411764705882353,
    "note": 0.029411764705882353,
    "supports": 0.029411764705882353,
    "s": 0.058823529411764705
  },
  "server engine": {
    "frequently": 1.0
  },
  "engine frequently": {
    "sql": 1.0
  },
  "frequently sql": {
    "based": 1.0
  },
  "sql based": {
    "located": 0.2,
    "database": 0.8
  },
  "based located": {
    "on": 1.0
  },
  "located on": {
    "a": 1.0
  },
  "server in": {
    "the": 0.5,
    "this": 0.5
  },
  "network therefore": {
    "for": 1.0
  },
  "therefore for": {
    "the": 0.5,
    "file": 0.5
  },
  "the purposes": {
    "of": 1.0
  },
  "purposes of": {
    "this": 1.0
  },
  "discussion the": {
    "definition": 1.0
  },
  "computing that": {
    "we": 1.0
  },
  "will use": {
    "is": 1.0
  },
  "use is": {
    "this": 1.0
  },
  "this creating": {
    "database": 1.0
  },
  "creating database": {
    "applications": 1.0
  },
  "logically partition": {
    "the": 1.0
  },
  "partition the": {
    "workload": 1.0
  },
  "the workload": {
    "between": 1.0
  },
  "workload between": {
    "the": 1.0
  },
  "the client": {
    "workstations": 0.058823529411764705,
    "application": 0.6470588235294118,
    "does": 0.058823529411764705,
    "eliminating": 0.058823529411764705,
    "applic": 0.058823529411764705,
    "machine": 0.11764705882352941
  },
  "the server": {
    "based": 1.0
  },
  "server based": {
    "database": 1.0
  },
  "based database": {
    "engine": 0.2,
    "servers": 0.6,
    "systems": 0.2
  },
  "database engine": {
    "so": 0.25,
    "such": 0.25,
    "requires": 0.25,
    "to": 0.25
  },
  "engine so": {
    "that": 1.0
  },
  "that maximum": {
    "performance": 1.0
  },
  "maximum performance": {
    "efficiency": 1.0
  },
  "performance efficiency": {
    "is": 1.0
  },
  "efficiency is": {
    "maintained": 1.0
  },
  "is maintained": {
    "throughout": 1.0
  },
  "maintained throughout": {
    "the": 1.0
  },
  "throughout the": {
    "network": 1.0
  },
  "network types": {
    "of": 1.0
  },
  "database applicati": {
    "ons": 1.0
  },
  "applicati ons": {
    "there": 1.0
  },
  "ons there": {
    "are": 1.0
  },
  "major categories": {
    "of": 1.0
  },
  "categories of": {
    "client": 1.0
  },
  "applications on": {
    "line": 1.0
  },
  "on line": {
    "transaction": 0.75,
    "archival": 0.25
  },
  "line transaction": {
    "processing": 1.0
  },
  "processing oltp": {
    "and": 0.3333333333333333,
    "oltp": 0.3333333333333333,
    "category": 0.3333333333333333
  },
  "oltp and": {
    "decision": 1.0
  },
  "and decision": {
    "support": 1.0
  },
  "decision support": {
    "systems": 1.0
  },
  "support systems": {
    "dss": 1.0
  },
  "systems dss": {
    "on": 0.3333333333333333,
    "dss": 0.3333333333333333,
    "used": 0.3333333333333333
  },
  "dss on": {
    "line": 1.0
  },
  "oltp oltp": {
    "applications": 1.0
  },
  "oltp applications": {
    "are": 0.5,
    "require": 0.5
  },
  "are built": {
    "to": 1.0
  },
  "built to": {
    "continually": 0.5,
    "access": 0.5
  },
  "to continually": {
    "maintain": 1.0
  },
  "continually maintain": {
    "an": 1.0
  },
  "maintain an": {
    "d": 1.0
  },
  "d update": {
    "the": 1.0
  },
  "database in": {
    "real": 0.3333333333333333,
    "the": 0.3333333333333333,
    "most": 0.3333333333333333
  },
  "in real": {
    "time": 1.0
  },
  "real time": {
    "this": 1.0
  },
  "time this": {
    "means": 1.0
  },
  "means oltp": {
    "applications": 1.0
  },
  "applications require": {
    "high": 1.0
  },
  "require high": {
    "performance": 1.0
  },
  "high performance": {
    "from": 1.0
  },
  "performance from": {
    "both": 1.0
  },
  "from both": {
    "the": 0.5,
    "directions": 0.5
  },
  "the hardware": {
    "and": 1.0
  },
  "hardware and": {
    "software": 1.0
  },
  "and software": {
    "so": 1.0
  },
  "software so": {
    "that": 1.0
  },
  "that users": {
    "are": 1.0
  },
  "not kept": {
    "waiting": 1.0
  },
  "kept waiting": {
    "for": 1.0
  },
  "waiting for": {
    "any": 1.0
  },
  "any requested": {
    "information": 1.0
  },
  "requested information": {
    "for": 1.0
  },
  "for more": {
    "than": 0.5,
    "efficient": 0.5
  },
  "than a": {
    "very": 1.0
  },
  "very few": {
    "seconds": 1.0
  },
  "few seconds": {
    "decision": 1.0
  },
  "seconds decision": {
    "support": 1.0
  },
  "dss dss": {
    "applications": 1.0
  },
  "dss applications": {
    "are": 1.0
  },
  "are usually": {
    "used": 1.0
  },
  "a company": {
    "s": 1.0
  },
  "company s": {
    "management": 1.0
  },
  "s management": {
    "for": 1.0
  },
  "management for": {
    "stored": 1.0
  },
  "for stored": {
    "or": 1.0
  },
  "stored or": {
    "ad": 1.0
  },
  "or ad": {
    "hoc": 1.0
  },
  "ad hoc": {
    "queries": 0.4,
    "reports": 0.2,
    "query": 0.4
  },
  "hoc queries": {
    "to": 0.5,
    "your": 0.5
  },
  "queries to": {
    "monitor": 1.0
  },
  "to monitor": {
    "the": 1.0
  },
  "monitor the": {
    "state": 1.0
  },
  "the state": {
    "of": 1.0
  },
  "the company": {
    "this": 1.0
  },
  "company this": {
    "usually": 1.0
  },
  "this usually": {
    "means": 1.0
  },
  "usually means": {
    "the": 1.0
  },
  "data does": {
    "not": 1.0
  },
  "be quite": {
    "so": 0.5,
    "efficient": 0.5
  },
  "quite so": {
    "up": 1.0
  },
  "so up": {
    "to": 1.0
  },
  "the minute": {
    "and": 1.0
  },
  "minute and": {
    "response": 1.0
  },
  "and response": {
    "times": 1.0
  },
  "response times": {
    "are": 0.5,
    "the": 0.5
  },
  "times are": {
    "not": 1.0
  },
  "not nearly": {
    "as": 1.0
  },
  "nearly as": {
    "crit": 1.0
  },
  "as crit": {
    "ical": 1.0
  },
  "crit ical": {
    "frequently": 1.0
  },
  "ical frequently": {
    "dss": 1.0
  },
  "frequently dss": {
    "applications": 1.0
  },
  "access on": {
    "line": 1.0
  },
  "line archival": {
    "data": 1.0
  },
  "archival data": {
    "or": 1.0
  },
  "a replication": {
    "of": 1.0
  },
  "replication of": {
    "the": 1.0
  },
  "database that": {
    "is": 1.0
  },
  "is updated": {
    "only": 1.0
  },
  "updated only": {
    "at": 1.0
  },
  "only at": {
    "timed": 1.0
  },
  "at timed": {
    "intervals": 1.0
  },
  "timed intervals": {
    "clarion": 1.0
  },
  "intervals clarion": {
    "client": 1.0
  },
  "clarion client": {
    "server": 1.0
  },
  "applications typically": {
    "clarion": 1.0
  },
  "typically clarion": {
    "created": 1.0
  },
  "clarion created": {
    "client": 1.0
  },
  "created client": {
    "server": 1.0
  },
  "applications fall": {
    "i": 1.0
  },
  "fall i": {
    "nto": 1.0
  },
  "i nto": {
    "the": 1.0
  },
  "nto the": {
    "on": 1.0
  },
  "the on": {
    "line": 0.5,
    "delete": 0.5
  },
  "oltp category": {
    "rather": 1.0
  },
  "category rather": {
    "than": 1.0
  },
  "rather than": {
    "the": 1.0
  },
  "the decision": {
    "support": 1.0
  },
  "dss used": {
    "for": 1.0
  },
  "for ad": {
    "hoc": 1.0
  },
  "queries your": {
    "users": 1.0
  },
  "your users": {
    "can": 1.0
  },
  "users can": {
    "use": 1.0
  },
  "can use": {
    "clarion": 1.0
  },
  "use clarion": {
    "s": 1.0
  },
  "s reportwriter": {
    "for": 1.0
  },
  "reportwriter for": {
    "windows": 1.0
  },
  "windows product": {
    "to": 1.0
  },
  "product to": {
    "generate": 1.0
  },
  "to generate": {
    "standard": 0.3333333333333333,
    "client": 0.3333333333333333,
    "minimal": 0.3333333333333333
  },
  "generate standard": {
    "or": 1.0
  },
  "standard or": {
    "ad": 1.0
  },
  "hoc reports": {
    "from": 1.0
  },
  "reports from": {
    "the": 1.0
  },
  "database thus": {
    "pro": 1.0
  },
  "thus pro": {
    "viding": 1.0
  },
  "pro viding": {
    "them": 1.0
  },
  "viding them": {
    "dss": 1.0
  },
  "them dss": {
    "functionality": 1.0
  },
  "dss functionality": {
    "sql": 1.0
  },
  "functionality sql": {
    "database": 1.0
  },
  "engines most": {
    "client": 1.0
  },
  "most client": {
    "server": 1.0
  },
  "are front": {
    "ends": 1.0
  },
  "front ends": {
    "running": 1.0
  },
  "ends running": {
    "on": 1.0
  },
  "running on": {
    "a": 1.0
  },
  "and requesting": {
    "data": 1.0
  },
  "requesting data": {
    "services": 1.0
  },
  "data services": {
    "from": 1.0
  },
  "services from": {
    "a": 1.0
  },
  "engine such": {
    "as": 1.0
  },
  "as oracle": {
    "or": 0.5,
    "and": 0.5
  },
  "oracle or": {
    "sybase": 1.0
  },
  "or sybase": {
    "running": 1.0
  },
  "sybase running": {
    "on": 1.0
  },
  "network server": {
    "most": 1.0
  },
  "server most": {
    "of": 1.0
  },
  "these database": {
    "engines": 1.0
  },
  "engines are": {
    "accessed": 1.0
  },
  "are accessed": {
    "through": 1.0
  },
  "accessed through": {
    "structured": 1.0
  },
  "through structured": {
    "query": 1.0
  },
  "structured query": {
    "language": 1.0
  },
  "query language": {
    "sql": 0.5,
    "to": 0.5
  },
  "language sql": {
    "sql": 1.0
  },
  "sql sql": {
    "was": 1.0
  },
  "sql was": {
    "originally": 1.0
  },
  "was originally": {
    "developed": 1.0
  },
  "originally developed": {
    "as": 1.0
  },
  "developed as": {
    "an": 1.0
  },
  "an ad": {
    "hoc": 1.0
  },
  "hoc query": {
    "language": 0.5,
    "mission": 0.5
  },
  "language to": {
    "allow": 1.0
  },
  "allow users": {
    "to": 1.0
  },
  "to glean": {
    "information": 1.0
  },
  "glean information": {
    "from": 1.0
  },
  "information from": {
    "a": 1.0
  },
  "database over": {
    "the": 1.0
  },
  "the years": {
    "the": 1.0
  },
  "years the": {
    "sql": 1.0
  },
  "the sql": {
    "language": 0.09090909090909091,
    "must": 0.09090909090909091,
    "statements": 0.18181818181818182,
    "it": 0.09090909090909091,
    "or": 0.18181818181818182,
    "generated": 0.09090909090909091,
    "file": 0.09090909090909091,
    "select": 0.09090909090909091,
    "create": 0.09090909090909091
  },
  "sql language": {
    "has": 1.0
  },
  "been enhanced": {
    "to": 1.0
  },
  "enhanced to": {
    "allow": 1.0
  },
  "allow programmatic": {
    "ac": 1.0
  },
  "programmatic ac": {
    "cess": 1.0
  },
  "to databases": {
    "in": 1.0
  },
  "databases in": {
    "addition": 1.0
  },
  "its original": {
    "ad": 1.0
  },
  "original ad": {
    "hoc": 1.0
  },
  "query mission": {
    "clarion": 1.0
  },
  "mission clarion": {
    "language": 1.0
  },
  "guide 66": {
    "sql": 1.0
  },
  "66 sql": {
    "has": 1.0
  },
  "sql has": {
    "become": 1.0
  },
  "has become": {
    "the": 1.0
  },
  "become the": {
    "standard": 1.0
  },
  "standard tool": {
    "used": 1.0
  },
  "tool used": {
    "to": 1.0
  },
  "engines used": {
    "in": 1.0
  },
  "in client": {
    "server": 1.0
  },
  "computing programmatic": {
    "sql": 1.0
  },
  "programmatic sql": {
    "is": 1.0
  },
  "sql is": {
    "the": 0.25,
    "not": 0.125,
    "a": 0.125,
    "myfile": 0.125,
    "affected": 0.125,
    "to": 0.25
  },
  "the tool": {
    "most": 1.0
  },
  "tool most": {
    "frequently": 1.0
  },
  "most frequently": {
    "used": 1.0
  },
  "perform the": {
    "data": 0.6666666666666666,
    "task": 0.3333333333333333
  },
  "data access": {
    "chores": 1.0
  },
  "access chores": {
    "i": 1.0
  },
  "chores i": {
    "n": 1.0
  },
  "n the": {
    "programs": 0.3333333333333333,
    "generated": 0.3333333333333333,
    "filter": 0.3333333333333333
  },
  "programs that": {
    "execute": 1.0
  },
  "execute on": {
    "client": 1.0
  },
  "on client": {
    "workstations": 0.5,
    "server": 0.5
  },
  "workstations however": {
    "sql": 1.0
  },
  "however sql": {
    "is": 1.0
  },
  "full featured": {
    "programming": 1.0
  },
  "featured programming": {
    "language": 1.0
  },
  "programming language": {
    "for": 0.5,
    "such": 0.5
  },
  "language for": {
    "instance": 1.0
  },
  "for instance": {
    "it": 1.0
  },
  "no user": {
    "interface": 1.0
  },
  "user interface": {
    "design": 1.0
  },
  "interface design": {
    "capabilities": 1.0
  },
  "design capabilities": {
    "so": 1.0
  },
  "capabilities so": {
    "the": 1.0
  },
  "sql must": {
    "be": 1.0
  },
  "be embedded": {
    "into": 1.0
  },
  "embedded into": {
    "a": 1.0
  },
  "a more": {
    "general": 1.0
  },
  "general purpose": {
    "programming": 1.0
  },
  "purpose programming": {
    "language": 1.0
  },
  "language such": {
    "as": 1.0
  },
  "as c": {
    "or": 1.0
  },
  "c or": {
    "clarion": 1.0
  },
  "or clarion": {
    "to": 1.0
  },
  "clarion to": {
    "create": 0.5,
    "generate": 0.5
  },
  "complete program": {
    "clarion": 1.0
  },
  "program clarion": {
    "and": 1.0
  },
  "sql clarion": {
    "s": 1.0
  },
  "s file": {
    "driver": 0.75,
    "input": 0.25
  },
  "technology allows": {
    "you": 1.0
  },
  "that access": {
    "sql": 1.0
  },
  "access sql": {
    "databases": 1.0
  },
  "sql databases": {
    "without": 0.5,
    "do": 0.5
  },
  "databases without": {
    "the": 1.0
  },
  "the necessity": {
    "of": 1.0
  },
  "necessity of": {
    "writing": 1.0
  },
  "of writing": {
    "any": 1.0
  },
  "writing any": {
    "sql": 1.0
  },
  "any sql": {
    "at": 0.2,
    "database": 0.2,
    "statement": 0.6
  },
  "sql at": {
    "all": 1.0
  },
  "driver for": {
    "any": 0.3333333333333333,
    "example": 0.3333333333333333,
    "that": 0.3333333333333333
  },
  "database communicates": {
    "with": 1.0
  },
  "communicates with": {
    "the": 1.0
  },
  "the back": {
    "end": 1.0
  },
  "back end": {
    "database": 0.9629629629629629,
    "is": 0.037037037037037035
  },
  "end database": {
    "server": 0.7307692307692307,
    "except": 0.038461538461538464,
    "this": 0.038461538461538464,
    "beyond": 0.038461538461538464,
    "in": 0.07692307692307693,
    "servers": 0.038461538461538464,
    "is": 0.038461538461538464
  },
  "server by": {
    "automatically": 0.3333333333333333,
    "enforcing": 0.6666666666666666
  },
  "by automatically": {
    "generating": 1.0
  },
  "automatically generating": {
    "the": 1.0
  },
  "generating the": {
    "sql": 1.0
  },
  "sql statements": {
    "that": 0.4,
    "into": 0.2,
    "it": 0.2,
    "to": 0.2
  },
  "statements that": {
    "the": 0.3333333333333333,
    "are": 0.3333333333333333,
    "allow": 0.3333333333333333
  },
  "engine requires": {
    "from": 1.0
  },
  "requires from": {
    "your": 1.0
  },
  "your standard": {
    "clarion": 1.0
  },
  "standard clarion": {
    "language": 0.3333333333333333,
    "syntax": 0.3333333333333333,
    "error": 0.3333333333333333
  },
  "language file": {
    "i": 1.0
  },
  "file i": {
    "o": 1.0
  },
  "i o": {
    "syntax": 0.5,
    "operation": 0.5
  },
  "o syntax": {
    "since": 1.0
  },
  "syntax since": {
    "the": 1.0
  },
  "clarion sql": {
    "file": 1.0
  },
  "sql file": {
    "drivers": 0.3333333333333333,
    "driver": 0.6666666666666666
  },
  "drivers are": {
    "specifically": 1.0
  },
  "are specifically": {
    "desig": 1.0
  },
  "specifically desig": {
    "ned": 1.0
  },
  "desig ned": {
    "to": 1.0
  },
  "ned to": {
    "talk": 1.0
  },
  "to talk": {
    "to": 1.0
  },
  "talk to": {
    "a": 1.0
  },
  "single sql": {
    "back": 1.0
  },
  "sql back": {
    "end": 1.0
  },
  "database except": {
    "the": 1.0
  },
  "the odbc": {
    "driver": 1.0
  },
  "odbc driver": {
    "of": 1.0
  },
  "driver of": {
    "course": 1.0
  },
  "course which": {
    "is": 1.0
  },
  "generic sql": {
    "file": 1.0
  },
  "driver the": {
    "sql": 1.0
  },
  "sql it": {
    "generates": 1.0
  },
  "it generates": {
    "is": 0.5,
    "to": 0.5
  },
  "generates is": {
    "optimized": 1.0
  },
  "use features": {
    "specific": 1.0
  },
  "features specific": {
    "to": 1.0
  },
  "that back": {
    "end": 1.0
  },
  "database this": {
    "means": 1.0
  },
  "clarion programmer": {
    "is": 0.5,
    "the": 0.25,
    "learn": 0.25
  },
  "programmer is": {
    "not": 1.0
  },
  "not requi": {
    "red": 1.0
  },
  "requi red": {
    "to": 1.0
  },
  "red to": {
    "learn": 1.0
  },
  "learn or": {
    "use": 1.0
  },
  "or use": {
    "sql": 1.0
  },
  "use sql": {
    "at": 1.0
  },
  "write efficient": {
    "client": 1.0
  },
  "efficient client": {
    "server": 1.0
  },
  "not required": {
    "to": 1.0
  },
  "write sql": {
    "does": 1.0
  },
  "sql does": {
    "not": 1.0
  },
  "any way": {
    "limit": 1.0
  },
  "way limit": {
    "the": 1.0
  },
  "limit the": {
    "capability": 0.25,
    "view": 0.5,
    "result": 0.25
  },
  "the capability": {
    "of": 1.0
  },
  "capability of": {
    "clarion": 1.0
  },
  "generate client": {
    "server": 1.0
  },
  "server programs": {
    "you": 1.0
  },
  "programs you": {
    "can": 1.0
  },
  "can embed": {
    "your": 1.0
  },
  "embed your": {
    "own": 1.0
  },
  "own sql": {
    "statement": 0.2,
    "statements": 0.2,
    "as": 0.2,
    "where": 0.2,
    "such": 0.2
  },
  "sql statement": {
    "to": 0.5,
    "directly": 0.5
  },
  "to extend": {
    "what": 0.5,
    "the": 0.5
  },
  "extend what": {
    "the": 1.0
  },
  "driver does": {
    "for": 1.0
  },
  "does for": {
    "you": 1.0
  },
  "you or": {
    "you": 1.0
  },
  "or you": {
    "can": 1.0
  },
  "can take": {
    "full": 1.0
  },
  "take full": {
    "control": 1.0
  },
  "full control": {
    "of": 0.5,
    "to": 0.5
  },
  "database yourself": {
    "to": 1.0
  },
  "yourself to": {
    "accomplish": 1.0
  },
  "accomplish any": {
    "task": 1.0
  },
  "any task": {
    "that": 1.0
  },
  "task that": {
    "needs": 0.3333333333333333,
    "is": 0.3333333333333333,
    "the": 0.3333333333333333
  },
  "that needs": {
    "doing": 1.0
  },
  "needs doing": {
    "there": 1.0
  },
  "doing there": {
    "are": 1.0
  },
  "are several": {
    "ways": 1.0
  },
  "several ways": {
    "to": 1.0
  },
  "directly embed": {
    "your": 1.0
  },
  "program if": {
    "you": 1.0
  },
  "so ch": {
    "oose": 1.0
  },
  "ch oose": {
    "this": 1.0
  },
  "oose this": {
    "gives": 1.0
  },
  "programmer the": {
    "flexibility": 1.0
  },
  "the flexibility": {
    "to": 1.0
  },
  "flexibility to": {
    "just": 1.0
  },
  "to just": {
    "let": 1.0
  },
  "just let": {
    "it": 1.0
  },
  "let it": {
    "happen": 1.0
  },
  "it happen": {
    "in": 0.5,
    "any": 0.5
  },
  "happen in": {
    "a": 1.0
  },
  "standard fashion": {
    "by": 1.0
  },
  "fashion by": {
    "letting": 1.0
  },
  "by letting": {
    "clarion": 1.0
  },
  "letting clarion": {
    "s": 1.0
  },
  "driver handle": {
    "all": 1.0
  },
  "handle all": {
    "the": 1.0
  },
  "sql or": {
    "to": 0.5,
    "not": 0.5
  },
  "or to": {
    "make": 1.0
  },
  "happen any": {
    "other": 1.0
  },
  "other way": {
    "you": 1.0
  },
  "way you": {
    "choose": 1.0
  },
  "you choose": {
    "by": 1.0
  },
  "by directly": {
    "writing": 1.0
  },
  "directly writing": {
    "your": 1.0
  },
  "writing your": {
    "own": 1.0
  },
  "sql as": {
    "appropri": 1.0
  },
  "as appropri": {
    "ate": 1.0
  },
  "appropri ate": {
    "to": 1.0
  },
  "ate to": {
    "the": 1.0
  },
  "the requirements": {
    "of": 1.0
  },
  "requirements of": {
    "your": 1.0
  },
  "your individual": {
    "application": 1.0
  },
  "individual application": {
    "prop": 1.0
  },
  "application prop": {
    "sql": 1.0
  },
  "prop sql": {
    "is": 0.42857142857142855,
    "prop": 0.14285714285714285,
    "the": 0.07142857142857142,
    "select": 0.07142857142857142,
    "regardless": 0.07142857142857142,
    "to": 0.07142857142857142,
    "create": 0.07142857142857142,
    "66": 0.07142857142857142
  },
  "or view": {
    "structure": 0.2,
    "declaration": 0.2,
    "indicates": 0.2,
    "with": 0.2,
    "is": 0.2
  },
  "to send": {
    "any": 0.5,
    "an": 0.5
  },
  "send any": {
    "sql": 1.0
  },
  "statement directly": {
    "to": 1.0
  },
  "directly to": {
    "the": 1.0
  },
  "server prop": {
    "sqlfilter": 0.5,
    "sql": 0.5
  },
  "prop sqlfilter": {
    "is": 0.16666666666666666,
    "prop": 0.08333333333333333,
    "allows": 0.08333333333333333,
    "filter": 0.08333333333333333,
    "expression": 0.08333333333333333,
    "statement": 0.08333333333333333,
    "instead": 0.08333333333333333,
    "myview": 0.08333333333333333,
    "students": 0.16666666666666666,
    "70": 0.08333333333333333
  },
  "sqlfilter is": {
    "a": 0.5,
    "ver": 0.5
  },
  "a view": {
    "structu": 0.16666666666666666,
    "will": 0.16666666666666666,
    "structure": 0.3333333333333333,
    "allows": 0.3333333333333333
  },
  "view structu": {
    "re": 1.0
  },
  "structu re": {
    "that": 1.0
  },
  "re that": {
    "allows": 1.0
  },
  "to append": {
    "your": 1.0
  },
  "append your": {
    "own": 0.5,
    "prop": 0.5
  },
  "sql where": {
    "clause": 1.0
  },
  "where clause": {
    "to": 0.75,
    "in": 0.25
  },
  "clause to": {
    "the": 0.5,
    "use": 0.25,
    "further": 0.25
  },
  "generated sql": {
    "sent": 0.25,
    "select": 0.5,
    "the": 0.25
  },
  "sql sent": {
    "to": 1.0
  },
  "sent to": {
    "the": 1.0
  },
  "database beyond": {
    "these": 1.0
  },
  "beyond these": {
    "there": 1.0
  },
  "these there": {
    "are": 1.0
  },
  "also several": {
    "other": 1.0
  },
  "several other": {
    "properties": 1.0
  },
  "other properties": {
    "available": 1.0
  },
  "properties available": {
    "that": 1.0
  },
  "available that": {
    "are": 1.0
  },
  "to enhance": {
    "the": 1.0
  },
  "enhance the": {
    "sql": 1.0
  },
  "sql generated": {
    "by": 1.0
  },
  "driver some": {
    "are": 1.0
  },
  "some are": {
    "file": 1.0
  },
  "are file": {
    "driver": 1.0
  },
  "driver specific": {
    "in": 1.0
  },
  "specific in": {
    "either": 1.0
  },
  "in either": {
    "case": 1.0
  },
  "either case": {
    "the": 1.0
  },
  "driver places": {
    "the": 1.0
  },
  "places the": {
    "returned": 1.0
  },
  "returned data": {
    "set": 1.0
  },
  "data set": {
    "from": 1.0
  },
  "set from": {
    "the": 1.0
  },
  "appropriate file": {
    "record": 1.0
  },
  "buffer allowing": {
    "you": 1.0
  },
  "allowing you": {
    "to": 1.0
  },
  "use standard": {
    "clarion": 1.0
  },
  "clarion syntax": {
    "to": 0.5,
    "required": 0.5
  },
  "syntax to": {
    "manipulate": 1.0
  },
  "to manipulate": {
    "its": 1.0
  },
  "manipulate its": {
    "value": 1.0
  },
  "its value": {
    "or": 1.0
  },
  "value or": {
    "assign": 1.0
  },
  "or assign": {
    "the": 1.0
  },
  "assign the": {
    "data": 1.0
  },
  "data values": {
    "to": 1.0
  },
  "other fields": {
    "databas": 1.0
  },
  "fields databas": {
    "e": 1.0
  },
  "databas e": {
    "design": 1.0
  },
  "e design": {
    "and": 1.0
  },
  "traffic the": {
    "most": 1.0
  },
  "important aspect": {
    "to": 1.0
  },
  "aspect to": {
    "creating": 1.0
  },
  "to creating": {
    "efficient": 1.0
  },
  "creating efficient": {
    "client": 1.0
  },
  "applications is": {
    "the": 1.0
  },
  "the design": {
    "of": 1.0
  },
  "design of": {
    "the": 1.0
  },
  "database when": {
    "properly": 1.0
  },
  "designed the": {
    "database": 1.0
  },
  "database more": {
    "readily": 1.0
  },
  "more readily": {
    "allows": 1.0
  },
  "readily allows": {
    "you": 1.0
  },
  "your applications": {
    "such": 1.0
  },
  "applications such": {
    "that": 1.0
  },
  "that network": {
    "traffic": 1.0
  },
  "traffic can": {
    "be": 1.0
  },
  "be minimized": {
    "when": 1.0
  },
  "minimized when": {
    "network": 1.0
  },
  "when network": {
    "traffic": 1.0
  },
  "traffic is": {
    "kept": 0.5,
    "to": 0.5
  },
  "is kept": {
    "to": 1.0
  },
  "a minimum": {
    "data": 1.0
  },
  "minimum data": {
    "response": 1.0
  },
  "data response": {
    "times": 1.0
  },
  "times the": {
    "most": 1.0
  },
  "most critical": {
    "aspect": 1.0
  },
  "critical aspect": {
    "of": 1.0
  },
  "aspect of": {
    "oltp": 1.0
  },
  "of oltp": {
    "systems": 1.0
  },
  "oltp systems": {
    "can": 1.0
  },
  "systems can": {
    "be": 1.0
  },
  "kept as": {
    "fast": 1.0
  },
  "as possible": {
    "even": 1.0
  },
  "possible even": {
    "when": 1.0
  },
  "system is": {
    "scaled": 1.0
  },
  "is scaled": {
    "up": 1.0
  },
  "scaled up": {
    "to": 1.0
  },
  "the enterprise": {
    "level": 1.0
  },
  "enterprise level": {
    "referential": 1.0
  },
  "level referential": {
    "integrity": 1.0
  },
  "handling maintaining": {
    "the": 1.0
  },
  "maintaining the": {
    "referential": 1.0
  },
  "the referential": {
    "integrity": 1.0
  },
  "integrity ri": {
    "of": 1.0
  },
  "ri of": {
    "a": 1.0
  },
  "database is": {
    "a": 0.5,
    "null": 0.5
  },
  "key element": {
    "to": 1.0
  },
  "element to": {
    "relational": 1.0
  },
  "to relational": {
    "database": 1.0
  },
  "design referential": {
    "integrity": 1.0
  },
  "that for": {
    "every": 1.0
  },
  "every one": {
    "to": 1.0
  },
  "between tables": {
    "in": 1.0
  },
  "tables in": {
    "the": 1.0
  },
  "the databa": {
    "se": 1.0
  },
  "databa se": {
    "there": 0.5,
    "server": 0.5
  },
  "se there": {
    "exists": 1.0
  },
  "there exists": {
    "a": 1.0
  },
  "exists a": {
    "parent": 1.0
  },
  "record for": {
    "every": 1.0
  },
  "every child": {
    "record": 1.0
  },
  "child record": {
    "no": 0.3333333333333333,
    "is": 0.3333333333333333,
    "deletions": 0.3333333333333333
  },
  "record no": {
    "orphan": 1.0
  },
  "no orphan": {
    "records": 1.0
  },
  "orphan records": {
    "to": 0.3333333333333333,
    "can": 0.3333333333333333,
    "requires": 0.3333333333333333
  },
  "records to": {
    "put": 1.0
  },
  "to put": {
    "it": 1.0
  },
  "put it": {
    "in": 1.0
  },
  "in more": {
    "formal": 1.0
  },
  "more formal": {
    "terms": 1.0
  },
  "formal terms": {
    "there": 1.0
  },
  "terms there": {
    "must": 1.0
  },
  "there must": {
    "be": 1.0
  },
  "valid primary": {
    "key": 1.0
  },
  "every existing": {
    "foreign": 1.0
  },
  "existing foreign": {
    "key": 1.0
  },
  "database orphan": {
    "records": 1.0
  },
  "records can": {
    "occur": 1.0
  },
  "can occur": {
    "when": 1.0
  },
  "occur when": {
    "the": 1.0
  },
  "is delet": {
    "ed": 1.0
  },
  "delet ed": {
    "or": 1.0
  },
  "ed or": {
    "the": 1.0
  },
  "value which": {
    "provides": 1.0
  },
  "the link": {
    "to": 1.0
  },
  "link to": {
    "the": 1.0
  },
  "is changed": {
    "preventing": 1.0
  },
  "changed preventing": {
    "these": 1.0
  },
  "preventing these": {
    "orphan": 1.0
  },
  "these orphan": {
    "records": 1.0
  },
  "records requires": {
    "that": 1.0
  },
  "database contain": {
    "rules": 1.0
  },
  "contain rules": {
    "stating": 1.0
  },
  "rules stating": {
    "what": 1.0
  },
  "stating what": {
    "action": 1.0
  },
  "what action": {
    "will": 1.0
  },
  "action will": {
    "occur": 1.0
  },
  "will occur": {
    "when": 1.0
  },
  "par ent": {
    "record": 1.0
  },
  "ent record": {
    "or": 1.0
  },
  "common ri": {
    "rules": 1.0
  },
  "ri rules": {
    "are": 0.25,
    "on": 0.25,
    "for": 0.25,
    "in": 0.25
  },
  "rules are": {
    "restrict": 1.0
  },
  "restrict do": {
    "not": 1.0
  },
  "cascade delete": {
    "the": 1.0
  },
  "related child": {
    "records": 1.0
  },
  "records or": {
    "change": 1.0
  },
  "change their": {
    "foreign": 1.0
  },
  "their foreign": {
    "key": 1.0
  },
  "to match": {
    "the": 1.0
  },
  "match the": {
    "new": 1.0
  },
  "new primary": {
    "key": 1.0
  },
  "parent re": {
    "cord": 1.0
  },
  "cord a": {
    "rarely": 1.0
  },
  "a rarely": {
    "used": 1.0
  },
  "rarely used": {
    "rule": 1.0
  },
  "used rule": {
    "is": 1.0
  },
  "rule is": {
    "clear": 1.0
  },
  "is clear": {
    "change": 1.0
  },
  "clear change": {
    "the": 1.0
  },
  "null when": {
    "the": 0.5,
    "you": 0.5
  },
  "is deleted": {
    "or": 1.0
  },
  "deleted or": {
    "the": 1.0
  },
  "record changes": {
    "ri": 1.0
  },
  "changes ri": {
    "constraint": 1.0
  },
  "ri constraint": {
    "enforcement": 1.0
  },
  "constraint enforcement": {
    "is": 1.0
  },
  "enforcement is": {
    "best": 1.0
  },
  "is best": {
    "handled": 0.5,
    "accomplis": 0.5
  },
  "best handled": {
    "in": 1.0
  },
  "handled in": {
    "client": 1.0
  },
  "by specifying": {
    "the": 1.0
  },
  "specifying the": {
    "ri": 1.0
  },
  "the ri": {
    "rules": 0.75,
    "functional": 0.25
  },
  "rules on": {
    "the": 1.0
  },
  "server usually": {
    "by": 1.0
  },
  "usually by": {
    "defining": 1.0
  },
  "defining triggers": {
    "stored": 1.0
  },
  "triggers stored": {
    "procedures": 1.0
  },
  "stored procedures": {
    "or": 0.5,
    "are": 0.5
  },
  "procedures or": {
    "declarative": 1.0
  },
  "or declarative": {
    "ri": 1.0
  },
  "declarative ri": {
    "statements": 1.0
  },
  "ri statements": {
    "by": 1.0
  },
  "statements by": {
    "doing": 1.0
  },
  "by doing": {
    "this": 1.0
  },
  "server can": {
    "automatically": 0.3333333333333333,
    "simply": 0.3333333333333333,
    "issue": 0.3333333333333333
  },
  "can automatically": {
    "handle": 1.0
  },
  "automatically handle": {
    "ri": 1.0
  },
  "handle ri": {
    "enforcement": 1.0
  },
  "ri enforcement": {
    "without": 1.0
  },
  "enforcement without": {
    "sending": 1.0
  },
  "without sending": {
    "any": 0.5,
    "anything": 0.5
  },
  "sending any": {
    "child": 0.5,
    "sql": 0.5
  },
  "any child": {
    "records": 1.0
  },
  "records across": {
    "the": 1.0
  },
  "network to": {
    "the": 1.0
  },
  "client application": {
    "for": 0.09090909090909091,
    "67": 0.09090909090909091,
    "or": 0.09090909090909091,
    "and": 0.09090909090909091,
    "you": 0.09090909090909091,
    "the": 0.18181818181818182,
    "needs": 0.09090909090909091,
    "a": 0.09090909090909091,
    "filtered": 0.09090909090909091,
    "to": 0.09090909090909091
  },
  "application for": {
    "processing": 1.0
  },
  "for processing": {
    "for": 1.0
  },
  "processing for": {
    "example": 1.0
  },
  "example if": {
    "the": 1.0
  },
  "the rule": {
    "for": 1.0
  },
  "rule for": {
    "delete": 1.0
  },
  "delete is": {
    "cascade": 1.0
  },
  "is cascade": {
    "the": 1.0
  },
  "can simply": {
    "perform": 1.0
  },
  "simply perform": {
    "all": 1.0
  },
  "perform all": {
    "the": 1.0
  },
  "the required": {
    "child": 1.0
  },
  "required child": {
    "record": 1.0
  },
  "record deletions": {
    "when": 1.0
  },
  "deletions when": {
    "deleting": 1.0
  },
  "when deleting": {
    "the": 0.5,
    "a": 0.5
  },
  "deleting the": {
    "parent": 1.0
  },
  "database without": {
    "sending": 1.0
  },
  "sending anything": {
    "back": 1.0
  },
  "anything back": {
    "across": 1.0
  },
  "the n": {
    "etwork": 1.0
  },
  "n etwork": {
    "to": 1.0
  },
  "etwork to": {
    "the": 1.0
  },
  "application 67": {
    "developing": 1.0
  },
  "67 developing": {
    "client": 1.0
  },
  "clarion dictionary": {
    "editor": 1.0
  },
  "dictionary editor": {
    "when": 0.5,
    "allows": 0.5
  },
  "editor when": {
    "you": 1.0
  },
  "you establish": {
    "a": 1.0
  },
  "establish a": {
    "relationship": 1.0
  },
  "a relationship": {
    "between": 1.0
  },
  "files tables": {
    "you": 1.0
  },
  "tables you": {
    "can": 1.0
  },
  "also specify": {
    "the": 1.0
  },
  "specify the": {
    "ri": 0.4,
    "business": 0.2,
    "most": 0.2,
    "sort": 0.2
  },
  "rules for": {
    "that": 1.0
  },
  "that relationship": {
    "since": 1.0
  },
  "relationship since": {
    "the": 1.0
  },
  "server will": {
    "actually": 0.5,
    "not": 0.5
  },
  "actually be": {
    "handling": 1.0
  },
  "be handling": {
    "the": 1.0
  },
  "handling the": {
    "ri": 1.0
  },
  "ri functional": {
    "ity": 1.0
  },
  "functional ity": {
    "the": 1.0
  },
  "ity the": {
    "most": 1.0
  },
  "appropriate way": {
    "to": 1.0
  },
  "to specify": {
    "the": 0.5,
    "no": 0.125,
    "a": 0.25,
    "using": 0.125
  },
  "rules in": {
    "the": 0.4,
    "your": 0.2,
    "both": 0.4
  },
  "clarion data": {
    "dictionary": 1.0
  },
  "data dictionary": {
    "would": 0.5,
    "editor": 0.5
  },
  "dictionary would": {
    "be": 1.0
  },
  "specify no": {
    "action": 1.0
  },
  "no action": {
    "so": 1.0
  },
  "action so": {
    "the": 1.0
  },
  "client does": {
    "nothing": 1.0
  },
  "nothing data": {
    "validation": 1.0
  },
  "validation data": {
    "validation": 1.0
  },
  "validation means": {
    "the": 1.0
  },
  "the enforcement": {
    "of": 1.0
  },
  "enforcement of": {
    "business": 1.0
  },
  "of business": {
    "rules": 1.0
  },
  "business rules": {
    "that": 0.5,
    "in": 0.5
  },
  "rules that": {
    "you": 1.0
  },
  "you spec": {
    "ify": 1.0
  },
  "spec ify": {
    "as": 1.0
  },
  "ify as": {
    "to": 1.0
  },
  "what values": {
    "are": 1.0
  },
  "valid for": {
    "any": 0.5,
    "5": 0.5
  },
  "any particular": {
    "field": 1.0
  },
  "particular field": {
    "in": 1.0
  },
  "field in": {
    "the": 0.5,
    "all": 0.5
  },
  "database typical": {
    "data": 1.0
  },
  "typical data": {
    "validation": 1.0
  },
  "validation rules": {
    "enforce": 0.2,
    "can": 0.2,
    "in": 0.4,
    "on": 0.2
  },
  "rules enforce": {
    "such": 1.0
  },
  "enforce such": {
    "things": 1.0
  },
  "such things": {
    "as": 1.0
  },
  "things as": {
    "a": 1.0
  },
  "field may": {
    "not": 1.0
  },
  "be left": {
    "empty": 1.0
  },
  "left empty": {
    "blank": 1.0
  },
  "empty blank": {
    "or": 1.0
  },
  "blank or": {
    "zero": 1.0
  },
  "or zero": {
    "o": 0.16666666666666666,
    "true": 0.16666666666666666,
    "for": 0.16666666666666666,
    "value": 0.3333333333333333,
    "therefore": 0.16666666666666666
  },
  "zero o": {
    "r": 1.0
  },
  "o r": {
    "the": 1.0
  },
  "r the": {
    "field": 1.0
  },
  "field s": {
    "value": 0.5,
    "definition": 0.25,
    "that": 0.25
  },
  "value must": {
    "be": 0.5,
    "exist": 0.5
  },
  "either one": {
    "or": 1.0
  },
  "one or": {
    "zero": 1.0
  },
  "zero true": {
    "or": 1.0
  },
  "true or": {
    "false": 0.6666666666666666,
    "unknown": 0.3333333333333333
  },
  "or false": {
    "or": 0.5,
    "known": 0.5
  },
  "false or": {
    "within": 1.0
  },
  "or within": {
    "a": 1.0
  },
  "a cert": {
    "ain": 1.0
  },
  "cert ain": {
    "specified": 1.0
  },
  "ain specified": {
    "numeric": 1.0
  },
  "specified numeric": {
    "range": 1.0
  },
  "numeric range": {
    "or": 1.0
  },
  "range or": {
    "the": 1.0
  },
  "must exist": {
    "as": 1.0
  },
  "exist as": {
    "a": 1.0
  },
  "file table": {
    "these": 0.25,
    "myview": 0.25,
    "wheth": 0.25,
    "where": 0.25
  },
  "table these": {
    "data": 1.0
  },
  "these data": {
    "validation": 1.0
  },
  "rules can": {
    "be": 1.0
  },
  "be specified": {
    "either": 1.0
  },
  "specified either": {
    "in": 1.0
  },
  "either in": {
    "the": 1.0
  },
  "application or": {
    "in": 1.0
  },
  "server the": {
    "best": 0.5,
    "clarion": 0.5
  },
  "the best": {
    "way": 1.0
  },
  "best way": {
    "to": 1.0
  },
  "handle implementi": {
    "ng": 1.0
  },
  "implementi ng": {
    "data": 1.0
  },
  "ng data": {
    "validation": 1.0
  },
  "your client": {
    "server": 1.0
  },
  "applications so": {
    "as": 1.0
  },
  "so as": {
    "to": 1.0
  },
  "generate minimal": {
    "network": 1.0
  },
  "minimal network": {
    "traffic": 1.0
  },
  "the business": {
    "rules": 1.0
  },
  "by enforcing": {
    "data": 1.0
  },
  "enforcing data": {
    "validation": 1.0
  },
  "application you": {
    "ensure": 1.0
  },
  "you ensure": {
    "that": 1.0
  },
  "data sent": {
    "to": 1.0
  },
  "end is": {
    "already": 1.0
  },
  "already valid": {
    "by": 1.0
  },
  "valid by": {
    "always": 1.0
  },
  "by always": {
    "receiving": 1.0
  },
  "always receiving": {
    "valid": 1.0
  },
  "receiving valid": {
    "data": 1.0
  },
  "valid data": {
    "the": 1.0
  },
  "not generate": {
    "error": 1.0
  },
  "generate error": {
    "messages": 1.0
  },
  "error messages": {
    "back": 1.0
  },
  "messages back": {
    "to": 1.0
  },
  "application the": {
    "net": 0.3333333333333333,
    "requested": 0.3333333333333333,
    "fo": 0.3333333333333333
  },
  "the net": {
    "effect": 1.0
  },
  "net effect": {
    "of": 1.0
  },
  "to reduce": {
    "the": 1.0
  },
  "traffic back": {
    "from": 1.0
  },
  "back from": {
    "the": 1.0
  },
  "se server": {
    "by": 1.0
  },
  "server you": {
    "ensure": 0.5,
    "use": 0.5
  },
  "always valid": {
    "no": 1.0
  },
  "what application": {
    "is": 1.0
  },
  "application is": {
    "used": 1.0
  },
  "database even": {
    "updating": 1.0
  },
  "even updating": {
    "the": 1.0
  },
  "data with": {
    "interactive": 1.0
  },
  "with interactive": {
    "sql": 1.0
  },
  "interactive sql": {
    "cannot": 1.0
  },
  "sql cannot": {
    "corrupt": 1.0
  },
  "cannot corrupt": {
    "the": 1.0
  },
  "corrupt the": {
    "data": 1.0
  },
  "data therefo": {
    "re": 1.0
  },
  "therefo re": {
    "you": 1.0
  },
  "re you": {
    "are": 1.0
  },
  "are covered": {
    "from": 1.0
  },
  "covered from": {
    "both": 1.0
  },
  "both directions": {
    "enforcing": 1.0
  },
  "directions enforcing": {
    "these": 1.0
  },
  "enforcing these": {
    "rules": 1.0
  },
  "these rules": {
    "in": 1.0
  },
  "both your": {
    "clarion": 1.0
  },
  "your clarion": {
    "applications": 0.5,
    "application": 0.5
  },
  "clarion applications": {
    "and": 1.0
  },
  "applications and": {
    "the": 1.0
  },
  "server may": {
    "seem": 1.0
  },
  "of work": {
    "however": 1.0
  },
  "work however": {
    "the": 1.0
  },
  "editor allows": {
    "you": 1.0
  },
  "common rules": {
    "by": 1.0
  },
  "rules by": {
    "simply": 1.0
  },
  "simply selecti": {
    "ng": 1.0
  },
  "selecti ng": {
    "a": 1.0
  },
  "ng a": {
    "radio": 1.0
  },
  "a radio": {
    "button": 1.0
  },
  "radio button": {
    "on": 1.0
  },
  "button on": {
    "the": 1.0
  },
  "the validity": {
    "checks": 1.0
  },
  "validity checks": {
    "tab": 1.0
  },
  "checks tab": {
    "of": 1.0
  },
  "tab of": {
    "the": 1.0
  },
  "the affected": {
    "field": 1.0
  },
  "affected field": {
    "s": 1.0
  },
  "s definition": {
    "by": 1.0
  },
  "definition by": {
    "doing": 1.0
  },
  "validation is": {
    "writ": 1.0
  },
  "is writ": {
    "ten": 1.0
  },
  "writ ten": {
    "for": 1.0
  },
  "ten for": {
    "you": 1.0
  },
  "application generator": {
    "s": 1.0
  },
  "generator s": {
    "templates": 1.0
  },
  "s templates": {
    "clarion": 1.0
  },
  "templates clarion": {
    "language": 1.0
  },
  "support the": {
    "clarion": 0.5,
    "null": 0.5
  },
  "clarion l": {
    "anguage": 1.0
  },
  "l anguage": {
    "contains": 1.0
  },
  "anguage contains": {
    "a": 1.0
  },
  "of statements": {
    "that": 1.0
  },
  "are explicitly": {
    "designed": 1.0
  },
  "explicitly designed": {
    "to": 1.0
  },
  "designed to": {
    "support": 1.0
  },
  "to support": {
    "client": 1.0
  },
  "support client": {
    "server": 1.0
  },
  "server application": {
    "programming": 0.3333333333333333,
    "because": 0.3333333333333333,
    "perfo": 0.3333333333333333
  },
  "application programming": {
    "the": 1.0
  },
  "that automatically": {
    "defines": 1.0
  },
  "automatically defines": {
    "two": 1.0
  },
  "two standard": {
    "relational": 1.0
  },
  "standard relational": {
    "database": 1.0
  },
  "database operat": {
    "ions": 1.0
  },
  "operat ions": {
    "the": 1.0
  },
  "ions the": {
    "project": 1.0
  },
  "the project": {
    "and": 1.0
  },
  "project and": {
    "join": 1.0
  },
  "and join": {
    "operations": 1.0
  },
  "join operations": {
    "a": 1.0
  },
  "operations a": {
    "view": 1.0
  },
  "view will": {
    "also": 0.5,
    "return": 0.5
  },
  "will also": {
    "automatically": 1.0
  },
  "automatically filter": {
    "and": 1.0
  },
  "filter and": {
    "order": 1.0
  },
  "the result": {
    "set": 0.8571428571428571,
    "of": 0.14285714285714285
  },
  "result set": {
    "the": 0.1111111111111111,
    "that": 0.1111111111111111,
    "which": 0.1111111111111111,
    "returned": 0.1111111111111111,
    "returns": 0.1111111111111111,
    "you": 0.1111111111111111,
    "one": 0.1111111111111111,
    "to": 0.2222222222222222
  },
  "server performs": {
    "all": 1.0
  },
  "performs all": {
    "these": 1.0
  },
  "these operations": {
    "returning": 1.0
  },
  "operations returning": {
    "only": 1.0
  },
  "returning only": {
    "the": 1.0
  },
  "perform its": {
    "work": 1.0
  },
  "its work": {
    "although": 1.0
  },
  "work although": {
    "it": 1.0
  },
  "although it": {
    "is": 1.0
  },
  "actually possible": {
    "to": 1.0
  },
  "possible to": {
    "create": 0.3333333333333333,
    "specify": 0.3333333333333333,
    "detect": 0.3333333333333333
  },
  "that joins": {
    "tables": 1.0
  },
  "joins tables": {
    "from": 1.0
  },
  "tables from": {
    "different": 1.0
  },
  "from different": {
    "back": 1.0
  },
  "different back": {
    "end": 1.0
  },
  "database servers": {
    "such": 0.25,
    "the": 0.25,
    "a": 0.25,
    "is": 0.25
  },
  "servers such": {
    "as": 1.0
  },
  "oracle and": {
    "as": 1.0
  },
  "and as": {
    "400": 1.0
  },
  "as 400": {
    "this": 1.0
  },
  "400 this": {
    "would": 1.0
  },
  "very efficient": {
    "way": 1.0
  },
  "efficient way": {
    "to": 1.0
  },
  "write a": {
    "client": 1.0
  },
  "join and": {
    "any": 1.0
  },
  "any filter": {
    "ing": 1.0
  },
  "filter ing": {
    "would": 1.0
  },
  "ing would": {
    "have": 1.0
  },
  "processed on": {
    "the": 1.0
  },
  "client eliminating": {
    "the": 1.0
  },
  "eliminating the": {
    "advantage": 1.0
  },
  "computing therefore": {
    "we": 1.0
  },
  "therefore we": {
    "will": 1.0
  },
  "not address": {
    "this": 1.0
  },
  "address this": {
    "possibility": 1.0
  },
  "this possibility": {
    "in": 1.0
  },
  "possibility in": {
    "this": 1.0
  },
  "this article": {
    "project": 1.0
  },
  "article project": {
    "a": 1.0
  },
  "project a": {
    "relational": 1.0
  },
  "relational project": {
    "operation": 1.0
  },
  "project operation": {
    "tells": 1.0
  },
  "operation tells": {
    "the": 1.0
  },
  "server to": {
    "only": 0.5,
    "return": 0.5
  },
  "to only": {
    "return": 0.25,
    "tho": 0.25,
    "those": 0.5
  },
  "only return": {
    "to": 1.0
  },
  "application a": {
    "specific": 1.0
  },
  "specific sub": {
    "set": 1.0
  },
  "the columns": {
    "in": 1.0
  },
  "columns in": {
    "a": 1.0
  },
  "a table": {
    "thereby": 0.5,
    "to": 0.5
  },
  "table thereby": {
    "reducing": 1.0
  },
  "thereby reducing": {
    "network": 1.0
  },
  "reducing network": {
    "traffic": 1.0
  },
  "traffic for": {
    "example": 1.0
  },
  "following view": {
    "structure": 0.6,
    "will": 0.2,
    "returns": 0.2
  },
  "structure will": {
    "return": 1.0
  },
  "will return": {
    "only": 0.6,
    "all": 0.2,
    "a": 0.2
  },
  "return only": {
    "the": 0.6666666666666666,
    "those": 0.3333333333333333
  },
  "the specified": {
    "fields": 0.5,
    "sql": 0.5
  },
  "specified fields": {
    "columns": 1.0
  },
  "fields columns": {
    "from": 1.0
  },
  "columns from": {
    "the": 1.0
  },
  "the students": {
    "file": 1.0
  },
  "students file": {
    "table": 0.6,
    "records": 0.4
  },
  "table myview": {
    "view": 1.0
  },
  "myview view": {
    "students": 0.8571428571428571,
    "s": 0.14285714285714285
  },
  "view students": {
    "project": 0.3333333333333333,
    "filter": 0.5,
    "order": 0.16666666666666666
  },
  "students project": {
    "stu": 1.0
  },
  "project stu": {
    "lastname": 0.875,
    "l": 0.125
  },
  "stu lastname": {
    "stu": 0.8888888888888888,
    "taylor": 0.1111111111111111
  },
  "lastname stu": {
    "firstname": 1.0
  },
  "stu firstname": {
    "stu": 0.8888888888888888,
    "project": 0.1111111111111111
  },
  "firstname stu": {
    "major": 1.0
  },
  "stu major": {
    "end": 0.4166666666666667,
    "join": 0.16666666666666666,
    "project": 0.08333333333333333,
    "inner": 0.08333333333333333,
    "computer": 0.16666666666666666,
    "stu": 0.08333333333333333
  },
  "major end": {
    "join": 0.2,
    "order": 0.2,
    "naturally": 0.2,
    "the": 0.2,
    "code": 0.2
  },
  "end join": {
    "the": 1.0
  },
  "join the": {
    "relational": 1.0
  },
  "relational join": {
    "operation": 1.0
  },
  "join operation": {
    "automatically": 1.0
  },
  "operation automatically": {
    "joins": 1.0
  },
  "automatically joins": {
    "together": 1.0
  },
  "joins together": {
    "related": 1.0
  },
  "together related": {
    "rows": 1.0
  },
  "related rows": {
    "from": 1.0
  },
  "rows from": {
    "multiple": 1.0
  },
  "from multiple": {
    "tables": 1.0
  },
  "multiple tables": {
    "into": 1.0
  },
  "tables into": {
    "a": 1.0
  },
  "single result": {
    "set": 1.0
  },
  "set which": {
    "the": 1.0
  },
  "server returns": {
    "to": 1.0
  },
  "client applic": {
    "ation": 1.0
  },
  "applic ation": {
    "the": 1.0
  },
  "ation the": {
    "view": 1.0
  },
  "structure defaults": {
    "to": 1.0
  },
  "defaults to": {
    "a": 1.0
  },
  "a left": {
    "outer": 1.0
  },
  "left outer": {
    "join": 1.0
  },
  "outer join": {
    "unless": 0.5,
    "returns": 0.5
  },
  "join unless": {
    "the": 1.0
  },
  "the inner": {
    "attribute": 0.6666666666666666,
    "record": 0.3333333333333333
  },
  "inner attribute": {
    "is": 0.5,
    "to": 0.5
  },
  "join structure": {
    "a": 0.5,
    "specifies": 0.5
  },
  "join returns": {
    "all": 1.0
  },
  "returns all": {
    "of": 1.0
  },
  "the outer": {
    "rows": 1.0
  },
  "outer rows": {
    "whether": 0.5,
    "with": 0.5
  },
  "rows whether": {
    "there": 1.0
  },
  "whether there": {
    "are": 1.0
  },
  "related inne": {
    "r": 1.0
  },
  "inne r": {
    "rows": 1.0
  },
  "r rows": {
    "to": 1.0
  },
  "rows to": {
    "return": 1.0
  },
  "return or": {
    "not": 1.0
  },
  "not for": {
    "those": 0.5,
    "any": 0.5
  },
  "those outer": {
    "records": 0.5,
    "rows": 0.5
  },
  "outer records": {
    "without": 1.0
  },
  "records without": {
    "r": 1.0
  },
  "without r": {
    "elated": 1.0
  },
  "r elated": {
    "inner": 1.0
  },
  "elated inner": {
    "records": 1.0
  },
  "inner records": {
    "the": 1.0
  },
  "inner record": {
    "are": 1.0
  },
  "record are": {
    "left": 1.0
  },
  "zero for": {
    "example": 1.0
  },
  "return all": {
    "records": 1.0
  },
  "all records": {
    "rows": 1.0
  },
  "records rows": {
    "in": 1.0
  },
  "rows in": {
    "the": 1.0
  },
  "table wheth": {
    "er": 1.0
  },
  "wheth er": {
    "or": 1.0
  },
  "er or": {
    "not": 1.0
  },
  "not there": {
    "are": 1.0
  },
  "related majors": {
    "file": 1.0
  },
  "majors file": {
    "records": 1.0
  },
  "records myview": {
    "view": 1.0
  },
  "view s": {
    "tudents": 1.0
  },
  "s tudents": {
    "clarion": 1.0
  },
  "tudents clarion": {
    "language": 1.0
  },
  "guide 68": {
    "project": 1.0
  },
  "68 project": {
    "stu": 1.0
  },
  "major join": {
    "maj": 1.0
  },
  "join maj": {
    "keynumber": 1.0
  },
  "maj keynumber": {
    "stu": 1.0
  },
  "keynumber stu": {
    "major": 1.0
  },
  "major project": {
    "maj": 1.0
  },
  "project maj": {
    "description": 1.0
  },
  "maj description": {
    "maj": 1.0
  },
  "description maj": {
    "number": 1.0
  },
  "maj number": {
    "end": 1.0
  },
  "number end": {
    "end": 1.0
  },
  "end adding": {
    "the": 1.0
  },
  "structure specifies": {
    "an": 1.0
  },
  "specifies an": {
    "inner": 1.0
  },
  "an inner": {
    "join": 1.0
  },
  "inner join": {
    "whic": 1.0
  },
  "join whic": {
    "h": 1.0
  },
  "h returns": {
    "only": 1.0
  },
  "returns only": {
    "those": 1.0
  },
  "rows with": {
    "related": 1.0
  },
  "with related": {
    "inner": 1.0
  },
  "related inner": {
    "rows": 1.0
  },
  "inner rows": {
    "for": 1.0
  },
  "rows for": {
    "example": 1.0
  },
  "table where": {
    "there": 1.0
  },
  "stu l": {
    "astname": 1.0
  },
  "l astname": {
    "stu": 1.0
  },
  "astname stu": {
    "firstname": 1.0
  },
  "major inner": {
    "project": 1.0
  },
  "inner project": {
    "maj": 1.0
  },
  "end filter": {
    "the": 1.0
  },
  "filter the": {
    "filter": 1.0
  },
  "the filter": {
    "attribute": 0.6666666666666666,
    "with": 0.16666666666666666,
    "condition": 0.16666666666666666
  },
  "filter attribute": {
    "on": 0.25,
    "by": 0.25,
    "however": 0.25,
    "s": 0.25
  },
  "view allows": {
    "you": 1.0
  },
  "specify a": {
    "conditional": 0.5,
    "filter": 0.5
  },
  "a conditional": {
    "expression": 1.0
  },
  "conditional expression": {
    "to": 0.5,
    "pre": 0.5
  },
  "expression to": {
    "filter": 1.0
  },
  "to filter": {
    "out": 1.0
  },
  "filter out": {
    "unwanted": 1.0
  },
  "out unwanted": {
    "records": 1.0
  },
  "unwanted records": {
    "this": 1.0
  },
  "records this": {
    "will": 0.5,
    "eliminates": 0.5
  },
  "generate a": {
    "where": 1.0
  },
  "a where": {
    "clause": 1.0
  },
  "clause in": {
    "the": 1.0
  },
  "sql select": {
    "statement": 0.7142857142857143,
    "from": 0.14285714285714285,
    "statements": 0.14285714285714285
  },
  "select statement": {
    "for": 0.4,
    "to": 0.2,
    "is": 0.2,
    "will": 0.2
  },
  "those students": {
    "file": 0.5,
    "with": 0.5
  },
  "records whose": {
    "last": 1.0
  },
  "whose last": {
    "name": 1.0
  },
  "last name": {
    "is": 0.5,
    "and": 0.5
  },
  "name is": {
    "taylor": 1.0
  },
  "is taylor": {
    "myview": 1.0
  },
  "taylor myview": {
    "view": 1.0
  },
  "students filter": {
    "stu": 1.0
  },
  "filter stu": {
    "lastname": 0.3333333333333333,
    "major": 0.6666666666666666
  },
  "lastname taylor": {
    "project": 1.0
  },
  "taylor project": {
    "stu": 1.0
  },
  "order attribute": {
    "on": 1.0
  },
  "set returned": {
    "by": 1.0
  },
  "server this": {
    "will": 0.5,
    "allows": 0.5
  },
  "generate an": {
    "order": 0.5,
    "appropriate": 0.5
  },
  "order by": {
    "clause": 1.0
  },
  "by clause": {
    "i": 1.0
  },
  "clause i": {
    "n": 1.0
  },
  "view returns": {
    "the": 1.0
  },
  "returns the": {
    "students": 1.0
  },
  "records sorted": {
    "in": 1.0
  },
  "sorted in": {
    "descending": 1.0
  },
  "descending last": {
    "name": 1.0
  },
  "name and": {
    "ascending": 1.0
  },
  "ascending first": {
    "name": 1.0
  },
  "first name": {
    "order": 1.0
  },
  "name order": {
    "myview": 1.0
  },
  "order myview": {
    "view": 1.0
  },
  "students order": {
    "stu": 1.0
  },
  "order stu": {
    "lastname": 1.0
  },
  "firstname project": {
    "stu": 1.0
  },
  "end naturally": {
    "all": 1.0
  },
  "naturally all": {
    "these": 1.0
  },
  "these attributes": {
    "can": 1.0
  },
  "attributes can": {
    "be": 1.0
  },
  "be combined": {
    "so": 1.0
  },
  "combined so": {
    "that": 1.0
  },
  "set returns": {
    "to": 1.0
  },
  "application filtered": {
    "ordered": 1.0
  },
  "filtered ordered": {
    "projected": 1.0
  },
  "ordered projected": {
    "and": 1.0
  },
  "projected and": {
    "joined": 1.0
  },
  "and joined": {
    "by": 1.0
  },
  "joined by": {
    "allowing": 1.0
  },
  "by allowing": {
    "the": 1.0
  },
  "server t": {
    "o": 1.0
  },
  "o do": {
    "this": 1.0
  },
  "do this": {
    "work": 1.0
  },
  "this work": {
    "the": 1.0
  },
  "work the": {
    "only": 1.0
  },
  "only network": {
    "traffic": 1.0
  },
  "traffic generated": {
    "is": 1.0
  },
  "the minimum": {
    "necessary": 1.0
  },
  "minimum necessary": {
    "to": 1.0
  },
  "necessary to": {
    "give": 1.0
  },
  "to give": {
    "the": 1.0
  },
  "give the": {
    "client": 1.0
  },
  "the requested": {
    "data": 1.0
  },
  "statement the": {
    "clarion": 0.3333333333333333,
    "resulting": 0.3333333333333333,
    "not": 0.3333333333333333
  },
  "clarion buffer": {
    "statement": 1.0
  },
  "statement can": {
    "have": 1.0
  },
  "a tremendous": {
    "impact": 1.0
  },
  "tremendous impact": {
    "on": 1.0
  },
  "impact on": {
    "client": 1.0
  },
  "application perfo": {
    "rmance": 1.0
  },
  "perfo rmance": {
    "buffer": 1.0
  },
  "rmance buffer": {
    "tells": 1.0
  },
  "buffer tells": {
    "the": 1.0
  },
  "a buffer": {
    "to": 1.0
  },
  "buffer to": {
    "hold": 1.0
  },
  "hold previously": {
    "read": 1.0
  },
  "previously read": {
    "records": 0.5,
    "pages": 0.5
  },
  "a read": {
    "ahead": 1.0
  },
  "read ahead": {
    "buffer": 0.3333333333333333,
    "buffers": 0.3333333333333333,
    "with": 0.3333333333333333
  },
  "ahead buffer": {
    "for": 1.0
  },
  "for anticipated": {
    "record": 1.0
  },
  "anticipated record": {
    "fetches": 1.0
  },
  "record fetches": {
    "it": 1.0
  },
  "fetches it": {
    "also": 1.0
  },
  "also specifies": {
    "a": 1.0
  },
  "specifies a": {
    "time": 1.0
  },
  "time period": {
    "during": 1.0
  },
  "period during": {
    "which": 1.0
  },
  "during which": {
    "the": 1.0
  },
  "the buffered": {
    "data": 0.5,
    "records": 0.5
  },
  "buffered data": {
    "is": 1.0
  },
  "is considered": {
    "to": 1.0
  },
  "considered to": {
    "be": 1.0
  },
  "be valid": {
    "after": 1.0
  },
  "valid after": {
    "which": 1.0
  },
  "after which": {
    "the": 1.0
  },
  "data i": {
    "s": 1.0
  },
  "s re": {
    "read": 1.0
  },
  "read from": {
    "the": 1.0
  },
  "server when": {
    "the": 1.0
  },
  "driver knows": {
    "it": 1.0
  },
  "knows it": {
    "has": 1.0
  },
  "has buffers": {
    "to": 1.0
  },
  "buffers to": {
    "hold": 1.0
  },
  "hold multiple": {
    "records": 1.0
  },
  "records it": {
    "can": 1.0
  },
  "can optimize": {
    "the": 1.0
  },
  "optimize the": {
    "sql": 1.0
  },
  "statements it": {
    "generates": 1.0
  },
  "generates to": {
    "the": 1.0
  },
  "re cords": {
    "instead": 1.0
  },
  "cords instead": {
    "of": 1.0
  },
  "single record": {
    "at": 1.0
  },
  "time also": {
    "called": 1.0
  },
  "called fat": {
    "fetches": 1.0
  },
  "fat fetches": {
    "the": 1.0
  },
  "fetches the": {
    "net": 1.0
  },
  "the pattern": {
    "of": 1.0
  },
  "pattern of": {
    "network": 1.0
  },
  "of network": {
    "traffic": 1.0
  },
  "traffic from": {
    "many": 1.0
  },
  "from many": {
    "small": 1.0
  },
  "many small": {
    "pie": 1.0
  },
  "small pie": {
    "ces": 1.0
  },
  "pie ces": {
    "of": 1.0
  },
  "ces of": {
    "data": 1.0
  },
  "to fewer": {
    "but": 1.0
  },
  "fewer but": {
    "larger": 1.0
  },
  "but larger": {
    "chunks": 1.0
  },
  "larger chunks": {
    "of": 1.0
  },
  "data making": {
    "for": 1.0
  },
  "making for": {
    "more": 1.0
  },
  "more efficient": {
    "overall": 1.0
  },
  "efficient overall": {
    "network": 1.0
  },
  "overall network": {
    "utilizat": 1.0
  },
  "network utilizat": {
    "ion": 1.0
  },
  "utilizat ion": {
    "the": 1.0
  },
  "ion the": {
    "most": 1.0
  },
  "of buffer": {
    "would": 1.0
  },
  "buffer would": {
    "probably": 1.0
  },
  "in procedures": {
    "which": 1.0
  },
  "which allow": {
    "the": 1.0
  },
  "to browse": {
    "through": 1.0
  },
  "browse through": {
    "the": 1.0
  },
  "database by": {
    "setting": 1.0
  },
  "by setting": {
    "up": 1.0
  },
  "setting up": {
    "buffers": 0.5,
    "read": 0.5
  },
  "up buffers": {
    "to": 1.0
  },
  "hold already": {
    "read": 1.0
  },
  "already read": {
    "records": 1.0
  },
  "client machine": {
    "fetches": 0.5,
    "giving": 0.5
  },
  "machine fetches": {
    "records": 1.0
  },
  "fetches records": {
    "from": 1.0
  },
  "local buffer": {
    "when": 0.5,
    "on": 0.5
  },
  "buffer when": {
    "the": 1.0
  },
  "has page": {
    "d": 1.0
  },
  "page d": {
    "ahead": 1.0
  },
  "d ahead": {
    "then": 1.0
  },
  "ahead then": {
    "returns": 1.0
  },
  "then returns": {
    "to": 1.0
  },
  "previous page": {
    "of": 1.0
  },
  "page of": {
    "records": 1.0
  },
  "records instead": {
    "of": 1.0
  },
  "of generating": {
    "another": 1.0
  },
  "generating another": {
    "request": 1.0
  },
  "another request": {
    "to": 1.0
  },
  "request to": {
    "the": 1.0
  },
  "server for": {
    "the": 0.5,
    "example": 0.5
  },
  "same page": {
    "of": 1.0
  },
  "this eliminates": {
    "the": 1.0
  },
  "eliminates the": {
    "network": 1.0
  },
  "traffic that": {
    "would": 1.0
  },
  "would normally": {
    "be": 1.0
  },
  "normally be": {
    "generated": 1.0
  },
  "be generated": {
    "for": 1.0
  },
  "generated for": {
    "subsequent": 1.0
  },
  "for subsequent": {
    "requests": 1.0
  },
  "subsequent requests": {
    "for": 1.0
  },
  "requests for": {
    "the": 1.0
  },
  "the sam": {
    "e": 1.0
  },
  "sam e": {
    "set": 1.0
  },
  "e set": {
    "of": 1.0
  },
  "records setting": {
    "up": 1.0
  },
  "up read": {
    "ahead": 1.0
  },
  "ahead buffers": {
    "enables": 1.0
  },
  "buffers enables": {
    "the": 1.0
  },
  "enables the": {
    "client": 1.0
  },
  "application to": {
    "anticipate": 1.0
  },
  "to anticipate": {
    "the": 1.0
  },
  "anticipate the": {
    "user": 1.0
  },
  "s request": {
    "for": 1.0
  },
  "request for": {
    "the": 1.0
  },
  "next page": {
    "of": 0.5,
    "those": 0.5
  },
  "and receive": {
    "them": 1.0
  },
  "receive them": {
    "from": 1.0
  },
  "server while": {
    "the": 1.0
  },
  "still examining": {
    "the": 1.0
  },
  "examining the": {
    "first": 1.0
  },
  "first page": {
    "therefore": 1.0
  },
  "page therefore": {
    "wh": 1.0
  },
  "therefore wh": {
    "en": 1.0
  },
  "wh en": {
    "the": 1.0
  },
  "en the": {
    "user": 1.0
  },
  "user finally": {
    "does": 1.0
  },
  "finally does": {
    "request": 1.0
  },
  "does request": {
    "the": 1.0
  },
  "request the": {
    "next": 1.0
  },
  "page those": {
    "records": 1.0
  },
  "also fetched": {
    "from": 1.0
  },
  "fetched from": {
    "the": 1.0
  },
  "buffer on": {
    "the": 1.0
  },
  "machine giving": {
    "the": 1.0
  },
  "giving the": {
    "end": 1.0
  },
  "user apparently": {
    "instantaneous": 1.0
  },
  "apparently instantaneous": {
    "database": 1.0
  },
  "instantaneous database": {
    "retrieval": 1.0
  },
  "database retrieval": {
    "69": 1.0
  },
  "retrieval 69": {
    "developing": 1.0
  },
  "69 developing": {
    "client": 1.0
  },
  "applications for": {
    "example": 1.0
  },
  "following buffer": {
    "statement": 1.0
  },
  "statement tells": {
    "the": 1.0
  },
  "to consider": {
    "10": 0.5,
    "the": 0.5
  },
  "consider 10": {
    "records": 1.0
  },
  "10 records": {
    "as": 1.0
  },
  "records as": {
    "a": 1.0
  },
  "single page": {
    "to": 1.0
  },
  "page to": {
    "buffer": 1.0
  },
  "to buffer": {
    "5": 1.0
  },
  "buffer 5": {
    "previously": 1.0
  },
  "5 previously": {
    "read": 1.0
  },
  "read pages": {
    "to": 1.0
  },
  "pages to": {
    "read": 1.0
  },
  "read 2": {
    "pages": 1.0
  },
  "2 pages": {
    "ahead": 1.0
  },
  "pages ahead": {
    "and": 1.0
  },
  "consider the": {
    "buffered": 1.0
  },
  "buffered records": {
    "valid": 1.0
  },
  "records valid": {
    "for": 1.0
  },
  "for 5": {
    "minutes": 1.0
  },
  "5 minutes": {
    "300": 1.0
  },
  "minutes 300": {
    "seconds": 1.0
  },
  "300 seconds": {
    "buffer": 1.0
  },
  "seconds buffer": {
    "myview": 1.0
  },
  "buffer myview": {
    "10": 1.0
  },
  "myview 10": {
    "5": 1.0
  },
  "10 5": {
    "2": 1.0
  },
  "5 2": {
    "300": 1.0
  },
  "2 300": {
    "10": 1.0
  },
  "300 10": {
    "recs": 1.0
  },
  "10 recs": {
    "per": 1.0
  },
  "recs per": {
    "page": 1.0
  },
  "per page": {
    "5": 1.0
  },
  "page 5": {
    "pages": 1.0
  },
  "5 pages": {
    "behind": 1.0
  },
  "pages behind": {
    "2": 1.0
  },
  "behind 2": {
    "read": 1.0
  },
  "2 read": {
    "ahead": 1.0
  },
  "ahead with": {
    "a": 1.0
  },
  "a 5": {
    "minute": 1.0
  },
  "5 minute": {
    "timeout": 1.0
  },
  "minute timeout": {
    "embedded": 1.0
  },
  "timeout embedded": {
    "sql": 1.0
  },
  "clarion clarion": {
    "s": 1.0
  },
  "technology lets": {
    "the": 1.0
  },
  "lets the": {
    "clarion": 1.0
  },
  "programmer learn": {
    "and": 1.0
  },
  "learn and": {
    "use": 1.0
  },
  "use just": {
    "the": 1.0
  },
  "language s": {
    "file": 1.0
  },
  "file input": {
    "output": 1.0
  },
  "input output": {
    "syntax": 1.0
  },
  "output syntax": {
    "no": 1.0
  },
  "syntax no": {
    "matter": 1.0
  },
  "matter which": {
    "file": 0.5,
    "back": 0.5
  },
  "which file": {
    "system": 1.0
  },
  "system contains": {
    "the": 1.0
  },
  "driver automatically": {
    "converts": 1.0
  },
  "automatically converts": {
    "the": 1.0
  },
  "converts the": {
    "clarion": 1.0
  },
  "language statements": {
    "into": 1.0
  },
  "into whatever": {
    "form": 1.0
  },
  "whatever form": {
    "the": 1.0
  },
  "system requires": {
    "for": 1.0
  },
  "requires for": {
    "its": 1.0
  },
  "for its": {
    "fulfillment": 1.0
  },
  "its fulfillment": {
    "of": 1.0
  },
  "fulfillment of": {
    "data": 1.0
  },
  "data requests": {
    "therefore": 1.0
  },
  "requests therefore": {
    "for": 1.0
  },
  "for file": {
    "drivers": 1.0
  },
  "drivers whic": {
    "h": 1.0
  },
  "h interface": {
    "to": 1.0
  },
  "interface to": {
    "sql": 1.0
  },
  "to sql": {
    "based": 1.0
  },
  "servers the": {
    "file": 1.0
  },
  "driver itsel": {
    "f": 1.0
  },
  "itsel f": {
    "generates": 1.0
  },
  "f generates": {
    "the": 1.0
  },
  "generates the": {
    "necessary": 1.0
  },
  "the necessary": {
    "sql": 1.0
  },
  "necessary sql": {
    "statements": 1.0
  },
  "statements to": {
    "retrieve": 1.0
  },
  "retrieve the": {
    "data": 0.5,
    "result": 0.5
  },
  "data from": {
    "the": 1.0
  },
  "server given": {
    "all": 1.0
  },
  "given all": {
    "the": 1.0
  },
  "driver can": {
    "obtain": 0.5,
    "be": 0.5
  },
  "can obtain": {
    "from": 1.0
  },
  "obtain from": {
    "file": 1.0
  },
  "structure declarations": {
    "view": 0.5,
    "and": 0.5
  },
  "declarations view": {
    "structure": 1.0
  },
  "the resulting": {
    "sql": 1.0
  },
  "resulting sql": {
    "gen": 1.0
  },
  "sql gen": {
    "erated": 1.0
  },
  "gen erated": {
    "by": 1.0
  },
  "erated by": {
    "the": 1.0
  },
  "quite efficient": {
    "however": 1.0
  },
  "efficient however": {
    "there": 1.0
  },
  "are still": {
    "times": 1.0
  },
  "still times": {
    "when": 1.0
  },
  "times when": {
    "an": 1.0
  },
  "an experienced": {
    "and": 1.0
  },
  "experienced and": {
    "knowledgeable": 1.0
  },
  "and knowledgeable": {
    "sql": 1.0
  },
  "knowledgeable sql": {
    "programmer": 1.0
  },
  "sql programmer": {
    "will": 1.0
  },
  "programmer will": {
    "want": 1.0
  },
  "will want": {
    "to": 1.0
  },
  "extend the": {
    "functionality": 1.0
  },
  "functionality of": {
    "the": 1.0
  },
  "driver or": {
    "take": 1.0
  },
  "or take": {
    "full": 1.0
  },
  "control to": {
    "accomplish": 1.0
  },
  "accomplish a": {
    "task": 1.0
  },
  "a task": {
    "that": 1.0
  },
  "best accomplis": {
    "hed": 1.0
  },
  "accomplis hed": {
    "in": 1.0
  },
  "hed in": {
    "sql": 1.0
  },
  "in sql": {
    "some": 0.5,
    "based": 0.5
  },
  "sql some": {
    "task": 1.0
  },
  "some task": {
    "that": 1.0
  },
  "driver would": {
    "not": 1.0
  },
  "not normally": {
    "generate": 1.0
  },
  "normally generate": {
    "such": 1.0
  },
  "generate such": {
    "as": 0.5,
    "simple": 0.5
  },
  "as deleting": {
    "an": 1.0
  },
  "deleting an": {
    "entire": 1.0
  },
  "an entire": {
    "block": 1.0
  },
  "entire block": {
    "of": 1.0
  },
  "block of": {
    "records": 1.0
  },
  "at once": {
    "or": 1.0
  },
  "once or": {
    "updating": 1.0
  },
  "or updating": {
    "a": 1.0
  },
  "updating a": {
    "single": 1.0
  },
  "single field": {
    "in": 1.0
  },
  "all rows": {
    "of": 1.0
  },
  "rows of": {
    "a": 1.0
  },
  "table to": {
    "some": 1.0
  },
  "some new": {
    "value": 1.0
  },
  "value to": {
    "cover": 1.0
  },
  "to cover": {
    "these": 1.0
  },
  "cover these": {
    "circumstances": 1.0
  },
  "these circumstances": {
    "the": 1.0
  },
  "circumstances the": {
    "clarion": 1.0
  },
  "mechanism to": {
    "allow": 1.0
  },
  "allow sending": {
    "any": 1.0
  },
  "sql prop": {
    "sql": 0.5,
    "sqlfilter": 0.5
  },
  "sql the": {
    "syntax": 0.5,
    "advantage": 0.5
  },
  "the syntax": {
    "of": 1.0
  },
  "syntax of": {
    "prop": 1.0
  },
  "of prop": {
    "sql": 1.0
  },
  "as any": {
    "other": 1.0
  },
  "other clarion": {
    "language": 1.0
  },
  "language property": {
    "assignment": 1.0
  },
  "property assignment": {
    "statement": 1.0
  },
  "statement with": {
    "the": 1.0
  },
  "the target": {
    "being": 0.25,
    "of": 0.5,
    "file": 0.25
  },
  "target being": {
    "the": 1.0
  },
  "ny file": {
    "or": 1.0
  },
  "view declaration": {
    "that": 1.0
  },
  "declaration that": {
    "uses": 1.0
  },
  "that uses": {
    "the": 1.0
  },
  "uses the": {
    "sql": 0.5,
    "filter": 0.5
  },
  "example myfile": {
    "prop": 1.0
  },
  "myfile prop": {
    "sql": 1.0
  },
  "select from": {
    "sometable": 1.0
  },
  "from sometable": {
    "this": 1.0
  },
  "sometable this": {
    "statement": 1.0
  },
  "this statement": {
    "sends": 1.0
  },
  "statement sends": {
    "the": 1.0
  },
  "sends the": {
    "specified": 1.0
  },
  "specified sql": {
    "select": 1.0
  },
  "server note": {
    "that": 1.0
  },
  "target of": {
    "prop": 1.0
  },
  "is myfile": {
    "while": 1.0
  },
  "myfile while": {
    "the": 1.0
  },
  "is directed": {
    "to": 1.0
  },
  "directed to": {
    "sometable": 1.0
  },
  "to sometable": {
    "you": 1.0
  },
  "sometable you": {
    "can": 1.0
  },
  "can send": {
    "any": 1.0
  },
  "to prop": {
    "sql": 1.0
  },
  "sql regardless": {
    "of": 1.0
  },
  "regardless of": {
    "whether": 1.0
  },
  "of whether": {
    "the": 1.0
  },
  "whether the": {
    "target": 1.0
  },
  "is affected": {
    "by": 1.0
  },
  "affected by": {
    "the": 1.0
  },
  "target file": {
    "is": 1.0
  },
  "mechanism whereby": {
    "the": 1.0
  },
  "whereby the": {
    "correct": 1.0
  },
  "the correct": {
    "file": 1.0
  },
  "correct file": {
    "driver": 1.0
  },
  "driver processes": {
    "your": 1.0
  },
  "processes your": {
    "sql": 1.0
  },
  "your sql": {
    "since": 1.0
  },
  "sql since": {
    "this": 1.0
  },
  "this sql": {
    "select": 0.5,
    "create": 0.5
  },
  "statement will": {
    "return": 0.5,
    "certainly": 0.5
  },
  "clarion next": {
    "statement": 1.0
  },
  "next statement": {
    "to": 0.5,
    "must": 0.5
  },
  "set one": {
    "record": 1.0
  },
  "declaration referenced": {
    "in": 1.0
  },
  "same number": {
    "of": 1.0
  },
  "of fields": {
    "as": 1.0
  },
  "fields as": {
    "sometab": 1.0
  },
  "as sometab": {
    "le": 1.0
  },
  "sometab le": {
    "obviously": 1.0
  },
  "le obviously": {
    "this": 1.0
  },
  "obviously this": {
    "specific": 1.0
  },
  "this specific": {
    "example": 1.0
  },
  "specific example": {
    "does": 1.0
  },
  "example does": {
    "not": 1.0
  },
  "not demonstrate": {
    "the": 1.0
  },
  "the preferred": {
    "method": 1.0
  },
  "preferred method": {
    "of": 1.0
  },
  "of working": {
    "in": 1.0
  },
  "working in": {
    "clarion": 1.0
  },
  "driver itself": {
    "will": 1.0
  },
  "itself will": {
    "more": 1.0
  },
  "will more": {
    "than": 1.0
  },
  "than adequately": {
    "generate": 1.0
  },
  "adequately generate": {
    "such": 1.0
  },
  "such simple": {
    "sql": 1.0
  },
  "simple sql": {
    "select": 1.0
  },
  "select statements": {
    "for": 1.0
  },
  "statements for": {
    "you": 1.0
  },
  "real usefulness": {
    "of": 1.0
  },
  "usefulness of": {
    "prop": 1.0
  },
  "perform sql": {
    "functions": 1.0
  },
  "sql functions": {
    "that": 1.0
  },
  "functions that": {
    "have": 1.0
  },
  "have no": {
    "direct": 1.0
  },
  "no direct": {
    "corollary": 0.3333333333333333,
    "clarion": 0.6666666666666666
  },
  "direct corollary": {
    "in": 1.0
  },
  "corollary in": {
    "the": 1.0
  },
  "language one": {
    "prime": 1.0
  },
  "one prime": {
    "example": 1.0
  },
  "prime example": {
    "of": 1.0
  },
  "is table": {
    "file": 1.0
  },
  "table file": {
    "creation": 1.0
  },
  "file creation": {
    "on": 1.0
  },
  "creation on": {
    "the": 1.0
  },
  "language create": {
    "statement": 1.0
  },
  "create statement": {
    "will": 0.16666666666666666,
    "to": 0.3333333333333333,
    "is": 0.16666666666666666,
    "specifies": 0.16666666666666666,
    "the": 0.16666666666666666
  },
  "will certainly": {
    "allow": 1.0
  },
  "certainly allow": {
    "you": 1.0
  },
  "create new": {
    "tables": 1.0
  },
  "new tables": {
    "in": 1.0
  },
  "database and": {
    "the": 1.0
  },
  "driver will": {
    "generate": 0.5,
    "append": 0.5
  },
  "an appropriate": {
    "sql": 1.0
  },
  "appropriate sql": {
    "create": 1.0
  },
  "sql create": {
    "statement": 0.6,
    "can": 0.2,
    "table": 0.2
  },
  "the task": {
    "however": 1.0
  },
  "task however": {
    "the": 1.0
  },
  "clarion create": {
    "statement": 1.0
  },
  "information stored": {
    "in": 1.0
  },
  "declaration it": {
    "is": 1.0
  },
  "is much": {
    "better": 1.0
  },
  "much better": {
    "to": 1.0
  },
  "better to": {
    "use": 1.0
  },
  "use prop": {
    "sql": 1.0
  },
  "sql to": {
    "send": 1.0
  },
  "send an": {
    "sql": 1.0
  },
  "an sql": {
    "create": 0.3333333333333333,
    "in": 0.6666666666666666
  },
  "dat abase": {
    "server": 1.0
  },
  "abase server": {
    "because": 1.0
  },
  "server because": {
    "the": 1.0
  },
  "create can": {
    "then": 1.0
  },
  "then implement": {
    "any": 1.0
  },
  "implement any": {
    "data": 1.0
  },
  "validation constraints": {
    "or": 1.0
  },
  "constraints or": {
    "triggers": 1.0
  },
  "or triggers": {
    "that": 1.0
  },
  "triggers that": {
    "the": 1.0
  },
  "server supports": {
    "allowing": 1.0
  },
  "supports allowing": {
    "you": 1.0
  },
  "make full": {
    "use": 1.0
  },
  "full use": {
    "of": 1.0
  },
  "the capabilities": {
    "of": 1.0
  },
  "capabilities of": {
    "the": 1.0
  },
  "code creates": {
    "a": 1.0
  },
  "a stu": {
    "dents": 1.0
  },
  "stu dents": {
    "table": 1.0
  },
  "dents table": {
    "with": 1.0
  },
  "table with": {
    "first": 1.0
  },
  "with first": {
    "and": 1.0
  },
  "first and": {
    "last": 1.0
  },
  "and last": {
    "names": 1.0
  },
  "last names": {
    "major": 1.0
  },
  "names major": {
    "and": 1.0
  },
  "major and": {
    "dormitory": 1.0
  },
  "and dormitory": {
    "assignment": 1.0
  },
  "dormitory assignment": {
    "columns": 1.0
  },
  "assignment columns": {
    "myview": 1.0
  },
  "columns myview": {
    "prop": 1.0
  },
  "myview prop": {
    "sql": 0.3333333333333333,
    "sqlfilter": 0.6666666666666666
  },
  "create table": {
    "students": 1.0
  },
  "table students": {
    "idnumber": 1.0
  },
  "students idnumber": {
    "integer": 1.0
  },
  "idnumber integer": {
    "not": 1.0
  },
  "integer not": {
    "null": 1.0
  },
  "not null": {
    "lastname": 0.2,
    "firstname": 0.2,
    "major": 0.2,
    "dormitory": 0.2,
    "attribute": 0.2
  },
  "null lastname": {
    "v": 1.0
  },
  "lastname v": {
    "archar": 1.0
  },
  "v archar": {
    "25": 1.0
  },
  "archar 25": {
    "not": 1.0
  },
  "25 not": {
    "null": 1.0
  },
  "null firstname": {
    "varchar": 1.0
  },
  "firstname varchar": {
    "25": 1.0
  },
  "varchar 25": {
    "not": 1.0
  },
  "null major": {
    "varchar": 1.0
  },
  "major varchar": {
    "10": 1.0
  },
  "varchar 10": {
    "not": 1.0
  },
  "10 not": {
    "null": 1.0
  },
  "null dormitory": {
    "integer": 1.0
  },
  "dormitory integer": {
    "primary": 1.0
  },
  "integer primary": {
    "key": 1.0
  },
  "key idnumber": {
    "foreign": 1.0
  },
  "idnumber foreign": {
    "key": 1.0
  },
  "key majors_in": {
    "major": 1.0
  },
  "majors_in major": {
    "references": 1.0
  },
  "major references": {
    "majors": 1.0
  },
  "references majors": {
    "on": 1.0
  },
  "majors on": {
    "delete": 1.0
  },
  "delete restrict": {
    "this": 1.0
  },
  "restrict this": {
    "sql": 1.0
  },
  "specifies two": {
    "items": 1.0
  },
  "two items": {
    "that": 1.0
  },
  "items that": {
    "are": 1.0
  },
  "not possible": {
    "to": 1.0
  },
  "specify using": {
    "the": 1.0
  },
  "the not": {
    "null": 1.0
  },
  "null attribute": {
    "specifies": 1.0
  },
  "data must": {
    "be": 1.0
  },
  "be present": {
    "in": 1.0
  },
  "these columns": {
    "whenever": 1.0
  },
  "columns whenever": {
    "a": 1.0
  },
  "whenever a": {
    "new": 1.0
  },
  "new record": {
    "is": 1.0
  },
  "delete clau": {
    "se": 1.0
  },
  "clau se": {
    "specifies": 1.0
  },
  "se specifies": {
    "that": 1.0
  },
  "the restrict": {
    "referential": 1.0
  },
  "restrict referential": {
    "integrity": 1.0
  },
  "integrity constraint": {
    "applies": 1.0
  },
  "constraint applies": {
    "when": 1.0
  },
  "applies when": {
    "deleting": 1.0
  },
  "deleting a": {
    "majors": 1.0
  },
  "a majors": {
    "record": 1.0
  },
  "majors record": {
    "so": 1.0
  },
  "record so": {
    "that": 1.0
  },
  "no student": {
    "record": 1.0
  },
  "student record": {
    "can": 1.0
  },
  "record can": {
    "have": 1.0
  },
  "a major": {
    "field": 1.0
  },
  "major field": {
    "value": 1.0
  },
  "that doesn": {
    "t": 1.0
  },
  "the majors": {
    "table": 1.0
  },
  "majors table": {
    "clarion": 1.0
  },
  "table clarion": {
    "language": 1.0
  },
  "guide 70": {
    "another": 1.0
  },
  "70 another": {
    "primary": 1.0
  },
  "another primary": {
    "use": 1.0
  },
  "primary use": {
    "of": 1.0
  },
  "call any": {
    "stored": 1.0
  },
  "any stored": {
    "proc": 1.0
  },
  "stored proc": {
    "edures": 1.0
  },
  "proc edures": {
    "that": 1.0
  },
  "edures that": {
    "you": 1.0
  },
  "have created": {
    "in": 1.0
  },
  "created in": {
    "your": 1.0
  },
  "your back": {
    "end": 1.0
  },
  "most sql": {
    "based": 1.0
  },
  "servers a": {
    "stored": 1.0
  },
  "a stored": {
    "procedure": 1.0
  },
  "stored procedure": {
    "is": 1.0
  },
  "a pre": {
    "compiled": 1.0
  },
  "pre compiled": {
    "set": 1.0
  },
  "compiled set": {
    "of": 1.0
  },
  "of sql": {
    "statements": 1.0
  },
  "to pre": {
    "define": 1.0
  },
  "pre define": {
    "actions": 1.0
  },
  "define actions": {
    "for": 1.0
  },
  "actions for": {
    "the": 1.0
  },
  "engine to": {
    "take": 1.0
  },
  "take when": {
    "the": 1.0
  },
  "called since": {
    "stored": 1.0
  },
  "since stored": {
    "procedures": 1.0
  },
  "procedures are": {
    "a": 1.0
  },
  "database they": {
    "can": 1.0
  },
  "they can": {
    "be": 1.0
  },
  "any application": {
    "that": 1.0
  },
  "application that": {
    "accesses": 1.0
  },
  "that accesses": {
    "the": 1.0
  },
  "accesses the": {
    "database": 1.0
  },
  "database which": {
    "helps": 1.0
  },
  "which helps": {
    "enforce": 1.0
  },
  "helps enforce": {
    "consistent": 1.0
  },
  "enforce consistent": {
    "interaction": 1.0
  },
  "consistent interaction": {
    "with": 1.0
  },
  "interaction with": {
    "the": 1.0
  },
  "database across": {
    "all": 1.0
  },
  "across all": {
    "applications": 1.0
  },
  "applications prop": {
    "sqlfilter": 1.0
  },
  "sqlfilter prop": {
    "sqlfilter": 1.0
  },
  "is ver": {
    "y": 1.0
  },
  "ver y": {
    "similar": 1.0
  },
  "y similar": {
    "to": 1.0
  },
  "sqlfilter allows": {
    "you": 1.0
  },
  "a filter": {
    "condition": 1.0
  },
  "filter condition": {
    "for": 0.25,
    "overrides": 0.25,
    "to": 0.5
  },
  "condition for": {
    "a": 1.0
  },
  "structure using": {
    "sql": 1.0
  },
  "using sql": {
    "syntax": 1.0
  },
  "sql syntax": {
    "instead": 1.0
  },
  "syntax instead": {
    "of": 1.0
  },
  "syntax required": {
    "in": 1.0
  },
  "attribute by": {
    "default": 1.0
  },
  "default the": {
    "prop": 1.0
  },
  "the prop": {
    "sqlfilter": 1.0
  },
  "sqlfilter filter": {
    "condition": 1.0
  },
  "condition overrides": {
    "any": 1.0
  },
  "overrides any": {
    "expression": 1.0
  },
  "any expression": {
    "i": 0.5,
    "which": 0.5
  },
  "expression i": {
    "n": 1.0
  },
  "attribute however": {
    "by": 1.0
  },
  "however by": {
    "beginning": 1.0
  },
  "by beginning": {
    "your": 1.0
  },
  "beginning your": {
    "prop": 1.0
  },
  "your prop": {
    "sqlfilter": 1.0
  },
  "sqlfilter expression": {
    "with": 1.0
  },
  "expression with": {
    "a": 1.0
  },
  "a plus": {
    "sign": 1.0
  },
  "plus sign": {
    "the": 1.0
  },
  "sign the": {
    "file": 1.0
  },
  "will append": {
    "your": 1.0
  },
  "sqlfilter statement": {
    "to": 1.0
  },
  "attribute s": {
    "generated": 1.0
  },
  "s generated": {
    "sql": 1.0
  },
  "using prop": {
    "sqlfilter": 1.0
  },
  "sqlfilter instead": {
    "of": 1.0
  },
  "the filt": {
    "er": 1.0
  },
  "filt er": {
    "attribute": 1.0
  },
  "er attribute": {
    "is": 1.0
  },
  "the where": {
    "clause": 1.0
  },
  "database specific": {
    "or": 1.0
  },
  "specific or": {
    "sql": 1.0
  },
  "or sql": {
    "specific": 1.0
  },
  "sql specific": {
    "capabilities": 1.0
  },
  "specific capabilities": {
    "that": 1.0
  },
  "capabilities that": {
    "you": 1.0
  },
  "can include": {
    "by": 1.0
  },
  "include by": {
    "using": 1.0
  },
  "using your": {
    "own": 1.0
  },
  "sql such": {
    "as": 1.0
  },
  "in clause": {
    "for": 0.5,
    "to": 0.5
  },
  "clause for": {
    "example": 1.0
  },
  "code uses": {
    "a": 0.5,
    "the": 0.5
  },
  "uses a": {
    "filter": 1.0
  },
  "condition to": {
    "limit": 1.0
  },
  "to limit": {
    "the": 1.0
  },
  "view to": {
    "only": 1.0
  },
  "only tho": {
    "se": 1.0
  },
  "tho se": {
    "students": 1.0
  },
  "se students": {
    "with": 1.0
  },
  "students with": {
    "computer": 1.0
  },
  "with computer": {
    "science": 1.0
  },
  "computer science": {
    "as": 0.3333333333333333,
    "project": 0.3333333333333333,
    "both": 0.16666666666666666,
    "students": 0.16666666666666666
  },
  "science as": {
    "their": 1.0
  },
  "as their": {
    "major": 1.0
  },
  "their major": {
    "myview": 0.5,
    "then": 0.5
  },
  "major myview": {
    "view": 1.0
  },
  "major computer": {
    "science": 1.0
  },
  "science project": {
    "stu": 1.0
  },
  "code replaces": {
    "the": 1.0
  },
  "replaces the": {
    "filter": 1.0
  },
  "filter with": {
    "prop": 1.0
  },
  "with prop": {
    "sqlfilter": 1.0
  },
  "sqlfilter myview": {
    "vi": 1.0
  },
  "myview vi": {
    "ew": 1.0
  },
  "vi ew": {
    "students": 1.0
  },
  "ew students": {
    "project": 1.0
  },
  "open myview": {
    "myview": 1.0
  },
  "myview myview": {
    "prop": 1.0
  },
  "sqlfilter students": {
    "major": 0.5,
    "dormitory": 0.5
  },
  "students major": {
    "computer": 1.0
  },
  "science both": {
    "of": 1.0
  },
  "examples return": {
    "the": 1.0
  },
  "return the": {
    "same": 0.5,
    "back": 0.5
  },
  "same result": {
    "set": 1.0
  },
  "to your": {
    "clarion": 1.0
  },
  "clarion application": {
    "the": 1.0
  },
  "the fo": {
    "llowing": 1.0
  },
  "fo llowing": {
    "code": 1.0
  },
  "llowing code": {
    "uses": 1.0
  },
  "major then": {
    "appends": 1.0
  },
  "then appends": {
    "an": 1.0
  },
  "appends an": {
    "sql": 1.0
  },
  "generated where": {
    "clause": 1.0
  },
  "to further": {
    "limit": 1.0
  },
  "further limit": {
    "the": 1.0
  },
  "those computer": {
    "science": 1.0
  },
  "science students": {
    "who": 1.0
  },
  "students who": {
    "also": 1.0
  },
  "who also": {
    "live": 1.0
  },
  "also live": {
    "in": 1.0
  },
  "live in": {
    "dormitories": 1.0
  },
  "in dormitories": {
    "1": 1.0
  },
  "dormitories 1": {
    "5": 1.0
  },
  "5 or": {
    "9": 1.0
  },
  "or 9": {
    "myview": 1.0
  },
  "9 myview": {
    "view": 1.0
  },
  "major stu": {
    "dormitory": 1.0
  },
  "stu dormitory": {
    "end": 1.0
  },
  "dormitory end": {
    "code": 1.0
  },
  "students dormitory": {
    "i": 1.0
  },
  "dormitory i": {
    "n": 1.0
  },
  "n 1": {
    "5": 1.0
  },
  "5 9": {
    "null": 1.0
  },
  "9 null": {
    "data": 1.0
  },
  "handling one": {
    "concept": 1.0
  },
  "one concept": {
    "common": 1.0
  },
  "concept common": {
    "in": 1.0
  },
  "common in": {
    "sql": 1.0
  },
  "servers is": {
    "the": 1.0
  },
  "of null": {
    "data": 1.0
  },
  "a null": {
    "value": 1.0
  },
  "view indicates": {
    "that": 1.0
  },
  "indicates that": {
    "the": 1.0
  },
  "has never": {
    "entered": 0.5,
    "had": 0.5
  },
  "never entered": {
    "data": 1.0
  },
  "entered data": {
    "into": 1.0
  },
  "field null": {
    "actually": 1.0
  },
  "null actually": {
    "means": 1.0
  },
  "actually means": {
    "value": 1.0
  },
  "means value": {
    "not": 1.0
  },
  "value not": {
    "known": 1.0
  },
  "not known": {
    "for": 1.0
  },
  "known for": {
    "the": 1.0
  },
  "field this": {
    "is": 1.0
  },
  "completely different": {
    "from": 1.0
  },
  "different from": {
    "a": 1.0
  },
  "a blank": {
    "or": 1.0
  },
  "zero value": {
    "and": 0.5,
    "the": 0.5
  },
  "to detect": {
    "the": 0.3333333333333333,
    "whether": 0.3333333333333333,
    "any": 0.3333333333333333
  },
  "detect the": {
    "difference": 1.0
  },
  "never had": {
    "data": 1.0
  },
  "had data": {
    "and": 1.0
  },
  "a true": {
    "blank": 1.0
  },
  "true blank": {
    "or": 1.0
  },
  "supports null": {
    "data": 1.0
  },
  "handling through": {
    "the": 1.0
  },
  "the null": {
    "setnull": 0.5,
    "field": 0.5
  },
  "null setnull": {
    "and": 1.0
  },
  "setnull and": {
    "setnonull": 1.0
  },
  "and setnonull": {
    "procedures": 1.0
  },
  "setnonull procedures": {
    "in": 1.0
  },
  "procedures in": {
    "expressions": 1.0
  },
  "in expressions": {
    "null": 1.0
  },
  "expressions null": {
    "does": 1.0
  },
  "null does": {
    "not": 1.0
  },
  "not equal": {
    "blank": 1.0
  },
  "equal blank": {
    "or": 1.0
  },
  "zero therefore": {
    "any": 1.0
  },
  "therefore any": {
    "expression": 1.0
  },
  "expression which": {
    "compares": 1.0
  },
  "which compares": {
    "the": 1.0
  },
  "compares the": {
    "value": 1.0
  },
  "field from": {
    "a": 1.0
  },
  "view with": {
    "another": 1.0
  },
  "with another": {
    "value": 1.0
  },
  "another value": {
    "will": 1.0
  },
  "value will": {
    "always": 1.0
  },
  "always evaluate": {
    "as": 1.0
  },
  "evaluate as": {
    "unknown": 0.5,
    "true": 0.5
  },
  "as unknown": {
    "if": 0.2,
    "unknown": 0.4,
    "1": 0.2,
    "71": 0.2
  },
  "unknown if": {
    "the": 1.0
  },
  "is null": {
    "this": 0.3333333333333333,
    "or": 0.6666666666666666
  },
  "null this": {
    "is": 1.0
  },
  "true even": {
    "if": 1.0
  },
  "even if": {
    "the": 1.0
  },
  "of both": {
    "elements": 1.0
  },
  "both elements": {
    "in": 1.0
  },
  "elements in": {
    "the": 1.0
  },
  "the expression": {
    "are": 0.3333333333333333,
    "is": 0.3333333333333333,
    "meets": 0.3333333333333333
  },
  "expression are": {
    "unknown": 1.0
  },
  "are unknown": {
    "null": 1.0
  },
  "unknown null": {
    "values": 1.0
  },
  "the conditional": {
    "expression": 1.0
  },
  "expression pre": {
    "field1": 1.0
  },
  "pre field1": {
    "pre": 1.0
  },
  "field1 pre": {
    "field2": 1.0
  },
  "pre field2": {
    "will": 1.0
  },
  "field2 will": {
    "evaluate": 1.0
  },
  "will evaluate": {
    "as": 1.0
  },
  "as true": {
    "only": 0.25,
    "or": 0.25,
    "true": 0.25,
    "unknown": 0.25
  },
  "true only": {
    "if": 1.0
  },
  "both fields": {
    "con": 0.5,
    "are": 0.5
  },
  "fields con": {
    "tain": 1.0
  },
  "con tain": {
    "known": 1.0
  },
  "tain known": {
    "values": 1.0
  },
  "known values": {
    "if": 1.0
  },
  "are null": {
    "the": 1.0
  },
  "null the": {
    "result": 1.0
  },
  "expression is": {
    "also": 0.5,
    "unknown": 0.5
  },
  "also unknown": {
    "known": 1.0
  },
  "unknown known": {
    "known": 1.0
  },
  "known known": {
    "evaluates": 1.0
  },
  "known evaluates": {
    "as": 1.0
  },
  "evaluates as": {
    "true": 0.3333333333333333,
    "unknown": 0.4444444444444444,
    "false": 0.2222222222222222
  },
  "false known": {
    "unknown": 1.0
  },
  "known unknown": {
    "evaluates": 1.0
  },
  "unknown evaluates": {
    "as": 1.0
  },
  "unknown unknown": {
    "unknown": 0.3333333333333333,
    "evaluates": 0.3333333333333333,
    "10": 0.3333333333333333
  },
  "unknown 10": {
    "evaluates": 1.0
  },
  "10 evaluates": {
    "as": 1.0
  },
  "unknown 1": {
    "unknown": 1.0
  },
  "1 unknown": {
    "evaluates": 1.0
  },
  "unknown 71": {
    "developing": 1.0
  },
  "71 developing": {
    "client": 1.0
  },
  "only four": {
    "exceptions": 1.0
  },
  "four exceptions": {
    "to": 1.0
  },
  "exceptions to": {
    "this": 1.0
  },
  "this rule": {
    "are": 1.0
  },
  "rule are": {
    "boolean": 1.0
  },
  "are boolean": {
    "expressions": 1.0
  },
  "boolean expressions": {
    "using": 1.0
  },
  "expressions using": {
    "or": 1.0
  },
  "using or": {
    "and": 1.0
  },
  "or and": {
    "and": 1.0
  },
  "and and": {
    "where": 1.0
  },
  "and where": {
    "only": 1.0
  },
  "where only": {
    "one": 1.0
  },
  "one portion": {
    "of": 1.0
  },
  "portion of": {
    "the": 1.0
  },
  "entire expression": {
    "is": 1.0
  },
  "is unknown": {
    "and": 1.0
  },
  "unknown and": {
    "the": 0.5,
    "false": 0.5
  },
  "other portion": {
    "of": 1.0
  },
  "expression meets": {
    "th": 1.0
  },
  "meets th": {
    "e": 1.0
  },
  "e expression": {
    "criteria": 1.0
  },
  "expression criteria": {
    "unknown": 1.0
  },
  "criteria unknown": {
    "or": 1.0
  },
  "unknown or": {
    "true": 1.0
  },
  "or true": {
    "evaluates": 1.0
  },
  "true evaluates": {
    "as": 1.0
  },
  "true true": {
    "or": 1.0
  },
  "or unknown": {
    "evaluates": 1.0
  },
  "true unknown": {
    "and": 1.0
  },
  "and false": {
    "evaluates": 1.0
  },
  "false evaluates": {
    "as": 1.0
  },
  "as false": {
    "false": 0.5,
    "support": 0.5
  },
  "false false": {
    "and": 1.0
  },
  "false and": {
    "unknown": 1.0
  },
  "and unknown": {
    "evaluates": 1.0
  },
  "false support": {
    "for": 1.0
  },
  "support for": {
    "null": 1.0
  },
  "for null": {
    "values": 1.0
  },
  "is entirely": {
    "depende": 1.0
  },
  "entirely depende": {
    "nt": 1.0
  },
  "depende nt": {
    "upon": 1.0
  },
  "nt upon": {
    "the": 1.0
  },
  "driver most": {
    "sql": 1.0
  },
  "database systems": {
    "support": 1.0
  },
  "systems support": {
    "the": 1.0
  },
  "null field": {
    "concept": 0.5,
    "still": 0.5
  },
  "field concept": {
    "while": 1.0
  },
  "concept while": {
    "most": 1.0
  },
  "while most": {
    "non": 1.0
  },
  "most non": {
    "sql": 1.0
  },
  "non sql": {
    "databases": 1.0
  },
  "databases do": {
    "not": 1.0
  },
  "not you": {
    "use": 1.0
  },
  "clarion null": {
    "procedure": 1.0
  },
  "null procedure": {
    "to": 1.0
  },
  "detect whether": {
    "a": 1.0
  },
  "whether a": {
    "data": 0.5,
    "field": 0.5
  },
  "item returned": {
    "from": 1.0
  },
  "returned from": {
    "the": 1.0
  },
  "null or": {
    "not": 1.0
  },
  "any field": {
    "s": 1.0
  },
  "should remain": {
    "null": 1.0
  },
  "remain null": {
    "when": 1.0
  },
  "re write": {
    "the": 1.0
  },
  "database you": {
    "must": 1.0
  },
  "must explicitly": {
    "call": 1.0
  },
  "call setnull": {
    "just": 1.0
  },
  "setnull just": {
    "before": 1.0
  },
  "data back": {
    "to": 0.5,
    "error": 0.5
  },
  "database for": {
    "example": 1.0
  },
  "example next": {
    "mytable": 1.0
  },
  "next mytable": {
    "get": 1.0
  },
  "mytable get": {
    "data": 1.0
  },
  "get data": {
    "myfieldflag": 1.0
  },
  "data myfieldflag": {
    "null": 1.0
  },
  "myfieldflag null": {
    "myfield": 1.0
  },
  "null myfield": {
    "remember": 1.0
  },
  "myfield remember": {
    "whether": 1.0
  },
  "remember whether": {
    "a": 1.0
  },
  "not process": {
    "the": 1.0
  },
  "data if": {
    "myfieldflag": 1.0
  },
  "if myfieldflag": {
    "and": 1.0
  },
  "myfieldflag and": {
    "not": 1.0
  },
  "not myfield": {
    "detect": 1.0
  },
  "myfield detect": {
    "null": 1.0
  },
  "detect null": {
    "field": 1.0
  },
  "field still": {
    "empty": 1.0
  },
  "still empty": {
    "setnull": 1.0
  },
  "empty setnull": {
    "myfield": 1.0
  },
  "setnull myfield": {
    "and": 1.0
  },
  "myfield and": {
    "reset": 1.0
  },
  "and reset": {
    "it": 1.0
  },
  "reset it": {
    "to": 1.0
  },
  "null end": {
    "put": 1.0
  },
  "end put": {
    "mytable": 1.0
  },
  "put mytable": {
    "write": 1.0
  },
  "mytable write": {
    "the": 1.0
  },
  "back error": {
    "handli": 1.0
  },
  "error handli": {
    "ng": 1.0
  },
  "handli ng": {
    "whenever": 1.0
  },
  "ng whenever": {
    "any": 1.0
  },
  "whenever any": {
    "i": 1.0
  },
  "any i": {
    "o": 1.0
  },
  "o operation": {
    "executes": 1.0
  },
  "operation executes": {
    "there": 1.0
  },
  "executes there": {
    "is": 1.0
  },
  "error condition": {
    "occurring": 1.0
  },
  "condition occurring": {
    "no": 1.0
  },
  "occurring no": {
    "matter": 1.0
  },
  "which back": {
    "end": 1.0
  },
  "that database": {
    "maps": 1.0
  },
  "database maps": {
    "the": 1.0
  },
  "maps the": {
    "most": 1.0
  },
  "common errors": {
    "to": 1.0
  },
  "errors to": {
    "the": 1.0
  },
  "the appropria": {
    "te": 1.0
  },
  "appropria te": {
    "standard": 1.0
  },
  "te standard": {
    "clarion": 1.0
  },
  "clarion error": {
    "codes": 1.0
  },
  "error codes": {
    "however": 1.0
  },
  "codes however": {
    "there": 1.0
  },
  "always some": {
    "errors": 1.0
  },
  "some errors": {
    "for": 1.0
  },
  "errors for": {
    "which": 1.0
  },
  "for which": {
    "there": 1.0
  },
  "which there": {
    "is": 1.0
  },
  "direct clarion": {
    "equivalent": 1.0
  },
  "clarion equivalent": {
    "whenever": 0.5,
    "the": 0.5
  },
  "equivalent whenever": {
    "an": 1.0
  },
  "whenever an": {
    "error": 1.0
  },
  "error occurs": {
    "for": 1.0
  },
  "occurs for": {
    "which": 1.0
  },
  "clarion errorcode": {
    "procedure": 0.5,
    "is": 0.5
  },
  "errorcode procedure": {
    "returns": 1.0
  },
  "procedure returns": {
    "90": 1.0
  },
  "returns 90": {
    "and": 1.0
  },
  "90 and": {
    "the": 1.0
  },
  "the error": {
    "proc": 1.0
  },
  "error proc": {
    "edure": 1.0
  },
  "proc edure": {
    "returns": 1.0
  },
  "edure returns": {
    "file": 1.0
  },
  "returns file": {
    "driver": 1.0
  },
  "driver error": {
    "to": 1.0
  },
  "error to": {
    "determine": 1.0
  },
  "exact error": {
    "returned": 1.0
  },
  "error returned": {
    "by": 1.0
  },
  "clarion provides": {
    "the": 1.0
  },
  "the fileerrorcode": {
    "and": 1.0
  },
  "fileerrorcode and": {
    "fileerror": 1.0
  },
  "and fileerror": {
    "procedures": 1.0
  },
  "fileerror procedures": {
    "the": 0.5,
    "return": 0.5
  },
  "procedures return": {
    "the": 1.0
  },
  "server s": {
    "error": 0.5,
    "documentation": 0.5
  },
  "s error": {
    "values": 1.0
  },
  "error values": {
    "when": 1.0
  },
  "values when": {
    "the": 1.0
  },
  "current clarion": {
    "errorcode": 1.0
  },
  "errorcode is": {
    "90": 1.0
  },
  "is 90": {
    "this": 1.0
  },
  "90 this": {
    "allows": 1.0
  },
  "detect any": {
    "error": 1.0
  },
  "any error": {
    "the": 1.0
  },
  "error the": {
    "database": 1.0
  },
  "can issue": {
    "then": 1.0
  },
  "issue then": {
    "look": 1.0
  },
  "look in": {
    "the": 1.0
  },
  "documentation for": {
    "the": 1.0
  },
  "the possible": {
    "causes": 1.0
  },
  "possible causes": {
    "and": 1.0
  },
  "causes and": {
    "remedies": 1.0
  },
  "and remedies": {
    "for": 1.0
  },
  "remedies for": {
    "whatever": 1.0
  },
  "for whatever": {
    "error": 1.0
  },
  "whatever error": {
    "has": 1.0
  },
  "error has": {
    "occurred": 1.0
  },
  "has occurred": {
    "clarion": 1.0
  },
  "occurred clarion": {
    "language": 1.0
  },
  "guide 72": {
    "index": 1.0
  },
  "72 index": {
    "73": 1.0
  },
  "73 index": {
    "dynamic": 1.0
  },
  "49 base": {
    "class": 1.0
  },
  "class 16": {
    "buffer": 0.5,
    "destructors": 0.5
  },
  "16 buffer": {
    "68": 1.0
  },
  "buffer 68": {
    "cascade": 1.0
  },
  "68 cascade": {
    "45": 1.0
  },
  "cascade 45": {
    "clarion": 1.0
  },
  "45 clarion": {
    "and": 1.0
  },
  "66 class": {
    "12": 1.0
  },
  "class 12": {
    "26": 1.0
  },
  "12 26": {
    "class": 1.0
  },
  "27 client": {
    "server": 1.0
  },
  "65 composition": {
    "17": 1.0
  },
  "17 35": {
    "concurrency": 1.0
  },
  "35 concurrency": {
    "checking": 1.0
  },
  "56 constructors": {
    "14": 1.0
  },
  "constructors 14": {
    "29": 1.0
  },
  "14 29": {
    "creating": 1.0
  },
  "29 creating": {
    "objects": 1.0
  },
  "27 data": {
    "declaration": 1.0
  },
  "declaration 5": {
    "data": 1.0
  },
  "67 database": {
    "design": 1.0
  },
  "39 deadly": {
    "embrace": 1.0
  },
  "63 derived": {
    "class": 1.0
  },
  "16 destructors": {
    "29": 1.0
  },
  "29 destructors": {
    "14": 1.0
  },
  "14 dispose": {
    "14": 1.0
  },
  "dispose 14": {
    "dss": 1.0
  },
  "14 dss": {
    "65": 1.0
  },
  "dss 65": {
    "embedded": 1.0
  },
  "65 embedded": {
    "sql": 1.0
  },
  "sql 69": {
    "encapsulation": 1.0
  },
  "69 encapsulation": {
    "12": 1.0
  },
  "encapsulation 12": {
    "25": 1.0
  },
  "12 25": {
    "error": 1.0
  },
  "25 error": {
    "handling": 1.0
  },
  "71 field": {
    "qualification": 1.0
  },
  "14 file": {
    "access": 1.0
  },
  "40 fileerror": {
    "71": 1.0
  },
  "fileerror 71": {
    "fileerrorcode": 1.0
  },
  "71 fileerrorcode": {
    "71": 1.0
  },
  "fileerrorcode 71": {
    "filter": 1.0
  },
  "71 filter": {
    "68": 1.0
  },
  "filter 68": {
    "foreign": 1.0
  },
  "68 foreign": {
    "key": 1.0
  },
  "key 39": {
    "hold": 1.0
  },
  "39 hold": {
    "60": 1.0
  },
  "hold 60": {
    "index": 1.0
  },
  "60 index": {
    "49": 1.0
  },
  "49 inheritance": {
    "31": 1.0
  },
  "31 inheritance": {
    "16": 1.0
  },
  "16 25": {
    "instantiation": 1.0
  },
  "25 instantiation": {
    "12": 1.0
  },
  "instantiation 12": {
    "13": 1.0
  },
  "12 13": {
    "key": 1.0
  },
  "13 key": {
    "49": 1.0
  },
  "key 49": {
    "late": 1.0
  },
  "49 late": {
    "binding": 1.0
  },
  "binding 26": {
    "late": 1.0
  },
  "26 late": {
    "binding": 1.0
  },
  "23 37": {
    "lock": 1.0
  },
  "37 lock": {
    "62": 1.0
  },
  "lock 62": {
    "map": 1.0
  },
  "62 map": {
    "5": 1.0
  },
  "5 member": {
    "6": 1.0
  },
  "6 multiple": {
    "inheritance": 1.0
  },
  "17 multi": {
    "user": 1.0
  },
  "55 network": {
    "traffic": 1.0
  },
  "66 null": {
    "data": 1.0
  },
  "70 nullify": {
    "the": 1.0
  },
  "46 object": {
    "oriented": 1.0
  },
  "programming 11": {
    "objects": 1.0
  },
  "11 objects": {
    "25": 1.0
  },
  "25 oltp": {
    "65": 1.0
  },
  "oltp 65": {
    "oop": 1.0
  },
  "65 oop": {
    "11": 1.0
  },
  "oop 11": {
    "opening": 1.0
  },
  "55 order": {
    "68": 1.0
  },
  "order 68": {
    "overriding": 1.0
  },
  "68 overriding": {
    "32": 1.0
  },
  "overriding 32": {
    "parent": 1.0
  },
  "32 parent": {
    "19": 1.0
  },
  "20 26": {
    "36": 1.0
  },
  "26 36": {
    "private": 1.0
  },
  "36 private": {
    "15": 1.0
  },
  "private 15": {
    "29": 1.0
  },
  "15 29": {
    "30": 1.0
  },
  "29 30": {
    "procedure": 0.5,
    "public": 0.5
  },
  "30 procedure": {
    "5": 1.0
  },
  "procedure 5": {
    "procedure": 1.0
  },
  "5 procedure": {
    "overloading": 1.0
  },
  "overloading 20": {
    "program": 1.0
  },
  "20 program": {
    "5": 1.0
  },
  "program 5": {
    "project": 1.0
  },
  "5 project": {
    "67": 1.0
  },
  "project 67": {
    "prop": 1.0
  },
  "67 prop": {
    "sql": 1.0
  },
  "66 69": {
    "prop": 1.0
  },
  "69 prop": {
    "sqlfilter": 1.0
  },
  "sqlfilter 70": {
    "protected": 1.0
  },
  "70 protected": {
    "18": 1.0
  },
  "protected 18": {
    "29": 1.0
  },
  "18 29": {
    "30": 1.0
  },
  "30 public": {
    "29": 1.0
  },
  "public 29": {
    "random": 1.0
  },
  "29 random": {
    "file": 1.0
  },
  "52 reference": {
    "variables": 1.0
  },
  "variables 28": {
    "referential": 1.0
  },
  "28 referential": {
    "integrity": 1.0
  },
  "43 66": {
    "relational": 1.0
  },
  "66 relational": {
    "database": 1.0
  },
  "39 release": {
    "60": 1.0
  },
  "60 replace": {
    "33": 1.0
  },
  "replace 33": {
    "restrict": 1.0
  },
  "33 restrict": {
    "44": 1.0
  },
  "restrict 44": {
    "self": 1.0
  },
  "44 self": {
    "14": 1.0
  },
  "self 14": {
    "clarion": 1.0
  },
  "14 clarion": {
    "language": 1.0
  },
  "guide 74": {
    "sequential": 1.0
  },
  "74 sequential": {
    "file": 1.0
  },
  "50 unlock": {
    "62": 1.0
  },
  "62 variables": {
    "5": 1.0
  },
  "variables 5": {
    "view": 1.0
  },
  "5 view": {
    "67": 1.0
  },
  "view 67": {
    "virtual": 1.0
  },
  "67 virtual": {
    "methods": 1.0
  }
}